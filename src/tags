!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.7	//
ADD	language/parse.c	21;"	d	file:
ALIASREC	unicode/unifont.c	/^struct ALIASREC {$/;"	s	file:
ALIASREC	unicode/unifont.c	/^typedef struct ALIASREC ALIASREC;$/;"	t	typeref:struct:ALIASREC	file:
ALIASREC	unicode/virtread.c	/^struct ALIASREC {$/;"	s	file:
ALIASREC	unicode/virtread.c	/^typedef struct ALIASREC ALIASREC;$/;"	t	typeref:struct:ALIASREC	file:
ALL	language/parse.c	73;"	d	file:
ALLCFLAGS	documents/Makefile	/^ALLCFLAGS = $(CFLAGS) $(DEFS) $(INCLUDES) $(X_CFLAGS)$/;"	m
ALLCFLAGS	include/Makefile	/^ALLCFLAGS = $(CFLAGS) $(DEFS) $(INCLUDES) $(X_CFLAGS)$/;"	m
ALLCFLAGS	keyboard/Makefile	/^ALLCFLAGS = $(CFLAGS) $(DEFS) $(INCLUDES) $(X_CFLAGS)$/;"	m
ALLCFLAGS	language/Makefile	/^ALLCFLAGS = $(CFLAGS) $(DEFS) $(INCLUDES) $(X_CFLAGS)$/;"	m
ALLCFLAGS	markup/Makefile	/^ALLCFLAGS = $(CFLAGS) $(DEFS) $(INCLUDES) $(X_CFLAGS)$/;"	m
ALLCFLAGS	module/Makefile	/^ALLCFLAGS = $(CFLAGS) $(DEFS) $(INCLUDES) $(X_CFLAGS)$/;"	m
ALLCFLAGS	output/Makefile	/^ALLCFLAGS = $(CFLAGS) $(DEFS) $(INCLUDES) $(X_CFLAGS)$/;"	m
ALLCFLAGS	templates/Makefile	/^ALLCFLAGS = $(CFLAGS) $(DEFS) $(INCLUDES) $(X_CFLAGS)$/;"	m
ALLCFLAGS	tools/Makefile	/^ALLCFLAGS = $(CFLAGS) $(DEFS) $(INCLUDES) $(X_CFLAGS)$/;"	m
ALLCFLAGS	treeedit/Makefile	/^ALLCFLAGS = $(CFLAGS) $(DEFS) $(INCLUDES) $(X_CFLAGS)$/;"	m
ALLCFLAGS	unicode/Makefile	/^ALLCFLAGS = $(CFLAGS) $(DEFS) $(INCLUDES) $(X_CFLAGS)$/;"	m
ALLCFLAGS	util/Makefile	/^ALLCFLAGS = $(CFLAGS) $(DEFS) $(INCLUDES) $(X_CFLAGS)$/;"	m
ALLCFLAGS	windows/Makefile	/^ALLCFLAGS = $(CFLAGS) $(DEFS) $(INCLUDES) $(X_CFLAGS)$/;"	m
ALLCXXFLAGS	documents/Makefile	/^ALLCXXFLAGS = $(CXXFLAGS) $(DEFS) $(INCLUDES) $(X_CFLAGS)$/;"	m
ALLCXXFLAGS	include/Makefile	/^ALLCXXFLAGS = $(CXXFLAGS) $(DEFS) $(INCLUDES) $(X_CFLAGS)$/;"	m
ALLCXXFLAGS	keyboard/Makefile	/^ALLCXXFLAGS = $(CXXFLAGS) $(DEFS) $(INCLUDES) $(X_CFLAGS)$/;"	m
ALLCXXFLAGS	language/Makefile	/^ALLCXXFLAGS = $(CXXFLAGS) $(DEFS) $(INCLUDES) $(X_CFLAGS)$/;"	m
ALLCXXFLAGS	markup/Makefile	/^ALLCXXFLAGS = $(CXXFLAGS) $(DEFS) $(INCLUDES) $(X_CFLAGS)$/;"	m
ALLCXXFLAGS	module/Makefile	/^ALLCXXFLAGS = $(CXXFLAGS) $(DEFS) $(INCLUDES) $(X_CFLAGS)$/;"	m
ALLCXXFLAGS	output/Makefile	/^ALLCXXFLAGS = $(CXXFLAGS) $(DEFS) $(INCLUDES) $(X_CFLAGS)$/;"	m
ALLCXXFLAGS	templates/Makefile	/^ALLCXXFLAGS = $(CXXFLAGS) $(DEFS) $(INCLUDES) $(X_CFLAGS)$/;"	m
ALLCXXFLAGS	tools/Makefile	/^ALLCXXFLAGS = $(CXXFLAGS) $(DEFS) $(INCLUDES) $(X_CFLAGS)$/;"	m
ALLCXXFLAGS	treeedit/Makefile	/^ALLCXXFLAGS = $(CXXFLAGS) $(DEFS) $(INCLUDES) $(X_CFLAGS)$/;"	m
ALLCXXFLAGS	unicode/Makefile	/^ALLCXXFLAGS = $(CXXFLAGS) $(DEFS) $(INCLUDES) $(X_CFLAGS)$/;"	m
ALLCXXFLAGS	util/Makefile	/^ALLCXXFLAGS = $(CXXFLAGS) $(DEFS) $(INCLUDES) $(X_CFLAGS)$/;"	m
ALLCXXFLAGS	windows/Makefile	/^ALLCXXFLAGS = $(CXXFLAGS) $(DEFS) $(INCLUDES) $(X_CFLAGS)$/;"	m
ALLMODS	keyboard/X11syskeys.c	115;"	d	file:
ALLOPTREE	include/match.h	21;"	d
ALLSEL	treeedit/select.cc	60;"	d	file:
AND	module/pvsparse.c	/^     AND = 258,$/;"	e	enum:pvs_yytokentype	file:
ANYBUTTON	windows/sources.c	1131;"	d	file:
APPLY	module/pvsparse.c	/^     APPLY = 263,$/;"	e	enum:pvs_yytokentype	file:
ARRAYCHECK	util/memman.c	343;"	d	file:
ARRAYCHECK	util/memman.c	355;"	d	file:
ARRAYSTORE	keyboard/keyboard.c	19;"	d	file:
ARROW	util/fstate.c	/^typedef unsigned int ARROW;$/;"	t	file:
ASCII	include/sources.h	37;"	d
ASCIIBUTTON	windows/edit.c	78;"	d	file:
ASCII_PH	output/latexout.c	19;"	d	file:
ASCII_PHNUM	output/latexout.c	21;"	d	file:
ASCII_TAB	output/latexout.c	17;"	d	file:
ASSIGN	language/parse.c	79;"	d	file:
ATTRIBGROUPALIAS	unicode/unifont.c	279;"	d	file:
ATTRIBGROUPALIAS	unicode/virtread.c	99;"	d	file:
ATTRIBREC	unicode/unifont.c	/^struct ATTRIBREC {$/;"	s	file:
ATTRIBREC	unicode/unifont.c	/^typedef struct ATTRIBREC ATTRIBREC;$/;"	t	typeref:struct:ATTRIBREC	file:
ATTRIBREC	unicode/virtread.c	/^struct ATTRIBREC {$/;"	s	file:
ATTRIBREC	unicode/virtread.c	/^typedef struct ATTRIBREC ATTRIBREC;$/;"	t	typeref:struct:ATTRIBREC	file:
ATTRIBVALUEALIAS	unicode/unifont.c	281;"	d	file:
ATTRIBVALUEALIAS	unicode/virtread.c	101;"	d	file:
ArgAttrib	include/markup.h	/^    ArgAttrib,   \/* xxxxxxxxxx: number of argument to be insert. *\/$/;"	e	enum:__anon52
ArgList	language/parse.c	/^} ArgList;$/;"	t	typeref:struct:__anon8	file:
ArgType	language/expression.c	25;"	d	file:
Argument	include/types.h	/^typedef int Argument;$/;"	t
AskBoth	include/mathpad.h	66;"	d
AskMath	include/mathpad.h	65;"	d
AskText	include/mathpad.h	37;"	d
AttrPopFont	include/mathpad.h	89;"	d
AttribFont	include/mathpad.h	88;"	d
AttribGroup	include/mathpad.h	94;"	d
AttribValue	include/mathpad.h	95;"	d
Attribute	include/markup.h	/^} Attribute;$/;"	t	typeref:struct:_attribs
AutoLoad	documents/fileread.c	133;"	d	file:
BEGIN	language/parselex.c	4;"	d	file:
BEGIN	module/pvsparselex.c	5;"	d	file:
BIBS	util/fstate.c	55;"	d	file:
BIDICAT	unicode/datatotable.c	13;"	d	file:
BINARYFILE	include/fileread.h	19;"	d
BINDOC	windows/edit.c	314;"	d	file:
BINTERSPACE	include/button.h	16;"	d
BITAND	language/parse.c	12;"	d	file:
BITNOT	language/parse.c	27;"	d	file:
BITOR	language/parse.c	10;"	d	file:
BITSET	util/fstate.c	/^typedef unsigned int BITSET;$/;"	t	file:
BITXOR	language/parse.c	11;"	d	file:
BLOCKSIZE	templates/notatype.c	52;"	d	file:
BLOCKSIZE	util/flexarray.c	39;"	d	file:
BORDERMARGIN	windows/fileselc.c	54;"	d	file:
BORDERWIDTH	include/system.h	20;"	d
BOTTOM	language/parse.c	60;"	d	file:
BOX	windows/output.c	/^struct BOX {$/;"	s	file:
BOX	windows/output.c	/^typedef struct BOX BOX;$/;"	t	typeref:struct:BOX	file:
BSIZE	unicode/asciitomap.c	5;"	d	file:
BSIZE	unicode/maptoascii.c	5;"	d	file:
BSIZE	unicode/strasciitomap.c	5;"	d	file:
BTFUNC	include/button.h	/^typedef void (*BTFUNC)(void*,int);$/;"	t
BUFFER	language/parse.c	68;"	d	file:
BUFFERDONEHELP	include/helpfile.h	68;"	d
BUFFERHELP	include/helpfile.h	66;"	d
BUFFERKILLHELP	include/helpfile.h	67;"	d
BUFFERNAME	windows/buffer.c	53;"	d	file:
BUFFERWINDOW	include/sources.h	/^    MAINEDITWINDOW, EDITWINDOW, MAINBUFFERWINDOW, BUFFERWINDOW,$/;"	e	enum:__anon40
BUFSIZE	templates/notatype.c	53;"	d	file:
BUFSIZE	windows/fonts.c	60;"	d	file:
BUFSIZE	windows/notadef.c	97;"	d	file:
BUFSIZE	windows/sources.c	96;"	d	file:
BUTTON	language/parse.c	55;"	d	file:
BUTTONFONT	include/system.h	19;"	d
BUTTONHELP	include/helpfile.h	91;"	d
BUTTONINFO	windows/button.c	/^	} BUTTONINFO;$/;"	t	typeref:struct:__anon75	file:
BUTTONWINDOW	include/sources.h	/^    NOWINDOW, BUTTONWINDOW, SCROLLBARWINDOW, STRINGWINDOW, MENUWINDOW,$/;"	e	enum:__anon40
BYTE21	unicode/unistring.c	75;"	d	file:
BYTE22	unicode/unistring.c	76;"	d	file:
BYTE31	unicode/unistring.c	77;"	d	file:
BYTE32	unicode/unistring.c	78;"	d	file:
BYTE33	unicode/unistring.c	79;"	d	file:
BackBox	windows/output.c	196;"	d	file:
BadTypeError	language/function.c	79;"	d	file:
BarBox	windows/output.c	202;"	d	file:
BaseType	include/types.h	15;"	d
Bool	include/mathpad.h	133;"	d
BottomBox	windows/output.c	209;"	d	file:
BoxAttrib	include/markup.h	/^    BoxAttrib,   \/* sizes, positions, alignments, types. *\/$/;"	e	enum:__anon52
Breanch	language/leaftree.c	43;"	d	file:
Breanch	util/debug.c	96;"	d	file:
Breanch	util/leaftree.c	43;"	d	file:
Breanch	util/memman.c	75;"	d	file:
BreanchNode	include/leaftree.h	/^typedef struct bnode BreanchNode;$/;"	t	typeref:struct:bnode
CANCELBUTTON	windows/fileselc.c	/^enum button { OKBUTTON, RESCANBUTTON, CANCELBUTTON, NR_BUTTON };$/;"	e	enum:button	file:
CANCOMB	unicode/datatotable.c	12;"	d	file:
CATEGORY	unicode/datatotable.c	11;"	d	file:
CC	documents/Makefile	/^CC        = gcc$/;"	m
CC	include/Makefile	/^CC        = gcc$/;"	m
CC	keyboard/Makefile	/^CC        = gcc$/;"	m
CC	language/Makefile	/^CC        = gcc$/;"	m
CC	markup/Makefile	/^CC        = gcc$/;"	m
CC	module/Makefile	/^CC        = gcc$/;"	m
CC	output/Makefile	/^CC        = gcc$/;"	m
CC	templates/Makefile	/^CC        = gcc$/;"	m
CC	tools/Makefile	/^CC        = gcc$/;"	m
CC	treeedit/Makefile	/^CC        = gcc$/;"	m
CC	unicode/Makefile	/^CC        = gcc$/;"	m
CC	util/Makefile	/^CC        = gcc$/;"	m
CC	windows/Makefile	/^CC        = gcc$/;"	m
CCAbove	include/unitype.h	116;"	d
CCAboveAttached	include/unitype.h	108;"	d
CCAboveLeft	include/unitype.h	115;"	d
CCAboveLeftAttached	include/unitype.h	107;"	d
CCAboveRight	include/unitype.h	117;"	d
CCAboveRightAttached	include/unitype.h	109;"	d
CCBelow	include/unitype.h	111;"	d
CCBelowAttached	include/unitype.h	103;"	d
CCBelowLeft	include/unitype.h	110;"	d
CCBelowLeftAttached	include/unitype.h	102;"	d
CCBelowRight	include/unitype.h	112;"	d
CCBelowRightAttached	include/unitype.h	104;"	d
CCDoubleAbove	include/unitype.h	118;"	d
CCHiraKataVoiced	include/unitype.h	100;"	d
CCLeft	include/unitype.h	113;"	d
CCLeftAttached	include/unitype.h	105;"	d
CCNukta	include/unitype.h	99;"	d
CCOverlay	include/unitype.h	97;"	d
CCRight	include/unitype.h	114;"	d
CCRightAttached	include/unitype.h	106;"	d
CCTibSubjoin	include/unitype.h	98;"	d
CCVirama	include/unitype.h	101;"	d
CFLAGS	documents/Makefile	/^CFLAGS    = -g -O2$/;"	m
CFLAGS	include/Makefile	/^CFLAGS    = -g -O2$/;"	m
CFLAGS	keyboard/Makefile	/^CFLAGS    = -g -O2$/;"	m
CFLAGS	language/Makefile	/^CFLAGS    = -g -O2$/;"	m
CFLAGS	markup/Makefile	/^CFLAGS    = -g -O2$/;"	m
CFLAGS	module/Makefile	/^CFLAGS    = -g -O2$/;"	m
CFLAGS	output/Makefile	/^CFLAGS    = -g -O2$/;"	m
CFLAGS	templates/Makefile	/^CFLAGS    = -g -O2$/;"	m
CFLAGS	tools/Makefile	/^CFLAGS    = -g -O2$/;"	m
CFLAGS	treeedit/Makefile	/^CFLAGS    = -g -O2$/;"	m
CFLAGS	unicode/Makefile	/^CFLAGS    = -g -O2$/;"	m
CFLAGS	util/Makefile	/^CFLAGS    = -g -O2$/;"	m
CFLAGS	windows/Makefile	/^CFLAGS    = -g -O2$/;"	m
CHANGED	windows/edit.c	70;"	d	file:
CHAR	module/hugsparse.c	/^typedef void *CHAR;    \/* identifier node *\/$/;"	t	file:
CHAR2TYPE	include/fileread.h	32;"	d
CHARDECOMP	unicode/datatotable.c	14;"	d	file:
CHARSEL	treeedit/select.cc	57;"	d	file:
CHARTYPE	include/fileread.h	42;"	d
CHECKBOXINFO	windows/checkbox.c	/^struct CHECKBOXINFO {$/;"	s	file:
CHECKBOXINFO	windows/checkbox.c	/^typedef struct CHECKBOXINFO CHECKBOXINFO;$/;"	t	typeref:struct:CHECKBOXINFO	file:
CHECKBOXSIZE	include/checkbox.h	12;"	d
CHECKBOXWINDOW	include/sources.h	/^    POPUPWINDOW, CHECKBOXWINDOW, MAXWINDOWTYPE$/;"	e	enum:__anon40
CHECKBYTE	unicode/unistring.c	15;"	d	file:
CHECKTYPE	windows/fileselc.c	/^typedef int (*CHECKTYPE)(Char*, Char*);$/;"	t	file:
CHH	windows/output.c	58;"	d	file:
CLEACOD	windows/find.c	/^	      SAVECOD, PREVCOD, NEXTCOD, NEWSCOD, CLEACOD };$/;"	e	enum:button	file:
CLEAR	language/parse.c	77;"	d	file:
CLOSEBRACE	windows/notadef.c	1434;"	d	file:
CODEVAL	unicode/datatotable.c	9;"	d	file:
COLCACHELIMIT	windows/sources.c	141;"	d	file:
COLORNAMESIZE	windows/output.c	130;"	d	file:
COMMENT	language/parse.c	65;"	d	file:
COMMENT	unicode/datatotable.c	20;"	d	file:
COMPILE	documents/Makefile	/^COMPILE = $(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS) $(X_CFLAGS)$/;"	m
COMPILE	include/Makefile	/^COMPILE = $(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS) $(X_CFLAGS)$/;"	m
COMPILE	keyboard/Makefile	/^COMPILE = $(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS) $(X_CFLAGS)$/;"	m
COMPILE	language/Makefile	/^COMPILE = $(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS) $(X_CFLAGS)$/;"	m
COMPILE	markup/Makefile	/^COMPILE = $(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS) $(X_CFLAGS)$/;"	m
COMPILE	module/Makefile	/^COMPILE = $(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS) $(X_CFLAGS)$/;"	m
COMPILE	output/Makefile	/^COMPILE = $(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS) $(X_CFLAGS)$/;"	m
COMPILE	templates/Makefile	/^COMPILE = $(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS) $(X_CFLAGS)$/;"	m
COMPILE	tools/Makefile	/^COMPILE = $(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS) $(X_CFLAGS)$/;"	m
COMPILE	treeedit/Makefile	/^COMPILE = $(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS) $(X_CFLAGS)$/;"	m
COMPILE	unicode/Makefile	/^COMPILE = $(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS) $(X_CFLAGS)$/;"	m
COMPILE	util/Makefile	/^COMPILE = $(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS) $(X_CFLAGS)$/;"	m
COMPILE	windows/Makefile	/^COMPILE = $(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS) $(X_CFLAGS)$/;"	m
COMPILEXX	documents/Makefile	/^COMPILEXX = $(CXX) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CXXFLAGS) $(X_CFLAGS)$/;"	m
COMPILEXX	include/Makefile	/^COMPILEXX = $(CXX) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CXXFLAGS) $(X_CFLAGS)$/;"	m
COMPILEXX	keyboard/Makefile	/^COMPILEXX = $(CXX) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CXXFLAGS) $(X_CFLAGS)$/;"	m
COMPILEXX	language/Makefile	/^COMPILEXX = $(CXX) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CXXFLAGS) $(X_CFLAGS)$/;"	m
COMPILEXX	markup/Makefile	/^COMPILEXX = $(CXX) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CXXFLAGS) $(X_CFLAGS)$/;"	m
COMPILEXX	module/Makefile	/^COMPILEXX = $(CXX) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CXXFLAGS) $(X_CFLAGS)$/;"	m
COMPILEXX	output/Makefile	/^COMPILEXX = $(CXX) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CXXFLAGS) $(X_CFLAGS)$/;"	m
COMPILEXX	templates/Makefile	/^COMPILEXX = $(CXX) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CXXFLAGS) $(X_CFLAGS)$/;"	m
COMPILEXX	tools/Makefile	/^COMPILEXX = $(CXX) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CXXFLAGS) $(X_CFLAGS)$/;"	m
COMPILEXX	treeedit/Makefile	/^COMPILEXX = $(CXX) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CXXFLAGS) $(X_CFLAGS)$/;"	m
COMPILEXX	unicode/Makefile	/^COMPILEXX = $(CXX) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CXXFLAGS) $(X_CFLAGS)$/;"	m
COMPILEXX	util/Makefile	/^COMPILEXX = $(CXX) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CXXFLAGS) $(X_CFLAGS)$/;"	m
COMPILEXX	windows/Makefile	/^COMPILEXX = $(CXX) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CXXFLAGS) $(X_CFLAGS)$/;"	m
COMPOSE	module/pvsparse.c	/^     COMPOSE = 262,$/;"	e	enum:pvs_yytokentype	file:
CONSOLE	language/parse.c	67;"	d	file:
CONSOLEEDITOPHELP	include/helpfile.h	12;"	d
CONSOLEEDITOPPINUP	include/helpfile.h	99;"	d
CONSOLEHELP	include/helpfile.h	10;"	d
CONSOLEJOINPINUP	include/helpfile.h	105;"	d
CONSOLEMISCHELP	include/helpfile.h	15;"	d
CONSOLEMISCPINUP	include/helpfile.h	102;"	d
CONSOLEQUITHELP	include/helpfile.h	17;"	d
CONSOLEQUITPINUP	include/helpfile.h	104;"	d
CONSOLESELECTIONHELP	include/helpfile.h	14;"	d
CONSOLESELECTIONPINUP	include/helpfile.h	101;"	d
CONSOLESTRUCTUREHELP	include/helpfile.h	13;"	d
CONSOLESTRUCTUREPINUP	include/helpfile.h	100;"	d
CONSOLEVERSIONHELP	include/helpfile.h	16;"	d
CONSOLEVERSIONPINUP	include/helpfile.h	103;"	d
CONSOLEWINDOWHELP	include/helpfile.h	11;"	d
CONSOLEWINDOWPINUP	include/helpfile.h	98;"	d
CONT	module/hugsparse.c	/^typedef void *CONT;    \/* expression node *\/$/;"	t	file:
CPP	documents/Makefile	/^CPP       = gcc -E$/;"	m
CPP	include/Makefile	/^CPP       = gcc -E$/;"	m
CPP	keyboard/Makefile	/^CPP       = gcc -E$/;"	m
CPP	language/Makefile	/^CPP       = gcc -E$/;"	m
CPP	markup/Makefile	/^CPP       = gcc -E$/;"	m
CPP	module/Makefile	/^CPP       = gcc -E$/;"	m
CPP	output/Makefile	/^CPP       = gcc -E$/;"	m
CPP	templates/Makefile	/^CPP       = gcc -E$/;"	m
CPP	tools/Makefile	/^CPP       = gcc -E$/;"	m
CPP	treeedit/Makefile	/^CPP       = gcc -E$/;"	m
CPP	unicode/Makefile	/^CPP       = gcc -E$/;"	m
CPP	util/Makefile	/^CPP       = gcc -E$/;"	m
CPP	windows/Makefile	/^CPP       = gcc -E$/;"	m
CSTRINGSTACK	documents/fileread.c	/^struct CSTRINGSTACK {$/;"	s	file:
CSTRINGSTACK	documents/fileread.c	/^typedef struct CSTRINGSTACK CSTRINGSTACK;$/;"	t	typeref:struct:CSTRINGSTACK	file:
CURSOR	include/output.h	22;"	d
CURSORASCENT	windows/output.c	59;"	d	file:
CURSORHEIGHT	include/system.h	26;"	d
CURSORHOLLOW	include/output.h	24;"	d
CURSORWIDTH	include/system.h	25;"	d
CU_REM	windows/notadef.c	67;"	d	file:
CWH	windows/output.c	57;"	d	file:
CXX	documents/Makefile	/^CXX       = g++$/;"	m
CXX	include/Makefile	/^CXX       = g++$/;"	m
CXX	keyboard/Makefile	/^CXX       = g++$/;"	m
CXX	language/Makefile	/^CXX       = g++$/;"	m
CXX	markup/Makefile	/^CXX       = g++$/;"	m
CXX	module/Makefile	/^CXX       = g++$/;"	m
CXX	output/Makefile	/^CXX       = g++$/;"	m
CXX	templates/Makefile	/^CXX       = g++$/;"	m
CXX	tools/Makefile	/^CXX       = g++$/;"	m
CXX	treeedit/Makefile	/^CXX       = g++$/;"	m
CXX	unicode/Makefile	/^CXX       = g++$/;"	m
CXX	util/Makefile	/^CXX       = g++$/;"	m
CXX	windows/Makefile	/^CXX       = g++$/;"	m
CXXFLAGS	documents/Makefile	/^CXXFLAGS  = -g -O2$/;"	m
CXXFLAGS	documents/Makefile	/^CXXFLAGS = -g -O2$/;"	m
CXXFLAGS	include/Makefile	/^CXXFLAGS  = -g -O2$/;"	m
CXXFLAGS	include/Makefile	/^CXXFLAGS = -g -O2$/;"	m
CXXFLAGS	keyboard/Makefile	/^CXXFLAGS  = -g -O2$/;"	m
CXXFLAGS	keyboard/Makefile	/^CXXFLAGS = -g -O2$/;"	m
CXXFLAGS	language/Makefile	/^CXXFLAGS  = -g -O2$/;"	m
CXXFLAGS	language/Makefile	/^CXXFLAGS = -g -O2$/;"	m
CXXFLAGS	markup/Makefile	/^CXXFLAGS  = -g -O2$/;"	m
CXXFLAGS	markup/Makefile	/^CXXFLAGS = -g -O2$/;"	m
CXXFLAGS	module/Makefile	/^CXXFLAGS  = -g -O2$/;"	m
CXXFLAGS	module/Makefile	/^CXXFLAGS = -g -O2$/;"	m
CXXFLAGS	output/Makefile	/^CXXFLAGS  = -g -O2$/;"	m
CXXFLAGS	output/Makefile	/^CXXFLAGS = -g -O2$/;"	m
CXXFLAGS	templates/Makefile	/^CXXFLAGS  = -g -O2$/;"	m
CXXFLAGS	templates/Makefile	/^CXXFLAGS = -g -O2$/;"	m
CXXFLAGS	tools/Makefile	/^CXXFLAGS  = -g -O2$/;"	m
CXXFLAGS	tools/Makefile	/^CXXFLAGS = -g -O2$/;"	m
CXXFLAGS	treeedit/Makefile	/^CXXFLAGS  = -g -O2$/;"	m
CXXFLAGS	treeedit/Makefile	/^CXXFLAGS = -g -O2$/;"	m
CXXFLAGS	unicode/Makefile	/^CXXFLAGS  = -g -O2$/;"	m
CXXFLAGS	unicode/Makefile	/^CXXFLAGS = -g -O2$/;"	m
CXXFLAGS	util/Makefile	/^CXXFLAGS  = -g -O2$/;"	m
CXXFLAGS	util/Makefile	/^CXXFLAGS = -g -O2$/;"	m
CXXFLAGS	windows/Makefile	/^CXXFLAGS  = -g -O2$/;"	m
CXXFLAGS	windows/Makefile	/^CXXFLAGS = -g -O2$/;"	m
CYCLE_NEXT	util/translate.c	29;"	d	file:
CacheInfo	util/filefind.c	/^struct CacheInfo {$/;"	s	file:
CacheInfo	util/filefind.c	/^typedef struct CacheInfo CacheInfo;$/;"	t	typeref:struct:CacheInfo	file:
CallPayback	util/memman.c	/^static void CallPayback(void)$/;"	f	file:
Char	include/mathpad.h	25;"	d
Char2ASCII	include/mathpad.h	125;"	d
Char2Font	include/mathpad.h	124;"	d
Char2Node	include/mathpad.h	114;"	d
Char2Ph	include/mathpad.h	115;"	d
CharAscent	include/unifontX11.h	24;"	d
CharAscent	include/unifontsys.h	23;"	d
CharDescent	include/unifontX11.h	25;"	d
CharDescent	include/unifontsys.h	24;"	d
CharInfo	include/unifont.h	/^} CharInfo;$/;"	t	typeref:struct:__anon43
CharLeft	include/unifontX11.h	26;"	d
CharLeft	include/unifontsys.h	25;"	d
CharRight	include/unifontX11.h	27;"	d
CharRight	include/unifontsys.h	26;"	d
CharStruct	include/unifontX11.h	/^typedef XCharStruct CharStruct;$/;"	t
CharStruct	include/unifontsys.h	/^typedef XCharStruct CharStruct;$/;"	t
CharWidth	include/unifontX11.h	23;"	d
CharWidth	include/unifontsys.h	22;"	d
ClearFreeLists	util/memman.c	/^static void ClearFreeLists(void)$/;"	f	file:
CloseBottom	include/mathpad.h	47;"	d
CloseGap	include/mathpad.h	49;"	d
CloseStack	include/mathpad.h	41;"	d
CloseTop	include/mathpad.h	45;"	d
CmpFunc	language/variable.c	/^typedef int (*CmpFunc)(const void*,const void*);$/;"	t	file:
ColorAttrib	include/markup.h	/^    ColorAttrib, \/* 11xxxyyzzz: color cube (allocated on demand)$/;"	e	enum:__anon52
ColorBox	windows/output.c	203;"	d	file:
ColorEnd	include/mathpad.h	71;"	d
ColorSep	include/mathpad.h	70;"	d
ColorStart	include/mathpad.h	69;"	d
ConstructValue	language/types.c	/^void ConstructValue(Value* v)$/;"	f
CopyValue	language/types.c	/^void CopyValue(Value* dest, Value* orig)$/;"	f
Cpfv	include/mathpad.h	/^typedef void (*Cpfv)(void);$/;"	t
Cpfv	module/pvsparse.c	/^typedef void (*Cpfv)(void);$/;"	t	file:
CursorBox	windows/output.c	217;"	d	file:
CursorKind	windows/output.c	219;"	d	file:
DATAFILES	unicode/Makefile	/^DATAFILES = Baghdad.map CanComClass.map DeCompTag.map Decomposition.map \\$/;"	m
DEBUGMESSAGE	module/pvs.c	525;"	d	file:
DEBUGMESSAGE	module/pvs.c	527;"	d	file:
DEBUG_MESSAGE	unicode/unifont.c	14;"	d	file:
DECDIGVAL	unicode/datatotable.c	15;"	d	file:
DEC_CANON	include/unitype.h	78;"	d
DEC_CANON	unicode/datatotable.c	65;"	d	file:
DEC_CIRCLE	include/unitype.h	79;"	d
DEC_CIRCLE	unicode/datatotable.c	66;"	d	file:
DEC_COMPAT	include/unitype.h	80;"	d
DEC_COMPAT	unicode/datatotable.c	67;"	d	file:
DEC_FINAL	include/unitype.h	81;"	d
DEC_FINAL	unicode/datatotable.c	68;"	d	file:
DEC_FONT	include/unitype.h	82;"	d
DEC_FONT	unicode/datatotable.c	69;"	d	file:
DEC_FRACTION	include/unitype.h	83;"	d
DEC_FRACTION	unicode/datatotable.c	70;"	d	file:
DEC_INITIAL	include/unitype.h	84;"	d
DEC_INITIAL	unicode/datatotable.c	71;"	d	file:
DEC_ISOLATED	include/unitype.h	85;"	d
DEC_ISOLATED	unicode/datatotable.c	72;"	d	file:
DEC_MEDIAL	include/unitype.h	86;"	d
DEC_MEDIAL	unicode/datatotable.c	73;"	d	file:
DEC_NARROW	include/unitype.h	87;"	d
DEC_NARROW	unicode/datatotable.c	74;"	d	file:
DEC_NOBREAK	include/unitype.h	88;"	d
DEC_NOBREAK	unicode/datatotable.c	75;"	d	file:
DEC_SMALL	include/unitype.h	89;"	d
DEC_SMALL	unicode/datatotable.c	76;"	d	file:
DEC_SQUARE	include/unitype.h	90;"	d
DEC_SQUARE	unicode/datatotable.c	77;"	d	file:
DEC_SUB	include/unitype.h	91;"	d
DEC_SUB	unicode/datatotable.c	78;"	d	file:
DEC_SUPER	include/unitype.h	92;"	d
DEC_SUPER	unicode/datatotable.c	79;"	d	file:
DEC_VERTICAL	include/unitype.h	93;"	d
DEC_VERTICAL	unicode/datatotable.c	80;"	d	file:
DEC_WIDE	include/unitype.h	94;"	d
DEC_WIDE	unicode/datatotable.c	81;"	d	file:
DEFAULT	language/parse.c	54;"	d	file:
DEFAULTDIRHELP	include/helpfile.h	85;"	d
DEFAULTDONEHELP	include/helpfile.h	82;"	d
DEFAULTDX	windows/symbol.c	55;"	d	file:
DEFAULTDY	windows/symbol.c	56;"	d	file:
DEFAULTFILENAME	windows/sources.c	1303;"	d	file:
DEFAULTFONTHELP	include/helpfile.h	86;"	d
DEFAULTHASHSIZE	util/translate.c	35;"	d	file:
DEFAULTHELP	include/helpfile.h	79;"	d
DEFAULTKEYSHELP	include/helpfile.h	87;"	d
DEFAULTLATEXHELP	include/helpfile.h	84;"	d
DEFAULTLIBPATH	include/mpconfig.h	7;"	d
DEFAULTLMARGINHELP	include/helpfile.h	89;"	d
DEFAULTMAPPATH	include/mpconfig.h	5;"	d
DEFAULTMPKPATH	include/mpconfig.h	6;"	d
DEFAULTNAME	windows/default.c	58;"	d	file:
DEFAULTSAVEHELP	include/helpfile.h	81;"	d
DEFAULTSCREENHELP	include/helpfile.h	83;"	d
DEFAULTSETHELP	include/helpfile.h	80;"	d
DEFAULTSTIMEHELP	include/helpfile.h	88;"	d
DEFAULTSTYPE	include/fileread.h	33;"	d
DEFAULTWINDOW	include/sources.h	/^    SYMBOLWINDOW, DEFAULTWINDOW, REMARKWINDOW, FINDWINDOW, FILESELCWINDOW,$/;"	e	enum:__anon40
DEFBUFSIZE	documents/fileread.c	227;"	d	file:
DEFINE	language/parse.c	71;"	d	file:
DEFINEBUTTON	windows/notation.c	/^	      DEFINEBUTTON,$/;"	e	enum:button	file:
DEFINEDONEHELP	include/helpfile.h	47;"	d
DEFINEDOUBLEHELP	include/helpfile.h	46;"	d
DEFINEFONTHELP	include/helpfile.h	54;"	d
DEFINEHELP	include/helpfile.h	42;"	d
DEFINEHELPHELP	include/helpfile.h	58;"	d
DEFINEKINDHELP	include/helpfile.h	50;"	d
DEFINEMISCHELP	include/helpfile.h	56;"	d
DEFINEMODEHELP	include/helpfile.h	53;"	d
DEFINENAMEHELP	include/helpfile.h	57;"	d
DEFINENEWHELP	include/helpfile.h	43;"	d
DEFINEPLACEHELP	include/helpfile.h	51;"	d
DEFINEPRECHELP	include/helpfile.h	48;"	d
DEFINEREMOVEHELP	include/helpfile.h	45;"	d
DEFINESIZEHELP	include/helpfile.h	55;"	d
DEFINESPACEHELP	include/helpfile.h	49;"	d
DEFINETABSHELP	include/helpfile.h	52;"	d
DEFINEUPDATEHELP	include/helpfile.h	44;"	d
DEFINEVERSIONHELP	include/helpfile.h	59;"	d
DELETEBUTTON	windows/notadef.c	/^enum button { INSTALLBUTTON, MODIFYBUTTON, DELETEBUTTON,$/;"	e	enum:button	file:
DETECTFILE	include/fileread.h	18;"	d
DETECTTYPE	include/fileread.h	37;"	d
DIGVAL	unicode/datatotable.c	16;"	d	file:
DIRECTORIES	windows/fileselc.c	52;"	d	file:
DIRECTORY	windows/fileselc.c	50;"	d	file:
DIRSEP	util/filefind.c	165;"	d	file:
DIRSEPCHAR	include/mathpad.h	163;"	d
DIRSEPCHAR	include/mathpad.h	168;"	d
DIRSEPSTR	include/mathpad.h	164;"	d
DIRSEPSTR	include/mathpad.h	169;"	d
DIVIDE	language/parse.c	24;"	d	file:
DO	language/parse.c	45;"	d	file:
DOCUMENTFILE	include/fileread.h	20;"	d
DONEBUTTON	windows/buffer.c	/^enum button { KILLBUTTON, DONEBUTTON, NR_BUTTON };$/;"	e	enum:button	file:
DONEBUTTON	windows/default.c	/^enum button {SETBUTTON, SAVEBUTTON, DONEBUTTON, NR_BUTTON };$/;"	e	enum:button	file:
DONEBUTTON	windows/edit.c	/^	      OUTPUTBUTTON, INCLUDEBUTTON, DONEBUTTON, NR_BUTTON  };$/;"	e	enum:button	file:
DONEBUTTON	windows/find.c	/^enum button { FINDBUTTON, STACKBUTTON, DONEBUTTON, NR_BUTTON,$/;"	e	enum:button	file:
DONEBUTTON	windows/notadef.c	/^              DOUBLEBUTTON, DONEBUTTON, NR_BUTTON };$/;"	e	enum:button	file:
DONEBUTTON	windows/notation.c	/^    DONEBUTTON, NR_BUTTON };$/;"	e	enum:button	file:
DONEBUTTON	windows/symbol.c	/^enum button { PAGEBUTTON, DONEBUTTON, NR_BUTTON };$/;"	e	enum:button	file:
DONECOM	windows/edit.c	72;"	d	file:
DOUBLEBUTTON	windows/notadef.c	/^              DOUBLEBUTTON, DONEBUTTON, NR_BUTTON };$/;"	e	enum:button	file:
DUMMY	util/fstate.c	46;"	d	file:
DefaultBox	windows/output.c	197;"	d	file:
DeleteObjectList	util/fifolist.c	17;"	d	file:
DestructValue	language/types.c	/^void DestructValue(Value* v)$/;"	f
DirInfo	util/filefind.c	/^struct DirInfo {$/;"	s	file:
DirInfo	util/filefind.c	/^typedef struct DirInfo DirInfo;$/;"	t	typeref:struct:DirInfo	file:
DispClose	include/latexout.h	/^               TextOpen, TextClose, DispOpen, DispClose$/;"	e	enum:__anon44
DispOpen	include/latexout.h	/^               TextOpen, TextClose, DispOpen, DispClose$/;"	e	enum:__anon44
DisplayClose	include/mathpad.h	62;"	d
DisplayOpen	include/mathpad.h	61;"	d
DummyAlign	include/leaftree.h	/^typedef union { double al1; long al2; void *al3; int al4; } DummyAlign;$/;"	t	typeref:union:__anon45
ECHO	language/parselex.c	63;"	d	file:
ECHO	module/pvsparselex.c	66;"	d	file:
EDIT	language/parse.c	64;"	d	file:
EDITDONEHELP	include/helpfile.h	25;"	d
EDITFONT	include/system.h	28;"	d
EDITHELP	include/helpfile.h	19;"	d
EDITINCLUDEHELP	include/helpfile.h	24;"	d
EDITINFO	windows/edit.c	/^               } EDITINFO;$/;"	t	typeref:struct:__anon69	file:
EDITLOADHELP	include/helpfile.h	20;"	d
EDITNAME	windows/edit.c	67;"	d	file:
EDITOPBUTTON	windows/menu.c	/^enum button { WINDOWBUTTON, EDITOPBUTTON, STRUCTUREBUTTON, SELECTIONBUTTON,$/;"	e	enum:button	file:
EDITOUTPUTHELP	include/helpfile.h	23;"	d
EDITRENAMEHELP	include/helpfile.h	22;"	d
EDITSAVEHELP	include/helpfile.h	21;"	d
EDITSUBHELP	include/helpfile.h	26;"	d
EDITWINDOW	include/sources.h	/^    MAINEDITWINDOW, EDITWINDOW, MAINBUFFERWINDOW, BUFFERWINDOW,$/;"	e	enum:__anon40
EDITWINDOW_HH	treeedit/editwindow.hh	37;"	d
EDIT_SIZE	include/notatype.h	18;"	d
ELSE	language/parse.c	43;"	d	file:
ELSEDO	language/parse.c	46;"	d	file:
ELSEIF	language/parse.c	42;"	d	file:
EMPTYFILE	windows/edit.c	68;"	d	file:
ENCODINGALIAS	unicode/unifont.c	277;"	d	file:
ENCODINGALIAS	unicode/virtread.c	97;"	d	file:
ENCODINGREC	unicode/unifont.c	/^struct ENCODINGREC {$/;"	s	file:
ENCODINGREC	unicode/unifont.c	/^typedef struct ENCODINGREC ENCODINGREC;$/;"	t	typeref:struct:ENCODINGREC	file:
ENCODINGREC	unicode/virtread.c	/^struct ENCODINGREC {$/;"	s	file:
ENCODINGREC	unicode/virtread.c	/^typedef struct ENCODINGREC ENCODINGREC;$/;"	t	typeref:struct:ENCODINGREC	file:
EPSILON	util/fstate.c	45;"	d	file:
EQUAL	language/parse.c	13;"	d	file:
EQUAL	module/pvsparse.c	/^     EQUAL = 259,$/;"	e	enum:pvs_yytokentype	file:
EXIT_FAILURE	unicode/fonttest.c	6;"	d	file:
EXP	module/hugsparse.c	/^typedef void *EXP;     \/* expression node *\/$/;"	t	file:
EXPAND_SIZE	windows/sources.c	492;"	d	file:
EXPR	include/match.h	15;"	d
EXPRTREE	include/match.h	23;"	d
EXTENDEDINFO	windows/sources.c	/^} EXTENDEDINFO;$/;"	t	typeref:struct:__anon82	file:
EXTENSION	windows/edit.c	74;"	d	file:
EXTSEP	util/filefind.c	204;"	d	file:
EditWindow	treeedit/editwindow.cc	/^EditWindow::EditWindow(void* ow, int xs, int ys) : start(View)$/;"	f	class:EditWindow
EditWindow	treeedit/editwindow.hh	/^class EditWindow {$/;"	c
Empty	treeedit/mathpad.hh	45;"	d
EmptyBox	windows/output.c	221;"	d	file:
EmptyFifoList	include/fifolist.h	12;"	d
EmptyKeyMode	include/keys.h	5;"	d
EmptyLeaf	language/leaftree.c	98;"	d	file:
EmptyLeaf	util/leaftree.c	98;"	d	file:
EmptySubmap	include/unimap.h	44;"	d
EndHide	include/mathpad.h	58;"	d
EventToKeyAndMode	keyboard/X11syskeys.c	/^int EventToKeyAndMode(void *event, KeyNum *keyres, KeyMode *moderes)$/;"	f
ExpEvaStack	language/expression.c	/^struct ExpEvaStack {$/;"	s	file:
ExpEvaStack	language/expression.c	/^typedef struct ExpEvaStack ExpEvaStack;$/;"	t	typeref:struct:ExpEvaStack	file:
ExprClose	include/latexout.h	/^typedef enum { ExprOpen, ExprClose, SOpOpen, SOpClose, LOpOpen, LOpClose,$/;"	e	enum:__anon44
ExprList	language/parse.c	/^} ExprList;$/;"	t	typeref:struct:__anon10	file:
ExprOpen	include/latexout.h	/^typedef enum { ExprOpen, ExprClose, SOpOpen, SOpClose, LOpOpen, LOpClose,$/;"	e	enum:__anon44
ExprPair	language/parse.c	/^} ExprPair;$/;"	t	typeref:struct:__anon9	file:
Expression	include/expression.h	/^struct Expression {$/;"	s
Expression	include/expression.h	/^typedef struct Expression Expression;$/;"	t	typeref:struct:Expression
ExpressionStep	module/pvs.c	68;"	d	file:
ExtFileInfo	util/filefind.c	/^struct ExtFileInfo {$/;"	s	file:
ExtFileInfo	util/filefind.c	/^typedef struct ExtFileInfo ExtFileInfo;$/;"	t	typeref:struct:ExtFileInfo	file:
ExtenInfo	util/filefind.c	/^struct ExtenInfo {$/;"	s	file:
ExtenInfo	util/filefind.c	/^typedef struct ExtenInfo ExtenInfo;$/;"	t	typeref:struct:ExtenInfo	file:
FAILURE	include/fileread.h	12;"	d
FI	language/parse.c	44;"	d	file:
FIFOList	util/fifolist.c	/^typedef struct _FIFOList FIFOList;$/;"	t	typeref:struct:_FIFOList	file:
FILE	module/pvsparse.c	/^typedef struct _IO_FILE FILE;$/;"	t	typeref:struct:_IO_FILE	file:
FILEFIND_H	include/filefind.h	2;"	d
FILEMASK	windows/fileselc.c	51;"	d	file:
FILES	windows/fileselc.c	53;"	d	file:
FILESELCCANCELHELP	include/helpfile.h	31;"	d
FILESELCHELP	include/helpfile.h	28;"	d
FILESELCMASKHELP	include/helpfile.h	33;"	d
FILESELCOKHELP	include/helpfile.h	29;"	d
FILESELCRESCANHELP	include/helpfile.h	30;"	d
FILESELCSELCHELP	include/helpfile.h	32;"	d
FILESELCWINDOW	include/sources.h	/^    SYMBOLWINDOW, DEFAULTWINDOW, REMARKWINDOW, FINDWINDOW, FILESELCWINDOW,$/;"	e	enum:__anon40
FILESELECT	language/parse.c	75;"	d	file:
FILESELECTOR	windows/fileselc.c	/^} FILESELECTOR;$/;"	t	typeref:struct:__anon71	file:
FILESELNAME	windows/fileselc.c	48;"	d	file:
FILESTACK	language/parse.c	/^struct FILESTACK {$/;"	s	file:
FILESTACK	language/parse.c	/^typedef struct FILESTACK FILESTACK;$/;"	t	typeref:struct:FILESTACK	file:
FINDBUTTON	windows/find.c	/^enum button { FINDBUTTON, STACKBUTTON, DONEBUTTON, NR_BUTTON,$/;"	e	enum:button	file:
FINDCOD	windows/find.c	/^	      FINDCOD, REPLCOD, REPFCOD, REPACOD, LOADCOD,$/;"	e	enum:button	file:
FINDDONEHELP	include/helpfile.h	73;"	d
FINDFINDHELP	include/helpfile.h	71;"	d
FINDFINDPINUP	include/helpfile.h	76;"	d
FINDHELP	include/helpfile.h	70;"	d
FINDLOWERHELP	include/helpfile.h	75;"	d
FINDNAME	windows/find.c	57;"	d	file:
FINDREPFILE	include/fileread.h	27;"	d
FINDREPLACE	language/parse.c	72;"	d	file:
FINDREPTYPE	include/fileread.h	43;"	d
FINDSTACKHELP	include/helpfile.h	72;"	d
FINDSTACKPINUP	include/helpfile.h	77;"	d
FINDUPPERHELP	include/helpfile.h	74;"	d
FINDWINDOW	include/sources.h	/^    SYMBOLWINDOW, DEFAULTWINDOW, REMARKWINDOW, FINDWINDOW, FILESELCWINDOW,$/;"	e	enum:__anon40
FINFO	windows/fonts.c	230;"	d	file:
FINITESTATE	util/fstate.c	/^} FINITESTATE;$/;"	t	typeref:struct:__anon61	file:
FIXINSTALL	documents/Makefile	/^FIXINSTALL        = \/usr\/bin\/install -c$/;"	m
FIXINSTALL	include/Makefile	/^FIXINSTALL        = \/usr\/bin\/install -c$/;"	m
FIXINSTALL	keyboard/Makefile	/^FIXINSTALL        = \/usr\/bin\/install -c$/;"	m
FIXINSTALL	language/Makefile	/^FIXINSTALL        = \/usr\/bin\/install -c$/;"	m
FIXINSTALL	markup/Makefile	/^FIXINSTALL        = \/usr\/bin\/install -c$/;"	m
FIXINSTALL	module/Makefile	/^FIXINSTALL        = \/usr\/bin\/install -c$/;"	m
FIXINSTALL	output/Makefile	/^FIXINSTALL        = \/usr\/bin\/install -c$/;"	m
FIXINSTALL	templates/Makefile	/^FIXINSTALL        = \/usr\/bin\/install -c$/;"	m
FIXINSTALL	tools/Makefile	/^FIXINSTALL        = \/usr\/bin\/install -c$/;"	m
FIXINSTALL	treeedit/Makefile	/^FIXINSTALL        = \/usr\/bin\/install -c$/;"	m
FIXINSTALL	unicode/Makefile	/^FIXINSTALL        = \/usr\/bin\/install -c$/;"	m
FIXINSTALL	util/Makefile	/^FIXINSTALL        = \/usr\/bin\/install -c$/;"	m
FIXINSTALL	windows/Makefile	/^FIXINSTALL        = \/usr\/bin\/install -c$/;"	m
FLItem	util/memman.c	/^typedef struct _FLItem FLItem;$/;"	t	typeref:struct:_FLItem	file:
FNONBLCK	tools/xpipein.c	167;"	d	file:
FNONBLCK	tools/xpipeout.c	46;"	d	file:
FNONBLOCK	tools/xpipein.c	164;"	d	file:
FNONBLOCK	tools/xpipeout.c	43;"	d	file:
FNR	windows/fonts.c	229;"	d	file:
FONTFIELD	windows/default.c	117;"	d	file:
FONTFILE	include/fileread.h	25;"	d
FONTFILEEXT	windows/default.c	389;"	d	file:
FONTFILENAME	documents/system.c	50;"	d	file:
FONTINFO	windows/fonts.c	/^} FONTINFO;$/;"	t	typeref:struct:__anon70	file:
FONTLATEX	output/latexout.c	75;"	d	file:
FONTPOS	windows/notadef.c	91;"	d	file:
FONTREC	unicode/unifont.c	/^struct FONTREC {$/;"	s	file:
FONTREC	unicode/unifont.c	/^typedef struct FONTREC FONTREC;$/;"	t	typeref:struct:FONTREC	file:
FONTREC	unicode/virtread.c	/^struct FONTREC {$/;"	s	file:
FONTREC	unicode/virtread.c	/^typedef struct FONTREC FONTREC;$/;"	t	typeref:struct:FONTREC	file:
FONTSTYPE	include/fileread.h	34;"	d
FONTSYMBOL	windows/output.c	109;"	d	file:
FONT_ERROR	include/unifont.h	20;"	d
FONT_NOT_LOADED	include/unifont.h	21;"	d
FONT_SUCCESS	include/unifont.h	19;"	d
FRACTION	unicode/datatotable.c	17;"	d	file:
FREE_BUFFER	include/fileread.h	16;"	d
FRWindow	treeedit/mathpad.hh	62;"	d
FSTATE	include/fstate.h	/^typedef Uchar FSTATE;$/;"	t
FUNCTION	language/parse.c	39;"	d	file:
FUNCTION	module/pvsparse.c	/^     FUNCTION = 266$/;"	e	enum:pvs_yytokentype	file:
FUNCTIONS	include/sources.h	/^} FUNCTIONS;$/;"	t	typeref:struct:__anon41
FUNCTIONTYPE	windows/editlib.c	/^} FUNCTIONTYPE;$/;"	t	typeref:struct:__anon87	file:
False	language/leaftree.c	40;"	d	file:
False	util/leaftree.c	40;"	d	file:
FifoClear	util/fifolist.c	/^void FifoClear(FifoList *flist, void (*destfunc)(void *obj))$/;"	f
FifoDestroy	util/fifolist.c	/^void FifoDestroy(FifoList *flist, void (*destfunc)(void*))$/;"	f
FifoLength	include/fifolist.h	24;"	d
FifoList	include/fifolist.h	/^typedef struct _FifoList FifoList;$/;"	t	typeref:struct:_FifoList
FifoMake	util/fifolist.c	/^FifoList *FifoMake(void)$/;"	f
FifoPop	util/fifolist.c	/^void *FifoPop(FifoList *flist)$/;"	f
FifoPush	util/fifolist.c	/^void FifoPush(FifoList *flist, void *object)$/;"	f
FileCompressed	util/filefind.c	/^typedef enum { FileNormal, FileCompressed,$/;"	e	enum:__anon62	file:
FileGzipped	util/filefind.c	/^	       FileGzipped, FileMaxType } FileType;$/;"	e	enum:__anon62	file:
FileList	windows/sources.c	/^struct FileList {$/;"	s	file:
FileList	windows/sources.c	/^typedef struct FileList FileList;$/;"	t	typeref:struct:FileList	file:
FileMaxType	util/filefind.c	/^	       FileGzipped, FileMaxType } FileType;$/;"	e	enum:__anon62	file:
FileNormal	util/filefind.c	/^typedef enum { FileNormal, FileCompressed,$/;"	e	enum:__anon62	file:
FileType	util/filefind.c	/^	       FileGzipped, FileMaxType } FileType;$/;"	t	typeref:enum:__anon62	file:
FilenametoUstr	unicode/unistring.c	/^Uchar *FilenametoUstr(const char *s)$/;"	f
FinishStep	module/pvs.c	70;"	d	file:
FirstFreeType	include/types.h	11;"	d
FirstOpCode	include/mathpad.h	91;"	d
FlexArray	include/flexarray.h	/^     } FlexArray;$/;"	t	typeref:struct:__anon38
Font	include/unifontX11.h	/^typedef FontID Font;$/;"	t
Font2Char	include/mathpad.h	123;"	d
FontAttrib	include/markup.h	/^    FontAttrib = 0xDB81,$/;"	e	enum:__anon52
FontChar	unicode/drawstring.c	/^} FontChar;$/;"	t	typeref:struct:__anon94	file:
FontFont	include/mathpad.h	85;"	d
FontID	include/unifontsys.h	/^typedef Font FontID;$/;"	t
FreeList	include/memman.h	/^} FreeList;$/;"	t	typeref:struct:__anon53
FreeList	module/pvsparse.c	/^} FreeList;$/;"	t	typeref:struct:__anon33	file:
FreeListMagic	util/memman.c	445;"	d	file:
FreeListWithBlockSize	include/memman.h	75;"	d
FreeListWithSizeAndMax	include/memman.h	76;"	d
FreeList_clear	util/memman.c	/^void FreeList_clear(FreeList *fl)$/;"	f
FreeList_fill	util/memman.c	/^void FreeList_fill(FreeList *fl)$/;"	f
FreeList_free	util/memman.c	/^void FreeList_free(FreeList *fl, void *data)$/;"	f
FreeList_malloc	util/memman.c	/^void *FreeList_malloc(FreeList *fl)$/;"	f
FuncDef	include/types.h	/^} FuncDef;$/;"	t	typeref:struct:__anon58
FuncDesc	language/parse.c	/^} FuncDesc;$/;"	t	typeref:struct:__anon11	file:
FuncRef	include/types.h	/^typedef FuncDef *FuncRef;$/;"	t
FuncSequence	include/sequence.h	/^struct FuncSequence {$/;"	s
FuncSequenceRef	include/sequence.h	/^typedef struct FuncSequence FuncSequenceRef;$/;"	t	typeref:struct:FuncSequence
Function	include/function.h	/^typedef void (*Function)();$/;"	t
FunctionDef	language/function.c	/^} FunctionDef;$/;"	t	typeref:struct:__anon1	file:
GENERALFILETYPE	include/fileread.h	35;"	d
GENERALINFOFILE	windows/fonts.c	51;"	d	file:
GEOMETRY	language/parse.c	62;"	d	file:
GETFUNC	include/fileread.h	/^typedef int (*GETFUNC)(Char*,int*,int);$/;"	t
GETSTRINGHELP	include/helpfile.h	95;"	d
GET_FREE	windows/output.c	1893;"	d	file:
GET_SET	util/fstate.c	205;"	d	file:
GREATER	language/parse.c	15;"	d	file:
GREATEREQUAL	language/parse.c	17;"	d	file:
GapBottom	include/mathpad.h	56;"	d
GapBox	windows/output.c	207;"	d	file:
GlueLine	include/mathpad.h	51;"	d
GlueSpace	include/mathpad.h	50;"	d
GlueStipple	include/mathpad.h	52;"	d
HASHSIZE	util/refcounting.c	23;"	d	file:
HASHSTORE	keyboard/keyboard.c	20;"	d	file:
HASHVALUE	util/refcounting.c	24;"	d	file:
HAVE_DIRENT_H	include/config.h	44;"	d
HAVE_FCNTL_H	include/config.h	47;"	d
HAVE_GETCWD	include/config.h	23;"	d
HAVE_LIBDL	include/config.h	77;"	d
HAVE_LIMITS_H	include/config.h	50;"	d
HAVE_MALLOC_H	include/config.h	53;"	d
HAVE_MKDIR	include/config.h	26;"	d
HAVE_PUTENV	include/config.h	29;"	d
HAVE_STRDUP	include/config.h	32;"	d
HAVE_STRERROR	include/config.h	35;"	d
HAVE_STRSTR	include/config.h	38;"	d
HAVE_STRTOL	include/config.h	41;"	d
HAVE_SYS_FILE_H	include/config.h	62;"	d
HAVE_UNISTD_H	include/config.h	68;"	d
HELPNAMEDESC	windows/notadef.c	81;"	d	file:
HORIZONTAL	include/scrollbar.h	16;"	d
HORIZONTAL_SHORT	include/scrollbar.h	18;"	d
HandleFunc	include/markup.h	/^typedef Uchar *(*HandleFunc)(int, Attribute *, RedirectFunc *);$/;"	t
HiddenStep	module/pvs.c	67;"	d	file:
ICONNAME	windows/buffer.c	54;"	d	file:
ICONNAME	windows/default.c	59;"	d	file:
ICONNAME	windows/fileselc.c	49;"	d	file:
ICONNAME	windows/find.c	58;"	d	file:
ICONNAME	windows/menu.c	69;"	d	file:
ICONNAME	windows/notadef.c	64;"	d	file:
ICONNAME	windows/notation.c	63;"	d	file:
ICONNAME	windows/symbol.c	51;"	d	file:
IDCLOSE	include/match.h	18;"	d
IDCLOSETREE	include/match.h	26;"	d
IDENTIFIER	language/parse.c	30;"	d	file:
IDENTIFIER	module/pvsparse.c	/^     IDENTIFIER = 265,$/;"	e	enum:pvs_yytokentype	file:
IDENTLENGTH	language/parse.c	1832;"	d	file:
IDFORBID	include/match.h	19;"	d
IDFORBIDTREE	include/match.h	25;"	d
IDOPEN	include/match.h	17;"	d
IDOPENTREE	include/match.h	24;"	d
IF	language/parse.c	41;"	d	file:
IGNOREMOD	keyboard/keys.c	40;"	d	file:
IMAGE	language/parse.c	56;"	d	file:
INCLUDE	language/parse.c	78;"	d	file:
INCLUDEBUTTON	windows/edit.c	/^	      OUTPUTBUTTON, INCLUDEBUTTON, DONEBUTTON, NR_BUTTON  };$/;"	e	enum:button	file:
INCLUDES	documents/Makefile	/^INCLUDES   = -I$(TOPSRCDIR)\/include -I$(TOPOBJDIR)\/include -I$(SRCDIR) -I. $(X_CFLAGS)$/;"	m
INCLUDES	include/Makefile	/^INCLUDES   = -I$(TOPSRCDIR)\/include -I$(TOPOBJDIR)\/include -I$(SRCDIR) -I. $(X_CFLAGS)$/;"	m
INCLUDES	keyboard/Makefile	/^INCLUDES   = -I$(TOPSRCDIR)\/include -I$(TOPOBJDIR)\/include -I$(SRCDIR) -I. $(X_CFLAGS)$/;"	m
INCLUDES	language/Makefile	/^INCLUDES   = -I$(TOPSRCDIR)\/include -I$(TOPOBJDIR)\/include -I$(SRCDIR) -I. $(X_CFLAGS)$/;"	m
INCLUDES	markup/Makefile	/^INCLUDES   = -I$(TOPSRCDIR)\/include -I$(TOPOBJDIR)\/include -I$(SRCDIR) -I. $(X_CFLAGS)$/;"	m
INCLUDES	module/Makefile	/^INCLUDES   = -I$(TOPSRCDIR)\/include -I$(TOPOBJDIR)\/include -I$(SRCDIR) -I. $(X_CFLAGS)$/;"	m
INCLUDES	output/Makefile	/^INCLUDES   = -I$(TOPSRCDIR)\/include -I$(TOPOBJDIR)\/include -I$(SRCDIR) -I. $(X_CFLAGS)$/;"	m
INCLUDES	templates/Makefile	/^INCLUDES   = -I$(TOPSRCDIR)\/include -I$(TOPOBJDIR)\/include -I$(SRCDIR) -I. $(X_CFLAGS)$/;"	m
INCLUDES	tools/Makefile	/^INCLUDES   = -I$(TOPSRCDIR)\/include -I$(TOPOBJDIR)\/include -I$(SRCDIR) -I. $(X_CFLAGS)$/;"	m
INCLUDES	treeedit/Makefile	/^INCLUDES   = -I$(TOPSRCDIR)\/include -I$(TOPOBJDIR)\/include -I$(SRCDIR) -I. $(X_CFLAGS)$/;"	m
INCLUDES	unicode/Makefile	/^INCLUDES   = -I$(TOPSRCDIR)\/include -I$(TOPOBJDIR)\/include -I$(SRCDIR) -I. $(X_CFLAGS)$/;"	m
INCLUDES	util/Makefile	/^INCLUDES   = -I$(TOPSRCDIR)\/include -I$(TOPOBJDIR)\/include -I$(SRCDIR) -I. $(X_CFLAGS)$/;"	m
INCLUDES	windows/Makefile	/^INCLUDES   = -I$(TOPSRCDIR)\/include -I$(TOPOBJDIR)\/include -I$(SRCDIR) -I. $(X_CFLAGS)$/;"	m
INFIX	include/match.h	12;"	d
INFOBUFMAX	unicode/unifont.c	19;"	d	file:
INITCREDIT	windows/sources.c	142;"	d	file:
INITIAL	language/parselex.c	5;"	d	file:
INITIAL	module/pvsparselex.c	6;"	d	file:
INPUT	language/parse.c	35;"	d	file:
INPUTCURSOR	windows/getstring.c	52;"	d	file:
INPUTTIME	tools/xpipein.c	68;"	d	file:
INPUT_OK	windows/getstring.c	78;"	d	file:
INPUT_OK	windows/notadef.c	84;"	d	file:
INSERT_BUFFER	include/fileread.h	15;"	d
INSERT_LENGTH	include/fileread.h	14;"	d
INSIDEWIDTH	windows/button.c	52;"	d	file:
INSTALL	documents/Makefile	/^INSTALL           = $(FIXINSTALL:.\/install-sh=$(TOPSRCDIR)\/install-sh)$/;"	m
INSTALL	include/Makefile	/^INSTALL           = $(FIXINSTALL:.\/install-sh=$(TOPSRCDIR)\/install-sh)$/;"	m
INSTALL	keyboard/Makefile	/^INSTALL           = $(FIXINSTALL:.\/install-sh=$(TOPSRCDIR)\/install-sh)$/;"	m
INSTALL	language/Makefile	/^INSTALL           = $(FIXINSTALL:.\/install-sh=$(TOPSRCDIR)\/install-sh)$/;"	m
INSTALL	markup/Makefile	/^INSTALL           = $(FIXINSTALL:.\/install-sh=$(TOPSRCDIR)\/install-sh)$/;"	m
INSTALL	module/Makefile	/^INSTALL           = $(FIXINSTALL:.\/install-sh=$(TOPSRCDIR)\/install-sh)$/;"	m
INSTALL	output/Makefile	/^INSTALL           = $(FIXINSTALL:.\/install-sh=$(TOPSRCDIR)\/install-sh)$/;"	m
INSTALL	templates/Makefile	/^INSTALL           = $(FIXINSTALL:.\/install-sh=$(TOPSRCDIR)\/install-sh)$/;"	m
INSTALL	tools/Makefile	/^INSTALL           = $(FIXINSTALL:.\/install-sh=$(TOPSRCDIR)\/install-sh)$/;"	m
INSTALL	treeedit/Makefile	/^INSTALL           = $(FIXINSTALL:.\/install-sh=$(TOPSRCDIR)\/install-sh)$/;"	m
INSTALL	unicode/Makefile	/^INSTALL           = $(FIXINSTALL:.\/install-sh=$(TOPSRCDIR)\/install-sh)$/;"	m
INSTALL	util/Makefile	/^INSTALL           = $(FIXINSTALL:.\/install-sh=$(TOPSRCDIR)\/install-sh)$/;"	m
INSTALL	windows/Makefile	/^INSTALL           = $(FIXINSTALL:.\/install-sh=$(TOPSRCDIR)\/install-sh)$/;"	m
INSTALLBUTTON	windows/notadef.c	/^enum button { INSTALLBUTTON, MODIFYBUTTON, DELETEBUTTON,$/;"	e	enum:button	file:
INSTALL_DATA	documents/Makefile	/^INSTALL_DATA      = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	include/Makefile	/^INSTALL_DATA      = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	keyboard/Makefile	/^INSTALL_DATA      = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	language/Makefile	/^INSTALL_DATA      = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	markup/Makefile	/^INSTALL_DATA      = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	module/Makefile	/^INSTALL_DATA      = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	output/Makefile	/^INSTALL_DATA      = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	templates/Makefile	/^INSTALL_DATA      = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	tools/Makefile	/^INSTALL_DATA      = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	treeedit/Makefile	/^INSTALL_DATA      = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	unicode/Makefile	/^INSTALL_DATA      = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	util/Makefile	/^INSTALL_DATA      = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	windows/Makefile	/^INSTALL_DATA      = ${INSTALL} -m 644$/;"	m
INSTALL_PROGRAM	documents/Makefile	/^INSTALL_PROGRAM   = ${INSTALL}$/;"	m
INSTALL_PROGRAM	include/Makefile	/^INSTALL_PROGRAM   = ${INSTALL}$/;"	m
INSTALL_PROGRAM	keyboard/Makefile	/^INSTALL_PROGRAM   = ${INSTALL}$/;"	m
INSTALL_PROGRAM	language/Makefile	/^INSTALL_PROGRAM   = ${INSTALL}$/;"	m
INSTALL_PROGRAM	markup/Makefile	/^INSTALL_PROGRAM   = ${INSTALL}$/;"	m
INSTALL_PROGRAM	module/Makefile	/^INSTALL_PROGRAM   = ${INSTALL}$/;"	m
INSTALL_PROGRAM	output/Makefile	/^INSTALL_PROGRAM   = ${INSTALL}$/;"	m
INSTALL_PROGRAM	templates/Makefile	/^INSTALL_PROGRAM   = ${INSTALL}$/;"	m
INSTALL_PROGRAM	tools/Makefile	/^INSTALL_PROGRAM   = ${INSTALL}$/;"	m
INSTALL_PROGRAM	treeedit/Makefile	/^INSTALL_PROGRAM   = ${INSTALL}$/;"	m
INSTALL_PROGRAM	unicode/Makefile	/^INSTALL_PROGRAM   = ${INSTALL}$/;"	m
INSTALL_PROGRAM	util/Makefile	/^INSTALL_PROGRAM   = ${INSTALL}$/;"	m
INSTALL_PROGRAM	windows/Makefile	/^INSTALL_PROGRAM   = ${INSTALL}$/;"	m
INTEGER	language/parse.c	31;"	d	file:
INTERNALFUNC	language/sequence.c	10;"	d	file:
INTERNAL_BRACES	include/mathpad.h	144;"	d
INTERNAL_DISPLAY	include/mathpad.h	146;"	d
INTERNAL_EXPRESSION	include/mathpad.h	145;"	d
INTERNAL_TEXT	include/mathpad.h	147;"	d
INTERRUPT_COUNT	treeedit/mark.cc	44;"	d	file:
INTERSPACE	include/system.h	21;"	d
INTSTACK	include/intstack.h	/^struct INTSTACK {$/;"	s
INTSTACK	include/intstack.h	/^typedef struct INTSTACK INTSTACK;$/;"	t	typeref:struct:INTSTACK
INVISIBLE	include/output.h	15;"	d
ISOLANG	markup/lang_markup.c	/^typedef struct ISOLANG {$/;"	s	file:
ISOLANG	markup/lang_markup.c	/^} ISOLANG;$/;"	t	typeref:struct:ISOLANG	file:
IS_ALPHA	include/unitype.h	47;"	d
IS_ARAB_NUM	include/unitype.h	72;"	d
IS_ARAB_NUM	unicode/datatotable.c	56;"	d	file:
IS_BLANK	include/unitype.h	35;"	d
IS_CLOSE	include/unitype.h	52;"	d
IS_CLOSE	unicode/datatotable.c	43;"	d	file:
IS_COMBINING	include/unitype.h	25;"	d
IS_COMBINING	unicode/datatotable.c	27;"	d	file:
IS_COMBMOD	include/unitype.h	26;"	d
IS_CONTCLASS	include/unitype.h	40;"	d
IS_CONTROL	include/unitype.h	37;"	d
IS_CONTROL	unicode/datatotable.c	33;"	d	file:
IS_CURRENCY	include/unitype.h	59;"	d
IS_CURRENCY	unicode/datatotable.c	47;"	d	file:
IS_DASH	include/unitype.h	50;"	d
IS_DASH	unicode/datatotable.c	41;"	d	file:
IS_DIGIT	include/unitype.h	28;"	d
IS_DIGIT	unicode/datatotable.c	28;"	d	file:
IS_EURO_NUM	include/unitype.h	69;"	d
IS_EURO_NUM	unicode/datatotable.c	53;"	d	file:
IS_EURO_NUM_SEP	include/unitype.h	70;"	d
IS_EURO_NUM_SEP	unicode/datatotable.c	54;"	d	file:
IS_EURO_NUM_TERM	include/unitype.h	71;"	d
IS_EURO_NUM_TERM	unicode/datatotable.c	55;"	d	file:
IS_GRAPH	include/unitype.h	63;"	d
IS_LEFT_RIGHT	include/unitype.h	67;"	d
IS_LEFT_RIGHT	unicode/datatotable.c	51;"	d	file:
IS_LINE	include/unitype.h	33;"	d
IS_LINE	unicode/datatotable.c	31;"	d	file:
IS_LOWERCASE	include/unitype.h	43;"	d
IS_LOWERCASE	unicode/datatotable.c	37;"	d	file:
IS_MATH	include/unitype.h	58;"	d
IS_MATH	unicode/datatotable.c	46;"	d	file:
IS_MIRROR	include/unitype.h	56;"	d
IS_MIRROR	unicode/datatotable.c	45;"	d	file:
IS_MODIFIER	include/unitype.h	45;"	d
IS_MODIFIER	unicode/datatotable.c	39;"	d	file:
IS_NONSPACE	include/unitype.h	24;"	d
IS_NONSPACE	unicode/datatotable.c	26;"	d	file:
IS_NOT_ASSIGNED	include/unitype.h	39;"	d
IS_NOT_ASSIGNED	unicode/datatotable.c	35;"	d	file:
IS_NUM	include/unitype.h	30;"	d
IS_OPEN	include/unitype.h	51;"	d
IS_OPEN	unicode/datatotable.c	42;"	d	file:
IS_OTHER_LETTER	include/unitype.h	46;"	d
IS_OTHER_LETTER	unicode/datatotable.c	40;"	d	file:
IS_OTHER_NEUT	include/unitype.h	74;"	d
IS_OTHER_NEUT	unicode/datatotable.c	58;"	d	file:
IS_OTHER_NUM	include/unitype.h	29;"	d
IS_OTHER_NUM	unicode/datatotable.c	29;"	d	file:
IS_OTHER_PUNCT	include/unitype.h	53;"	d
IS_OTHER_PUNCT	unicode/datatotable.c	44;"	d	file:
IS_OTHER_SYMBOL	include/unitype.h	60;"	d
IS_OTHER_SYMBOL	unicode/datatotable.c	48;"	d	file:
IS_PARAGRAPH	include/unitype.h	34;"	d
IS_PARAGRAPH	unicode/datatotable.c	32;"	d	file:
IS_PRINT	include/unitype.h	64;"	d
IS_PRIVATE	include/unitype.h	38;"	d
IS_PRIVATE	unicode/datatotable.c	34;"	d	file:
IS_PUNCT	include/unitype.h	54;"	d
IS_RIGHT_LEFT	include/unitype.h	68;"	d
IS_RIGHT_LEFT	unicode/datatotable.c	52;"	d	file:
IS_SPACE	include/unitype.h	32;"	d
IS_SPACE	unicode/datatotable.c	30;"	d	file:
IS_SYMBOL	include/unitype.h	61;"	d
IS_TITLECASE	include/unitype.h	44;"	d
IS_TITLECASE	unicode/datatotable.c	38;"	d	file:
IS_UPPERCASE	include/unitype.h	42;"	d
IS_UPPERCASE	unicode/datatotable.c	36;"	d	file:
IS_WHITESPACE	include/unitype.h	73;"	d
IS_WHITESPACE	unicode/datatotable.c	57;"	d	file:
ITEMDESC	windows/menu.c	/^typedef struct ITEMDESC { $/;"	s	file:
ITEMDESC	windows/menu.c	/^} ITEMDESC;$/;"	t	typeref:struct:ITEMDESC	file:
ITEMLIST	windows/notadef.c	/^       } ITEMLIST;$/;"	t	typeref:struct:__anon88	file:
InDisp	include/mathpad.h	40;"	d
InExpr	module/pvs.c	661;"	d	file:
InMath	include/mathpad.h	39;"	d
InPathInfo	util/filefind.c	/^} InPathInfo;$/;"	t	typeref:struct:__anon64	file:
InRubbish	module/pvs.c	660;"	d	file:
InText	include/mathpad.h	38;"	d
Index	include/mathpad.h	/^typedef unsigned int Index;$/;"	t
Index	module/pvsparse.c	/^typedef unsigned int Index;$/;"	t	file:
Infix	include/mathpad.h	/^                      Infix, LeftBinding, RightBinding$/;"	e	enum:Opkind
Infix	module/pvsparse.c	/^                      Infix, LeftBinding, RightBinding$/;"	e	enum:Opkind	file:
InitStep	module/pvs.c	66;"	d	file:
IntFuncType	language/expression.c	26;"	d	file:
IntType	include/types.h	7;"	d
IsArray	include/types.h	22;"	d
IsConst	include/types.h	21;"	d
IsCursorBox	windows/output.c	218;"	d	file:
IsDisp	treeedit/mathpad.hh	69;"	d
IsDispOrExpr	treeedit/mathpad.hh	70;"	d
IsDouble	keyboard/X11syskeys.c	32;"	d	file:
IsDown	keyboard/X11syskeys.c	34;"	d	file:
IsDrag	keyboard/X11syskeys.c	36;"	d	file:
IsExpr	treeedit/mathpad.hh	64;"	d
IsFieldBox	windows/output.c	210;"	d	file:
IsFormatPrefix	include/markup.h	100;"	d
IsId	treeedit/mathpad.hh	68;"	d
IsImportantClose	include/mathpad.h	129;"	d
IsImportantOpen	include/mathpad.h	128;"	d
IsLineBox	windows/output.c	215;"	d	file:
IsModifier	keyboard/X11syskeys.c	/^int IsModifier(KeyNum key)$/;"	f
IsMotion	keyboard/X11syskeys.c	37;"	d	file:
IsMouseKey	keyboard/X11syskeys.c	39;"	d	file:
IsNewline	include/mathpad.h	98;"	d
IsNum	keyboard/X11syskeys.c	38;"	d	file:
IsOp	treeedit/mathpad.hh	65;"	d
IsOpCode	include/mathpad.h	127;"	d
IsOpCode	language/popupmenu.c	104;"	d	file:
IsOpspace	include/mathpad.h	121;"	d
IsPh	include/mathpad.h	113;"	d
IsPrefix	include/markup.h	99;"	d
IsRef	include/types.h	20;"	d
IsStackBox	windows/output.c	205;"	d	file:
IsTab	include/mathpad.h	97;"	d
IsText	treeedit/mathpad.hh	66;"	d
IsTriple	keyboard/X11syskeys.c	33;"	d	file:
IsUp	keyboard/X11syskeys.c	35;"	d	file:
IsVar	treeedit/mathpad.hh	67;"	d
KEY	language/parse.c	34;"	d	file:
KEYBOARD	language/parse.c	38;"	d	file:
KEYBOARDFILE	include/fileread.h	22;"	d
KEYBOARDHELP	include/helpfile.h	94;"	d
KEYBOARDTYPE	include/fileread.h	36;"	d
KEYCODE	tools/mpd2tex.cc	41;"	d	file:
KEYFIELD	windows/default.c	118;"	d	file:
KEYPATH	documents/system.c	51;"	d	file:
KEYS_H	include/keys.h	3;"	d
KILLBUTTON	windows/buffer.c	/^enum button { KILLBUTTON, DONEBUTTON, NR_BUTTON };$/;"	e	enum:button	file:
KIND	module/hugsparse.c	/^typedef void *KIND;    \/* expression node *\/$/;"	t	file:
KINDPOS	windows/notadef.c	88;"	d	file:
Key	include/keyboard.h	/^} Key;$/;"	t	typeref:struct:__anon49
KeyButtonDblDown	keyboard/X11syskeys.c	22;"	d	file:
KeyButtonDblUp	keyboard/X11syskeys.c	25;"	d	file:
KeyButtonDown	keyboard/X11syskeys.c	21;"	d	file:
KeyButtonTripleDown	keyboard/X11syskeys.c	23;"	d	file:
KeyButtonTripleUp	keyboard/X11syskeys.c	26;"	d	file:
KeyButtonUp	keyboard/X11syskeys.c	24;"	d	file:
KeyDblDrag	keyboard/X11syskeys.c	28;"	d	file:
KeyDesc	language/parse.c	/^} KeyDesc;$/;"	t	typeref:struct:__anon12	file:
KeyDrag	keyboard/X11syskeys.c	27;"	d	file:
KeyFunc	windows/getstring.c	/^} KeyFunc;$/;"	t	typeref:struct:__anon78	file:
KeyFunc	windows/notadef.c	/^} KeyFunc;$/;"	t	typeref:struct:__anon90	file:
KeyList	keyboard/keyboard.c	/^struct KeyList {$/;"	s	file:
KeyList	keyboard/keyboard.c	/^typedef struct KeyList KeyList;$/;"	t	typeref:struct:KeyList	file:
KeyList	language/parse.c	/^} KeyList;$/;"	t	typeref:struct:__anon13	file:
KeyMap	include/keyboard.h	/^typedef struct keymap KeyMap;$/;"	t	typeref:struct:keymap
KeyMapList	keyboard/keyboard.c	/^struct KeyMapList {$/;"	s	file:
KeyMapList	keyboard/keyboard.c	/^typedef struct KeyMapList KeyMapList;$/;"	t	typeref:struct:KeyMapList	file:
KeyMode	include/keys.h	/^typedef unsigned int KeyMode;$/;"	t
KeyMotion	keyboard/X11syskeys.c	30;"	d	file:
KeyNum	include/keys.h	/^typedef unsigned int KeyNum;$/;"	t
KeyStack	keyboard/keyboard.c	/^struct KeyStack {$/;"	s	file:
KeyStack	keyboard/keyboard.c	/^typedef struct KeyStack KeyStack;$/;"	t	typeref:struct:KeyStack	file:
KeyStackInfo	keyboard/keyboard.c	/^} KeyStackInfo;$/;"	t	typeref:struct:KeyStackInfoRec	file:
KeyStackInfoRec	keyboard/keyboard.c	/^typedef struct KeyStackInfoRec {$/;"	s	file:
KeyToString	keyboard/X11syskeys.c	/^char *KeyToString(KeyNum key)$/;"	f
KeyTripleDrag	keyboard/X11syskeys.c	29;"	d	file:
KeywordItem	module/pvs.c	/^struct KeywordItem {$/;"	s	file:
KeywordItem	module/pvs.c	/^typedef struct KeywordItem KeywordItem;$/;"	t	typeref:struct:KeywordItem	file:
KeywordStep	module/pvs.c	69;"	d	file:
Kind	treeedit/marker.hh	/^enum Kind { View, Left, LeftLine, Right, Line, Tree };$/;"	g
LASTFONT	windows/output.c	92;"	d	file:
LATEXDESC	windows/notadef.c	83;"	d	file:
LATEXDIR	documents/system.c	48;"	d	file:
LATEXFORMAT	include/notatype.h	20;"	d
LATEXPOS	windows/notadef.c	90;"	d	file:
LATEX_PH	output/latexout.c	18;"	d	file:
LATEX_PHNUM	output/latexout.c	20;"	d	file:
LATEX_TAB	output/latexout.c	16;"	d	file:
LAYOUT	language/parse.c	36;"	d	file:
LAZYREF	language/parse.c	28;"	d	file:
LBOTHMODE	include/mathpad.h	141;"	d
LDEFMODE	include/mathpad.h	138;"	d
LEFT	language/parse.c	58;"	d	file:
LEFTRIGHT	language/parse.c	50;"	d	file:
LEFT_LINE	windows/default.c	60;"	d	file:
LENEMPTYFILE	windows/edit.c	69;"	d	file:
LESS	language/parse.c	14;"	d	file:
LESSEQUAL	language/parse.c	16;"	d	file:
LEX	documents/Makefile	/^LEX       = flex$/;"	m
LEX	include/Makefile	/^LEX       = flex$/;"	m
LEX	keyboard/Makefile	/^LEX       = flex$/;"	m
LEX	language/Makefile	/^LEX       = flex$/;"	m
LEX	markup/Makefile	/^LEX       = flex$/;"	m
LEX	module/Makefile	/^LEX       = flex$/;"	m
LEX	output/Makefile	/^LEX       = flex$/;"	m
LEX	templates/Makefile	/^LEX       = flex$/;"	m
LEX	tools/Makefile	/^LEX       = flex$/;"	m
LEX	treeedit/Makefile	/^LEX       = flex$/;"	m
LEX	unicode/Makefile	/^LEX       = flex$/;"	m
LEX	util/Makefile	/^LEX       = flex$/;"	m
LEX	windows/Makefile	/^LEX       = flex$/;"	m
LEXLIB	documents/Makefile	/^LEXLIB    = -lfl$/;"	m
LEXLIB	include/Makefile	/^LEXLIB    = -lfl$/;"	m
LEXLIB	keyboard/Makefile	/^LEXLIB    = -lfl$/;"	m
LEXLIB	language/Makefile	/^LEXLIB    = -lfl$/;"	m
LEXLIB	markup/Makefile	/^LEXLIB    = -lfl$/;"	m
LEXLIB	module/Makefile	/^LEXLIB    = -lfl$/;"	m
LEXLIB	output/Makefile	/^LEXLIB    = -lfl$/;"	m
LEXLIB	templates/Makefile	/^LEXLIB    = -lfl$/;"	m
LEXLIB	tools/Makefile	/^LEXLIB    = -lfl$/;"	m
LEXLIB	treeedit/Makefile	/^LEXLIB    = -lfl$/;"	m
LEXLIB	unicode/Makefile	/^LEXLIB    = -lfl$/;"	m
LEXLIB	util/Makefile	/^LEXLIB    = -lfl$/;"	m
LEXLIB	windows/Makefile	/^LEXLIB    = -lfl$/;"	m
LIBRARIES	documents/Makefile	/^LIBRARIES = libdocuments.la$/;"	m
LIBRARIES	keyboard/Makefile	/^LIBRARIES = libkeyboard.la$/;"	m
LIBRARIES	language/Makefile	/^LIBRARIES = liblanguage.la libint.la libstring.la libreal.la$/;"	m
LIBRARIES	module/Makefile	/^LIBRARIES = libpvs.la libMAG.la$/;"	m
LIBRARIES	output/Makefile	/^LIBRARIES = liboutput.la$/;"	m
LIBRARIES	templates/Makefile	/^LIBRARIES = libtemplates.la$/;"	m
LIBRARIES	treeedit/Makefile	/^LIBRARIES = libtreeedit.la$/;"	m
LIBRARIES	unicode/Makefile	/^LIBRARIES = libunicode.la$/;"	m
LIBRARIES	util/Makefile	/^LIBRARIES = libutil.la$/;"	m
LIBRARIES	windows/Makefile	/^LIBRARIES = libwindows.la$/;"	m
LIBS	documents/Makefile	/^LIBS      = -ldl $/;"	m
LIBS	include/Makefile	/^LIBS      = -ldl $/;"	m
LIBS	keyboard/Makefile	/^LIBS      = -ldl $/;"	m
LIBS	language/Makefile	/^LIBS      = -ldl $/;"	m
LIBS	markup/Makefile	/^LIBS      = -ldl $/;"	m
LIBS	module/Makefile	/^LIBS      = -ldl $/;"	m
LIBS	output/Makefile	/^LIBS      = -ldl $/;"	m
LIBS	templates/Makefile	/^LIBS      = -ldl $/;"	m
LIBS	tools/Makefile	/^LIBS      = -ldl $/;"	m
LIBS	treeedit/Makefile	/^LIBS      = -ldl $/;"	m
LIBS	unicode/Makefile	/^LIBS      = -ldl $/;"	m
LIBS	util/Makefile	/^LIBS      = -ldl $/;"	m
LIBS	windows/Makefile	/^LIBS      = -ldl $/;"	m
LIBTOOL	documents/Makefile	/^LIBTOOL   = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	include/Makefile	/^LIBTOOL   = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	keyboard/Makefile	/^LIBTOOL   = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	language/Makefile	/^LIBTOOL   = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	markup/Makefile	/^LIBTOOL   = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	module/Makefile	/^LIBTOOL   = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	output/Makefile	/^LIBTOOL   = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	templates/Makefile	/^LIBTOOL   = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	tools/Makefile	/^LIBTOOL   = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	treeedit/Makefile	/^LIBTOOL   = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	unicode/Makefile	/^LIBTOOL   = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	util/Makefile	/^LIBTOOL   = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	windows/Makefile	/^LIBTOOL   = $(SHELL) $(top_builddir)\/libtool$/;"	m
LINESEL	treeedit/select.cc	59;"	d	file:
LINE_SP	windows/default.c	63;"	d	file:
LINK	documents/Makefile	/^LINK = $(LIBTOOL) --mode=link $(CC) $(CFLAGS) $(LDFLAGS)$/;"	m
LINK	include/Makefile	/^LINK = $(LIBTOOL) --mode=link $(CC) $(CFLAGS) $(LDFLAGS)$/;"	m
LINK	keyboard/Makefile	/^LINK = $(LIBTOOL) --mode=link $(CC) $(CFLAGS) $(LDFLAGS)$/;"	m
LINK	language/Makefile	/^LINK = $(LIBTOOL) --mode=link $(CC) $(CFLAGS) $(LDFLAGS)$/;"	m
LINK	markup/Makefile	/^LINK = $(LIBTOOL) --mode=link $(CC) $(CFLAGS) $(LDFLAGS)$/;"	m
LINK	module/Makefile	/^LINK = $(LIBTOOL) --mode=link $(CC) $(CFLAGS) $(LDFLAGS)$/;"	m
LINK	output/Makefile	/^LINK = $(LIBTOOL) --mode=link $(CC) $(CFLAGS) $(LDFLAGS)$/;"	m
LINK	templates/Makefile	/^LINK = $(LIBTOOL) --mode=link $(CC) $(CFLAGS) $(LDFLAGS)$/;"	m
LINK	tools/Makefile	/^LINK = $(LIBTOOL) --mode=link $(CC) $(CFLAGS) $(LDFLAGS)$/;"	m
LINK	treeedit/Makefile	/^LINK = $(LIBTOOL) --mode=link $(CC) $(CFLAGS) $(LDFLAGS)$/;"	m
LINK	unicode/Makefile	/^LINK = $(LIBTOOL) --mode=link $(CC) $(CFLAGS) $(LDFLAGS)$/;"	m
LINK	util/Makefile	/^LINK = $(LIBTOOL) --mode=link $(CC) $(CFLAGS) $(LDFLAGS)$/;"	m
LINK	windows/Makefile	/^LINK = $(LIBTOOL) --mode=link $(CC) $(CFLAGS) $(LDFLAGS)$/;"	m
LINKXX	documents/Makefile	/^LINKXX = $(LIBTOOL) --mode=link $(CXX) $(CXXFLAGS) $(LDFLAGS)$/;"	m
LINKXX	include/Makefile	/^LINKXX = $(LIBTOOL) --mode=link $(CXX) $(CXXFLAGS) $(LDFLAGS)$/;"	m
LINKXX	keyboard/Makefile	/^LINKXX = $(LIBTOOL) --mode=link $(CXX) $(CXXFLAGS) $(LDFLAGS)$/;"	m
LINKXX	language/Makefile	/^LINKXX = $(LIBTOOL) --mode=link $(CXX) $(CXXFLAGS) $(LDFLAGS)$/;"	m
LINKXX	markup/Makefile	/^LINKXX = $(LIBTOOL) --mode=link $(CXX) $(CXXFLAGS) $(LDFLAGS)$/;"	m
LINKXX	module/Makefile	/^LINKXX = $(LIBTOOL) --mode=link $(CXX) $(CXXFLAGS) $(LDFLAGS)$/;"	m
LINKXX	output/Makefile	/^LINKXX = $(LIBTOOL) --mode=link $(CXX) $(CXXFLAGS) $(LDFLAGS)$/;"	m
LINKXX	templates/Makefile	/^LINKXX = $(LIBTOOL) --mode=link $(CXX) $(CXXFLAGS) $(LDFLAGS)$/;"	m
LINKXX	tools/Makefile	/^LINKXX = $(LIBTOOL) --mode=link $(CXX) $(CXXFLAGS) $(LDFLAGS)$/;"	m
LINKXX	treeedit/Makefile	/^LINKXX = $(LIBTOOL) --mode=link $(CXX) $(CXXFLAGS) $(LDFLAGS)$/;"	m
LINKXX	unicode/Makefile	/^LINKXX = $(LIBTOOL) --mode=link $(CXX) $(CXXFLAGS) $(LDFLAGS)$/;"	m
LINKXX	util/Makefile	/^LINKXX = $(LIBTOOL) --mode=link $(CXX) $(CXXFLAGS) $(LDFLAGS)$/;"	m
LINKXX	windows/Makefile	/^LINKXX = $(LIBTOOL) --mode=link $(CXX) $(CXXFLAGS) $(LDFLAGS)$/;"	m
LISTELM	util/debug.c	/^} LISTELM;$/;"	t	typeref:struct:__anon65	file:
LISTELM	util/memman.c	/^} LISTELM;$/;"	t	typeref:struct:__anon66	file:
LISTELM	windows/notation.c	/^} LISTELM;$/;"	t	typeref:struct:__anon73	file:
LISTSTORE	keyboard/keyboard.c	18;"	d	file:
LIdClose	include/latexout.h	/^               SIdOpen, SIdClose, LIdOpen, LIdClose, VarOpen, VarClose,$/;"	e	enum:__anon44
LIdOpen	include/latexout.h	/^               SIdOpen, SIdClose, LIdOpen, LIdClose, VarOpen, VarClose,$/;"	e	enum:__anon44
LMATHMODE	include/mathpad.h	140;"	d
LN_S	documents/Makefile	/^LN_S      = ln -s$/;"	m
LN_S	include/Makefile	/^LN_S      = ln -s$/;"	m
LN_S	keyboard/Makefile	/^LN_S      = ln -s$/;"	m
LN_S	language/Makefile	/^LN_S      = ln -s$/;"	m
LN_S	markup/Makefile	/^LN_S      = ln -s$/;"	m
LN_S	module/Makefile	/^LN_S      = ln -s$/;"	m
LN_S	output/Makefile	/^LN_S      = ln -s$/;"	m
LN_S	templates/Makefile	/^LN_S      = ln -s$/;"	m
LN_S	tools/Makefile	/^LN_S      = ln -s$/;"	m
LN_S	treeedit/Makefile	/^LN_S      = ln -s$/;"	m
LN_S	unicode/Makefile	/^LN_S      = ln -s$/;"	m
LN_S	util/Makefile	/^LN_S      = ln -s$/;"	m
LN_S	windows/Makefile	/^LN_S      = ln -s$/;"	m
LOADBUTTON	windows/edit.c	/^enum button { LOADBUTTON,  SAVEBUTTON,    RENAMEBUTTON,$/;"	e	enum:button	file:
LOADBUTTON	windows/notation.c	/^enum button { LOADBUTTON,   SAVEBUTTON, RENAMEBUTTON,$/;"	e	enum:button	file:
LOADCOD	windows/find.c	/^	      FINDCOD, REPLCOD, REPFCOD, REPACOD, LOADCOD,$/;"	e	enum:button	file:
LOGICAND	language/parse.c	9;"	d	file:
LOGICNOT	language/parse.c	26;"	d	file:
LOGICOR	language/parse.c	7;"	d	file:
LOGICXOR	language/parse.c	8;"	d	file:
LOG_MESSAGE	util/refcounting.c	31;"	d	file:
LOG_MESSAGE	util/refcounting.c	33;"	d	file:
LONG_REMARK	include/remark.h	16;"	d
LOOKUPITEM	templates/notatype.c	/^} LOOKUPITEM;$/;"	t	typeref:struct:__anon36	file:
LOWEQ	unicode/datatotable.c	22;"	d	file:
LOpClose	include/latexout.h	/^typedef enum { ExprOpen, ExprClose, SOpOpen, SOpClose, LOpOpen, LOpClose,$/;"	e	enum:__anon44
LOpOpen	include/latexout.h	/^typedef enum { ExprOpen, ExprClose, SOpOpen, SOpClose, LOpOpen, LOpClose,$/;"	e	enum:__anon44
LTCOMPILE	documents/Makefile	/^LTCOMPILE = $(LIBTOOL) --mode=compile $(COMPILE)$/;"	m
LTCOMPILE	include/Makefile	/^LTCOMPILE = $(LIBTOOL) --mode=compile $(COMPILE)$/;"	m
LTCOMPILE	keyboard/Makefile	/^LTCOMPILE = $(LIBTOOL) --mode=compile $(COMPILE)$/;"	m
LTCOMPILE	language/Makefile	/^LTCOMPILE = $(LIBTOOL) --mode=compile $(COMPILE)$/;"	m
LTCOMPILE	markup/Makefile	/^LTCOMPILE = $(LIBTOOL) --mode=compile $(COMPILE)$/;"	m
LTCOMPILE	module/Makefile	/^LTCOMPILE = $(LIBTOOL) --mode=compile $(COMPILE)$/;"	m
LTCOMPILE	output/Makefile	/^LTCOMPILE = $(LIBTOOL) --mode=compile $(COMPILE)$/;"	m
LTCOMPILE	templates/Makefile	/^LTCOMPILE = $(LIBTOOL) --mode=compile $(COMPILE)$/;"	m
LTCOMPILE	tools/Makefile	/^LTCOMPILE = $(LIBTOOL) --mode=compile $(COMPILE)$/;"	m
LTCOMPILE	treeedit/Makefile	/^LTCOMPILE = $(LIBTOOL) --mode=compile $(COMPILE)$/;"	m
LTCOMPILE	unicode/Makefile	/^LTCOMPILE = $(LIBTOOL) --mode=compile $(COMPILE)$/;"	m
LTCOMPILE	util/Makefile	/^LTCOMPILE = $(LIBTOOL) --mode=compile $(COMPILE)$/;"	m
LTCOMPILE	windows/Makefile	/^LTCOMPILE = $(LIBTOOL) --mode=compile $(COMPILE)$/;"	m
LTCOMPILEXX	documents/Makefile	/^LTCOMPILEXX = $(LIBTOOL) --mode=compile $(COMPILEXX)$/;"	m
LTCOMPILEXX	include/Makefile	/^LTCOMPILEXX = $(LIBTOOL) --mode=compile $(COMPILEXX)$/;"	m
LTCOMPILEXX	keyboard/Makefile	/^LTCOMPILEXX = $(LIBTOOL) --mode=compile $(COMPILEXX)$/;"	m
LTCOMPILEXX	language/Makefile	/^LTCOMPILEXX = $(LIBTOOL) --mode=compile $(COMPILEXX)$/;"	m
LTCOMPILEXX	markup/Makefile	/^LTCOMPILEXX = $(LIBTOOL) --mode=compile $(COMPILEXX)$/;"	m
LTCOMPILEXX	module/Makefile	/^LTCOMPILEXX = $(LIBTOOL) --mode=compile $(COMPILEXX)$/;"	m
LTCOMPILEXX	output/Makefile	/^LTCOMPILEXX = $(LIBTOOL) --mode=compile $(COMPILEXX)$/;"	m
LTCOMPILEXX	templates/Makefile	/^LTCOMPILEXX = $(LIBTOOL) --mode=compile $(COMPILEXX)$/;"	m
LTCOMPILEXX	tools/Makefile	/^LTCOMPILEXX = $(LIBTOOL) --mode=compile $(COMPILEXX)$/;"	m
LTCOMPILEXX	treeedit/Makefile	/^LTCOMPILEXX = $(LIBTOOL) --mode=compile $(COMPILEXX)$/;"	m
LTCOMPILEXX	unicode/Makefile	/^LTCOMPILEXX = $(LIBTOOL) --mode=compile $(COMPILEXX)$/;"	m
LTCOMPILEXX	util/Makefile	/^LTCOMPILEXX = $(LIBTOOL) --mode=compile $(COMPILEXX)$/;"	m
LTCOMPILEXX	windows/Makefile	/^LTCOMPILEXX = $(LIBTOOL) --mode=compile $(COMPILEXX)$/;"	m
LTEXTMODE	include/mathpad.h	139;"	d
LTINSTALL	documents/Makefile	/^LTINSTALL         = $(LIBTOOL) --mode=install $(INSTALL)$/;"	m
LTINSTALL	include/Makefile	/^LTINSTALL         = $(LIBTOOL) --mode=install $(INSTALL)$/;"	m
LTINSTALL	keyboard/Makefile	/^LTINSTALL         = $(LIBTOOL) --mode=install $(INSTALL)$/;"	m
LTINSTALL	language/Makefile	/^LTINSTALL         = $(LIBTOOL) --mode=install $(INSTALL)$/;"	m
LTINSTALL	markup/Makefile	/^LTINSTALL         = $(LIBTOOL) --mode=install $(INSTALL)$/;"	m
LTINSTALL	module/Makefile	/^LTINSTALL         = $(LIBTOOL) --mode=install $(INSTALL)$/;"	m
LTINSTALL	output/Makefile	/^LTINSTALL         = $(LIBTOOL) --mode=install $(INSTALL)$/;"	m
LTINSTALL	templates/Makefile	/^LTINSTALL         = $(LIBTOOL) --mode=install $(INSTALL)$/;"	m
LTINSTALL	tools/Makefile	/^LTINSTALL         = $(LIBTOOL) --mode=install $(INSTALL)$/;"	m
LTINSTALL	treeedit/Makefile	/^LTINSTALL         = $(LIBTOOL) --mode=install $(INSTALL)$/;"	m
LTINSTALL	unicode/Makefile	/^LTINSTALL         = $(LIBTOOL) --mode=install $(INSTALL)$/;"	m
LTINSTALL	util/Makefile	/^LTINSTALL         = $(LIBTOOL) --mode=install $(INSTALL)$/;"	m
LTINSTALL	windows/Makefile	/^LTINSTALL         = $(LIBTOOL) --mode=install $(INSTALL)$/;"	m
LTINSTALL_DATA	documents/Makefile	/^LTINSTALL_DATA    = $(LIBTOOL) --mode=install $(INSTALL_DATA)$/;"	m
LTINSTALL_DATA	include/Makefile	/^LTINSTALL_DATA    = $(LIBTOOL) --mode=install $(INSTALL_DATA)$/;"	m
LTINSTALL_DATA	keyboard/Makefile	/^LTINSTALL_DATA    = $(LIBTOOL) --mode=install $(INSTALL_DATA)$/;"	m
LTINSTALL_DATA	language/Makefile	/^LTINSTALL_DATA    = $(LIBTOOL) --mode=install $(INSTALL_DATA)$/;"	m
LTINSTALL_DATA	markup/Makefile	/^LTINSTALL_DATA    = $(LIBTOOL) --mode=install $(INSTALL_DATA)$/;"	m
LTINSTALL_DATA	module/Makefile	/^LTINSTALL_DATA    = $(LIBTOOL) --mode=install $(INSTALL_DATA)$/;"	m
LTINSTALL_DATA	output/Makefile	/^LTINSTALL_DATA    = $(LIBTOOL) --mode=install $(INSTALL_DATA)$/;"	m
LTINSTALL_DATA	templates/Makefile	/^LTINSTALL_DATA    = $(LIBTOOL) --mode=install $(INSTALL_DATA)$/;"	m
LTINSTALL_DATA	tools/Makefile	/^LTINSTALL_DATA    = $(LIBTOOL) --mode=install $(INSTALL_DATA)$/;"	m
LTINSTALL_DATA	treeedit/Makefile	/^LTINSTALL_DATA    = $(LIBTOOL) --mode=install $(INSTALL_DATA)$/;"	m
LTINSTALL_DATA	unicode/Makefile	/^LTINSTALL_DATA    = $(LIBTOOL) --mode=install $(INSTALL_DATA)$/;"	m
LTINSTALL_DATA	util/Makefile	/^LTINSTALL_DATA    = $(LIBTOOL) --mode=install $(INSTALL_DATA)$/;"	m
LTINSTALL_DATA	windows/Makefile	/^LTINSTALL_DATA    = $(LIBTOOL) --mode=install $(INSTALL_DATA)$/;"	m
LTINSTALL_PROGRAM	documents/Makefile	/^LTINSTALL_PROGRAM = $(LIBTOOL) --mode=install $(INSTALL_PROGRAM)$/;"	m
LTINSTALL_PROGRAM	include/Makefile	/^LTINSTALL_PROGRAM = $(LIBTOOL) --mode=install $(INSTALL_PROGRAM)$/;"	m
LTINSTALL_PROGRAM	keyboard/Makefile	/^LTINSTALL_PROGRAM = $(LIBTOOL) --mode=install $(INSTALL_PROGRAM)$/;"	m
LTINSTALL_PROGRAM	language/Makefile	/^LTINSTALL_PROGRAM = $(LIBTOOL) --mode=install $(INSTALL_PROGRAM)$/;"	m
LTINSTALL_PROGRAM	markup/Makefile	/^LTINSTALL_PROGRAM = $(LIBTOOL) --mode=install $(INSTALL_PROGRAM)$/;"	m
LTINSTALL_PROGRAM	module/Makefile	/^LTINSTALL_PROGRAM = $(LIBTOOL) --mode=install $(INSTALL_PROGRAM)$/;"	m
LTINSTALL_PROGRAM	output/Makefile	/^LTINSTALL_PROGRAM = $(LIBTOOL) --mode=install $(INSTALL_PROGRAM)$/;"	m
LTINSTALL_PROGRAM	templates/Makefile	/^LTINSTALL_PROGRAM = $(LIBTOOL) --mode=install $(INSTALL_PROGRAM)$/;"	m
LTINSTALL_PROGRAM	tools/Makefile	/^LTINSTALL_PROGRAM = $(LIBTOOL) --mode=install $(INSTALL_PROGRAM)$/;"	m
LTINSTALL_PROGRAM	treeedit/Makefile	/^LTINSTALL_PROGRAM = $(LIBTOOL) --mode=install $(INSTALL_PROGRAM)$/;"	m
LTINSTALL_PROGRAM	unicode/Makefile	/^LTINSTALL_PROGRAM = $(LIBTOOL) --mode=install $(INSTALL_PROGRAM)$/;"	m
LTINSTALL_PROGRAM	util/Makefile	/^LTINSTALL_PROGRAM = $(LIBTOOL) --mode=install $(INSTALL_PROGRAM)$/;"	m
LTINSTALL_PROGRAM	windows/Makefile	/^LTINSTALL_PROGRAM = $(LIBTOOL) --mode=install $(INSTALL_PROGRAM)$/;"	m
LTMISCOBJECTS	documents/Makefile	/^LTMISCOBJECTS = $(SOURCEMISC:.c=.lo) $(SOURCEXXMISC:.cc=.lo)$/;"	m
LTMISCOBJECTS	include/Makefile	/^LTMISCOBJECTS = $(SOURCEMISC:.c=.lo) $(SOURCEXXMISC:.cc=.lo)$/;"	m
LTMISCOBJECTS	keyboard/Makefile	/^LTMISCOBJECTS = $(SOURCEMISC:.c=.lo) $(SOURCEXXMISC:.cc=.lo)$/;"	m
LTMISCOBJECTS	language/Makefile	/^LTMISCOBJECTS = $(SOURCEMISC:.c=.lo) $(SOURCEXXMISC:.cc=.lo)$/;"	m
LTMISCOBJECTS	markup/Makefile	/^LTMISCOBJECTS = $(SOURCEMISC:.c=.lo) $(SOURCEXXMISC:.cc=.lo)$/;"	m
LTMISCOBJECTS	module/Makefile	/^LTMISCOBJECTS = $(SOURCEMISC:.c=.lo) $(SOURCEXXMISC:.cc=.lo)$/;"	m
LTMISCOBJECTS	output/Makefile	/^LTMISCOBJECTS = $(SOURCEMISC:.c=.lo) $(SOURCEXXMISC:.cc=.lo)$/;"	m
LTMISCOBJECTS	templates/Makefile	/^LTMISCOBJECTS = $(SOURCEMISC:.c=.lo) $(SOURCEXXMISC:.cc=.lo)$/;"	m
LTMISCOBJECTS	tools/Makefile	/^LTMISCOBJECTS = $(SOURCEMISC:.c=.lo) $(SOURCEXXMISC:.cc=.lo)$/;"	m
LTMISCOBJECTS	treeedit/Makefile	/^LTMISCOBJECTS = $(SOURCEMISC:.c=.lo) $(SOURCEXXMISC:.cc=.lo)$/;"	m
LTMISCOBJECTS	unicode/Makefile	/^LTMISCOBJECTS = $(SOURCEMISC:.c=.lo) $(SOURCEXXMISC:.cc=.lo)$/;"	m
LTMISCOBJECTS	util/Makefile	/^LTMISCOBJECTS = $(SOURCEMISC:.c=.lo) $(SOURCEXXMISC:.cc=.lo)$/;"	m
LTMISCOBJECTS	windows/Makefile	/^LTMISCOBJECTS = $(SOURCEMISC:.c=.lo) $(SOURCEXXMISC:.cc=.lo)$/;"	m
LTOBJECTS	documents/Makefile	/^LTOBJECTS = $(SOURCE:.c=.lo) $(SOURCEXX:.cc=.lo)$/;"	m
LTOBJECTS	include/Makefile	/^LTOBJECTS = $(SOURCE:.c=.lo) $(SOURCEXX:.cc=.lo)$/;"	m
LTOBJECTS	keyboard/Makefile	/^LTOBJECTS = $(SOURCE:.c=.lo) $(SOURCEXX:.cc=.lo)$/;"	m
LTOBJECTS	language/Makefile	/^LTOBJECTS = $(SOURCE:.c=.lo) $(SOURCEXX:.cc=.lo)$/;"	m
LTOBJECTS	markup/Makefile	/^LTOBJECTS = $(SOURCE:.c=.lo) $(SOURCEXX:.cc=.lo)$/;"	m
LTOBJECTS	module/Makefile	/^LTOBJECTS = $(SOURCE:.c=.lo) $(SOURCEXX:.cc=.lo)$/;"	m
LTOBJECTS	output/Makefile	/^LTOBJECTS = $(SOURCE:.c=.lo) $(SOURCEXX:.cc=.lo)$/;"	m
LTOBJECTS	templates/Makefile	/^LTOBJECTS = $(SOURCE:.c=.lo) $(SOURCEXX:.cc=.lo)$/;"	m
LTOBJECTS	tools/Makefile	/^LTOBJECTS = $(SOURCE:.c=.lo) $(SOURCEXX:.cc=.lo)$/;"	m
LTOBJECTS	treeedit/Makefile	/^LTOBJECTS = $(SOURCE:.c=.lo) $(SOURCEXX:.cc=.lo)$/;"	m
LTOBJECTS	unicode/Makefile	/^LTOBJECTS = $(SOURCE:.c=.lo) $(SOURCEXX:.cc=.lo)$/;"	m
LTOBJECTS	util/Makefile	/^LTOBJECTS = $(SOURCE:.c=.lo) $(SOURCEXX:.cc=.lo)$/;"	m
LTOBJECTS	windows/Makefile	/^LTOBJECTS = $(SOURCE:.c=.lo) $(SOURCEXX:.cc=.lo)$/;"	m
LTPROGOBJECTS	documents/Makefile	/^LTPROGOBJECTS = $(SOURCEPROG:.c=.lo) $(SOURCEXXPROG:.cc=.lo)$/;"	m
LTPROGOBJECTS	include/Makefile	/^LTPROGOBJECTS = $(SOURCEPROG:.c=.lo) $(SOURCEXXPROG:.cc=.lo)$/;"	m
LTPROGOBJECTS	keyboard/Makefile	/^LTPROGOBJECTS = $(SOURCEPROG:.c=.lo) $(SOURCEXXPROG:.cc=.lo)$/;"	m
LTPROGOBJECTS	language/Makefile	/^LTPROGOBJECTS = $(SOURCEPROG:.c=.lo) $(SOURCEXXPROG:.cc=.lo)$/;"	m
LTPROGOBJECTS	markup/Makefile	/^LTPROGOBJECTS = $(SOURCEPROG:.c=.lo) $(SOURCEXXPROG:.cc=.lo)$/;"	m
LTPROGOBJECTS	module/Makefile	/^LTPROGOBJECTS = $(SOURCEPROG:.c=.lo) $(SOURCEXXPROG:.cc=.lo)$/;"	m
LTPROGOBJECTS	output/Makefile	/^LTPROGOBJECTS = $(SOURCEPROG:.c=.lo) $(SOURCEXXPROG:.cc=.lo)$/;"	m
LTPROGOBJECTS	templates/Makefile	/^LTPROGOBJECTS = $(SOURCEPROG:.c=.lo) $(SOURCEXXPROG:.cc=.lo)$/;"	m
LTPROGOBJECTS	tools/Makefile	/^LTPROGOBJECTS = $(SOURCEPROG:.c=.lo) $(SOURCEXXPROG:.cc=.lo)$/;"	m
LTPROGOBJECTS	treeedit/Makefile	/^LTPROGOBJECTS = $(SOURCEPROG:.c=.lo) $(SOURCEXXPROG:.cc=.lo)$/;"	m
LTPROGOBJECTS	unicode/Makefile	/^LTPROGOBJECTS = $(SOURCEPROG:.c=.lo) $(SOURCEXXPROG:.cc=.lo)$/;"	m
LTPROGOBJECTS	util/Makefile	/^LTPROGOBJECTS = $(SOURCEPROG:.c=.lo) $(SOURCEXXPROG:.cc=.lo)$/;"	m
LTPROGOBJECTS	windows/Makefile	/^LTPROGOBJECTS = $(SOURCEPROG:.c=.lo) $(SOURCEXXPROG:.cc=.lo)$/;"	m
LT_add_leaftree	language/leaftree.c	/^void LT_add_leaftree(LeafTree *lt, LeafTree *ltadd)$/;"	f
LT_add_leaftree	util/leaftree.c	/^void LT_add_leaftree(LeafTree *lt, LeafTree *ltadd)$/;"	f
LT_delete	language/leaftree.c	/^void LT_delete(LeafTree *lt, void *val)$/;"	f
LT_delete	util/leaftree.c	/^void LT_delete(LeafTree *lt, void *val)$/;"	f
LT_found_leaf	language/leaftree.c	/^void* LT_found_leaf(void)$/;"	f
LT_found_leaf	util/leaftree.c	/^void* LT_found_leaf(void)$/;"	f
LT_free	language/leaftree.c	/^void LT_free(LeafTree *lt)$/;"	f
LT_free	util/leaftree.c	/^void LT_free(LeafTree *lt)$/;"	f
LT_insert	language/leaftree.c	/^void LT_insert(LeafTree *lt, void *val)$/;"	f
LT_insert	util/leaftree.c	/^void LT_insert(LeafTree *lt, void *val)$/;"	f
LT_member	language/leaftree.c	/^void *LT_member(LeafTree *lt, void *val)$/;"	f
LT_member	util/leaftree.c	/^void *LT_member(LeafTree *lt, void *val)$/;"	f
LVStack	language/variable.c	/^struct LVStack {$/;"	s	file:
LVStack	language/variable.c	/^typedef struct LVStack LVStack;$/;"	t	typeref:struct:LVStack	file:
LVal	language/leaftree.c	47;"	d	file:
LVal	util/leaftree.c	47;"	d	file:
LangAttrib	include/markup.h	/^    LangAttrib,  \/* xxxxxxxxxx: index in a language table.$/;"	e	enum:__anon52
LastOpCode	include/mathpad.h	92;"	d
LazyEvalType	include/types.h	10;"	d
LazyExpression	include/expression.h	/^} LazyExpression;$/;"	t	typeref:struct:__anon51
LazyType	language/expression.c	28;"	d	file:
Leaf	language/leaftree.c	42;"	d	file:
Leaf	templates/match.c	/^} Leaf;$/;"	t	typeref:struct:__anon37	file:
Leaf	util/debug.c	95;"	d	file:
Leaf	util/leaftree.c	42;"	d	file:
Leaf	util/memman.c	74;"	d	file:
LeafNode	include/leaftree.h	/^} LeafNode;$/;"	t	typeref:struct:lnode
LeafTree	include/leaftree.h	/^} LeafTree;$/;"	t	typeref:struct:ltree
Left	treeedit/marker.hh	/^enum Kind { View, Left, LeftLine, Right, Line, Tree };$/;"	e	enum:Kind
LeftBinding	include/mathpad.h	/^                      Infix, LeftBinding, RightBinding$/;"	e	enum:Opkind
LeftBinding	module/pvsparse.c	/^                      Infix, LeftBinding, RightBinding$/;"	e	enum:Opkind	file:
LeftLine	treeedit/marker.hh	/^enum Kind { View, Left, LeftLine, Right, Line, Tree };$/;"	e	enum:Kind
LfNode	util/debug.c	/^} LfNode;$/;"	t	typeref:struct:ltnode	file:
LfNode	util/memman.c	/^} LfNode;$/;"	t	typeref:struct:ltnode	file:
Library	language/loadlib.c	/^struct Library {$/;"	s	file:
Library	language/loadlib.c	/^typedef struct Library Library;$/;"	t	typeref:struct:Library	file:
Line	treeedit/marker.hh	/^enum Kind { View, Left, LeftLine, Right, Line, Tree };$/;"	e	enum:Kind
LineBox	windows/output.c	213;"	d	file:
LocaleAttrib	include/markup.h	/^    LocaleAttrib,\/* date, value, currency, time (might depend on language) *\/$/;"	e	enum:__anon52
LocaletoUstr	unicode/unistring.c	/^Uchar *LocaletoUstr(const unsigned char *s)$/;"	f
Ltab	include/mathpad.h	31;"	d
MACROFILE	include/fileread.h	23;"	d
MACROTYPE	include/fileread.h	44;"	d
MAG_parse	module/MAG.c	/^int MAG_parse(unsigned char *buffer, unsigned int *len)$/;"	f
MAG_start	module/MAG.c	/^void MAG_start(Char *title)$/;"	f
MAINBUFFERWINDOW	include/sources.h	/^    MAINEDITWINDOW, EDITWINDOW, MAINBUFFERWINDOW, BUFFERWINDOW,$/;"	e	enum:__anon40
MAINEDITWINDOW	include/sources.h	/^    MAINEDITWINDOW, EDITWINDOW, MAINBUFFERWINDOW, BUFFERWINDOW,$/;"	e	enum:__anon40
MAINNOTATIONWINDOW	include/sources.h	/^    MAINNOTATIONWINDOW, NOTATIONWINDOW, NOTATIONDEFWINDOW,$/;"	e	enum:__anon40
MAKEDEP	documents/Makefile	/^MAKEDEP   = makedepend$/;"	m
MAKEDEP	include/Makefile	/^MAKEDEP   = makedepend$/;"	m
MAKEDEP	keyboard/Makefile	/^MAKEDEP   = makedepend$/;"	m
MAKEDEP	language/Makefile	/^MAKEDEP   = makedepend$/;"	m
MAKEDEP	markup/Makefile	/^MAKEDEP   = makedepend$/;"	m
MAKEDEP	module/Makefile	/^MAKEDEP   = makedepend$/;"	m
MAKEDEP	output/Makefile	/^MAKEDEP   = makedepend$/;"	m
MAKEDEP	templates/Makefile	/^MAKEDEP   = makedepend$/;"	m
MAKEDEP	tools/Makefile	/^MAKEDEP   = makedepend$/;"	m
MAKEDEP	treeedit/Makefile	/^MAKEDEP   = makedepend$/;"	m
MAKEDEP	unicode/Makefile	/^MAKEDEP   = makedepend$/;"	m
MAKEDEP	util/Makefile	/^MAKEDEP   = makedepend$/;"	m
MAKEDEP	windows/Makefile	/^MAKEDEP   = makedepend$/;"	m
MARGIN	windows/remark.c	55;"	d	file:
MARK	include/output.h	23;"	d
MARKER_HH	treeedit/marker.hh	37;"	d
MARKHOLLOW	include/output.h	25;"	d
MARK_HH	treeedit/mark.hh	37;"	d
MATHPADFONTPATH	include/mpconfig.h	2;"	d
MATHPADHOME	include/mpconfig.h	1;"	d
MATHPADKEYS	include/mpconfig.h	3;"	d
MATHPAD_HH	treeedit/mathpad.hh	37;"	d
MAXACCENT	unicode/drawstring.c	29;"	d	file:
MAXATTRIB	include/virtread.h	3;"	d
MAXATTRIB	unicode/unifont.c	42;"	d	file:
MAXATTRIB	unicode/virtread.c	29;"	d	file:
MAXFILE	include/fileread.h	29;"	d
MAXFONTS	include/system.h	17;"	d
MAXFORMAT	include/notatype.h	22;"	d
MAXFREELIST	util/memman.c	458;"	d	file:
MAXGCS	windows/sources.c	384;"	d	file:
MAXHELPNAME	include/helpfile.h	107;"	d
MAXIDENTIFIER	language/parse.c	1831;"	d	file:
MAXIDLEN	templates/match.c	394;"	d	file:
MAXISOLANG	markup/lang_markup.c	33;"	d	file:
MAXLEN	windows/menu.c	669;"	d	file:
MAXLINES	windows/menu.c	71;"	d	file:
MAXOFFSET	unicode/drawstring.c	34;"	d	file:
MAXPKCHAR	tools/pktobdf.c	16;"	d	file:
MAXSIZE	windows/output.c	51;"	d	file:
MAXTAB	windows/output.c	1850;"	d	file:
MAXTREES	include/match.h	27;"	d
MAXUNOFLANG	markup/lang_markup.c	34;"	d	file:
MAXVISUAL	windows/sources.c	1451;"	d	file:
MAXWINDOWS	include/system.h	16;"	d
MAXWINDOWTYPE	include/sources.h	/^    POPUPWINDOW, CHECKBOXWINDOW, MAXWINDOWTYPE$/;"	e	enum:__anon40
MAX_BUTTON	windows/remark.c	54;"	d	file:
MAX_BYTES	unicode/unistring.c	72;"	d	file:
MAX_CELLS	windows/sources.c	275;"	d	file:
MAX_COMMENT	tools/pktobdf.c	17;"	d	file:
MAX_CYCLE	util/translate.c	30;"	d	file:
MAX_EESTACK	language/expression.c	312;"	d	file:
MAX_GETSTRING	include/system.h	24;"	d
MAX_ITEMLIST	windows/notadef.c	95;"	d	file:
MAX_KIND	include/notatype.h	26;"	d
MAX_PRECEDENCE	include/system.h	23;"	d
MAX_PROTOTYPE	include/prototype.h	22;"	d
MAX_SIGN_SIZE	windows/output.c	56;"	d	file:
MAX_SPACING	windows/notadef.c	96;"	d	file:
MAX_UNI_SIG	unicode/unistring.c	380;"	d	file:
MAX_VERSION	windows/notadef.c	65;"	d	file:
MAX_WIN_DEPTH	windows/sources.c	620;"	d	file:
MEMMAN_H_INSIDE_MEMMAN_C	util/memman.c	5;"	d	file:
MEM_CHECK	util/memman.c	347;"	d	file:
MEM_CHECK	util/memman.c	356;"	d	file:
MENU	include/popup.h	/^struct MENU {$/;"	s
MENU	include/popup.h	/^typedef struct MENU MENU;$/;"	t	typeref:struct:MENU
MENU	language/parse.c	37;"	d	file:
MENUNAME	windows/menu.c	68;"	d	file:
MENUWINDOW	include/sources.h	/^    NOWINDOW, BUTTONWINDOW, SCROLLBARWINDOW, STRINGWINDOW, MENUWINDOW,$/;"	e	enum:__anon40
MIDDLE_LINE	windows/default.c	61;"	d	file:
MINSIZE	language/leaftree.c	46;"	d	file:
MINSIZE	util/leaftree.c	46;"	d	file:
MINT	language/powfix.c	/^typedef struct mint MINT;$/;"	t	typeref:struct:mint	file:
MINUS	language/parse.c	22;"	d	file:
MIRRORED	unicode/datatotable.c	18;"	d	file:
MISCBUTTON	windows/menu.c	/^              MISCBUTTON, VERSIONBUTTON, QUITBUTTON, NR_BUTTON };$/;"	e	enum:button	file:
MISCOBJECTS	documents/Makefile	/^MISCOBJECTS = $(SOURCEMISC:.c=.o) $(SOURCEXXMISC:.cc=.o)$/;"	m
MISCOBJECTS	include/Makefile	/^MISCOBJECTS = $(SOURCEMISC:.c=.o) $(SOURCEXXMISC:.cc=.o)$/;"	m
MISCOBJECTS	keyboard/Makefile	/^MISCOBJECTS = $(SOURCEMISC:.c=.o) $(SOURCEXXMISC:.cc=.o)$/;"	m
MISCOBJECTS	language/Makefile	/^MISCOBJECTS = $(SOURCEMISC:.c=.o) $(SOURCEXXMISC:.cc=.o)$/;"	m
MISCOBJECTS	markup/Makefile	/^MISCOBJECTS = $(SOURCEMISC:.c=.o) $(SOURCEXXMISC:.cc=.o)$/;"	m
MISCOBJECTS	module/Makefile	/^MISCOBJECTS = $(SOURCEMISC:.c=.o) $(SOURCEXXMISC:.cc=.o)$/;"	m
MISCOBJECTS	output/Makefile	/^MISCOBJECTS = $(SOURCEMISC:.c=.o) $(SOURCEXXMISC:.cc=.o)$/;"	m
MISCOBJECTS	templates/Makefile	/^MISCOBJECTS = $(SOURCEMISC:.c=.o) $(SOURCEXXMISC:.cc=.o)$/;"	m
MISCOBJECTS	tools/Makefile	/^MISCOBJECTS = $(SOURCEMISC:.c=.o) $(SOURCEXXMISC:.cc=.o)$/;"	m
MISCOBJECTS	treeedit/Makefile	/^MISCOBJECTS = $(SOURCEMISC:.c=.o) $(SOURCEXXMISC:.cc=.o)$/;"	m
MISCOBJECTS	unicode/Makefile	/^MISCOBJECTS = $(SOURCEMISC:.c=.o) $(SOURCEXXMISC:.cc=.o)$/;"	m
MISCOBJECTS	util/Makefile	/^MISCOBJECTS = $(SOURCEMISC:.c=.o) $(SOURCEXXMISC:.cc=.o)$/;"	m
MISCOBJECTS	windows/Makefile	/^MISCOBJECTS = $(SOURCEMISC:.c=.o) $(SOURCEXXMISC:.cc=.o)$/;"	m
MISCPOS	windows/notadef.c	94;"	d	file:
MODIFIEDSTRING	windows/notation.c	64;"	d	file:
MODIFIERSEP	keyboard/keys.c	41;"	d	file:
MODIFYBUTTON	windows/notadef.c	/^enum button { INSTALLBUTTON, MODIFYBUTTON, DELETEBUTTON,$/;"	e	enum:button	file:
MPTEX	include/sources.h	34;"	d
MP_BOX_MARKUP_H	include/box_markup.h	2;"	d
MP_BUFFER_H	include/buffer.h	2;"	d
MP_BUTTON_H	include/button.h	2;"	d
MP_CHECKBOX_H	include/checkbox.h	2;"	d
MP_CLICKREMARK	include/message.h	16;"	d
MP_COLOR_MARKUP_H	include/color_markup.h	2;"	d
MP_CONSTANT_H	include/constant.h	2;"	d
MP_DEFAULT_H	include/default.h	2;"	d
MP_Disp	include/mathpad.h	79;"	d
MP_EDITOR_H	include/editor.h	2;"	d
MP_EDIT_H	include/edit.h	2;"	d
MP_ERROR	include/message.h	15;"	d
MP_EVENTS_H	include/events.h	2;"	d
MP_EXIT	include/message.h	19;"	d
MP_EXPRESSION	include/expression.h	2;"	d
MP_Expr	include/mathpad.h	73;"	d
MP_FIFOLIST_H	include/fifolist.h	2;"	d
MP_FILEREAD_H	include/fileread.h	2;"	d
MP_FILESELC_H	include/fileselc.h	2;"	d
MP_FIND_H	include/find.h	2;"	d
MP_FLEX_H	include/flexarray.h	2;"	d
MP_FONTS_H	include/fonts.h	2;"	d
MP_FONT_MARKUP_H	include/font_markup.h	2;"	d
MP_FSTATE_H	include/fstate.h	2;"	d
MP_FUNCS_H	include/funcs.h	2;"	d
MP_FUNCTION_H	include/function.h	2;"	d
MP_False	include/mathpad.h	135;"	d
MP_GETSTRING_H	include/getstring.h	2;"	d
MP_HELPFILE_H	include/helpfile.h	2;"	d
MP_INTSTACK_H	include/intstack.h	2;"	d
MP_Id	include/mathpad.h	75;"	d
MP_KEYBOARD_H	include/keyboard.h	7;"	d
MP_KEYREMARK	include/message.h	17;"	d
MP_LANG_MARKUP_H	include/lang_markup.h	2;"	d
MP_LATEXOUT_H	include/latexout.h	2;"	d
MP_LEAFTREE_H	include/leaftree.h	2;"	d
MP_LOADLIB_H	include/loadlib.h	2;"	d
MP_List	include/mathpad.h	78;"	d
MP_MARKUP_H	include/markup.h	2;"	d
MP_MATCH_H	include/match.h	2;"	d
MP_MATHPAD_H	include/mathpad.h	2;"	d
MP_MEMMAN_H	include/memman.h	2;"	d
MP_MENU_H	include/menu.h	2;"	d
MP_MESSAGE	include/message.h	14;"	d
MP_MESSAGECURS	include/message.h	18;"	d
MP_MESSAGE_H	include/message.h	2;"	d
MP_MODULE_PVS_H	include/pvs.h	2;"	d
MP_NOTADEF_H	include/notadef.h	2;"	d
MP_NOTATION_H	include/notation.h	2;"	d
MP_NOTATYPE_H	include/notatype.h	2;"	d
MP_OUTPUT_H	include/output.h	2;"	d
MP_Op	include/mathpad.h	74;"	d
MP_POPUPMENU_H	include/popupmenu.h	2;"	d
MP_POPUP_H	include/popup.h	2;"	d
MP_POWFIX_H	language/powfix.h	2;"	d
MP_PROTOTYPE_H	include/prototype.h	2;"	d
MP_REFCOUNTING_H	include/refcounting.h	3;"	d
MP_REMARK_H	include/remark.h	2;"	d
MP_RESHUFFLE_H	include/reshuffle.h	2;"	d
MP_SCROLLBAR_H	include/scrollbar.h	2;"	d
MP_SEQUENCE_H	include/sequence.h	2;"	d
MP_SOURCES_H	include/sources.h	2;"	d
MP_SURROFILT_H	util/surrofilt.c	2;"	d	file:
MP_SYMBOL_H	include/symbol.h	2;"	d
MP_SYSTEM_H	include/system.h	2;"	d
MP_TRANSLATE_H	include/translate.h	2;"	d
MP_TYPES_H	include/types.h	2;"	d
MP_Text	include/mathpad.h	77;"	d
MP_True	include/mathpad.h	134;"	d
MP_UNIFONTX11_H	include/unifontX11.h	2;"	d
MP_UNIFONTX11_H	include/unifontsys.h	2;"	d
MP_USERDEF_H	include/userdef.h	2;"	d
MP_VARIABLE_H	include/variable.h	2;"	d
MP_Var	include/mathpad.h	76;"	d
MT	templates/match.c	105;"	d	file:
MULTIPLY	language/parse.c	23;"	d	file:
MakeBinOpNode	module/pvsparse.c	/^void MakeBinOpNode(void)$/;"	f
MakeSubscriptNode	module/pvsparse.c	/^void MakeSubscriptNode(void)$/;"	f
MapBool	include/unicode.h	/^typedef char **MapBool;$/;"	t
MapBool	module/pvsparse.c	/^typedef char **MapBool;$/;"	t	file:
MapBoolCopy	include/unimap.h	82;"	d
MapBoolCreate	include/unimap.h	79;"	d
MapBoolDefine	include/unimap.h	80;"	d
MapBoolDestroy	include/unimap.h	81;"	d
MapBoolLoad	include/unimap.h	83;"	d
MapBoolLoadFile	include/unimap.h	84;"	d
MapBoolSave	include/unimap.h	85;"	d
MapChar	include/unicode.h	/^typedef char **MapChar;$/;"	t
MapChar	module/pvsparse.c	/^typedef char **MapChar;$/;"	t	file:
MapCharCopy	include/unimap.h	98;"	d
MapCharCreate	include/unimap.h	95;"	d
MapCharDefine	include/unimap.h	96;"	d
MapCharDestroy	include/unimap.h	97;"	d
MapCharLoad	include/unimap.h	99;"	d
MapCharLoadFile	include/unimap.h	100;"	d
MapCharSave	include/unimap.h	101;"	d
MapInt	include/unicode.h	/^typedef int **MapInt;$/;"	t
MapInt	module/pvsparse.c	/^typedef int **MapInt;$/;"	t	file:
MapIntCopy	include/unimap.h	90;"	d
MapIntCreate	include/unimap.h	87;"	d
MapIntDefine	include/unimap.h	88;"	d
MapIntDestroy	include/unimap.h	89;"	d
MapIntLoad	include/unimap.h	91;"	d
MapIntLoadFile	include/unimap.h	92;"	d
MapIntSave	include/unimap.h	93;"	d
MapStr	include/unicode.h	/^typedef char ***MapStr;$/;"	t
MapStr	module/pvsparse.c	/^typedef char ***MapStr;$/;"	t	file:
MapStrCopy	include/unimap.h	123;"	d
MapStrCopyInt	unicode/unimap.c	/^void *MapStrCopyInt(void *value)$/;"	f
MapStrCreate	include/unimap.h	120;"	d
MapStrDefine	include/unimap.h	121;"	d
MapStrDestroy	include/unimap.h	122;"	d
MapStrDestroyInt	unicode/unimap.c	/^int MapStrDestroyInt(void *value)$/;"	f
MapStrLoad	include/unimap.h	124;"	d
MapStrLoadFile	include/unimap.h	125;"	d
MapStrLoadInt	unicode/unimap.c	/^void *MapStrLoadInt(void **data,int bswap)$/;"	f
MapStrSave	include/unimap.h	126;"	d
MapStrSaveInt	unicode/unimap.c	/^int MapStrSaveInt(void *value, FILE *f)$/;"	f
MapUchar	include/unicode.h	/^typedef Uchar **MapUchar;$/;"	t
MapUchar	module/pvsparse.c	/^typedef Uchar **MapUchar;$/;"	t	file:
MapUcharCopy	include/unimap.h	106;"	d
MapUcharCreate	include/unimap.h	103;"	d
MapUcharDefine	include/unimap.h	104;"	d
MapUcharDestroy	include/unimap.h	105;"	d
MapUcharInverse	include/unimap.h	113;"	d
MapUcharLoad	include/unimap.h	107;"	d
MapUcharLoadFile	include/unimap.h	108;"	d
MapUcharSave	include/unimap.h	109;"	d
MapUstr	include/unicode.h	/^typedef Uchar ***MapUstr;$/;"	t
MapUstr	module/pvsparse.c	/^typedef Uchar ***MapUstr;$/;"	t	file:
MapUstrCopy	include/unimap.h	136;"	d
MapUstrCopyInt	unicode/unimap.c	/^void *MapUstrCopyInt(void *value)$/;"	f
MapUstrCreate	include/unimap.h	133;"	d
MapUstrDefine	include/unimap.h	134;"	d
MapUstrDestroy	include/unimap.h	135;"	d
MapUstrDestroyInt	unicode/unimap.c	/^int MapUstrDestroyInt(void *value)$/;"	f
MapUstrLoad	include/unimap.h	137;"	d
MapUstrLoadFile	include/unimap.h	138;"	d
MapUstrLoadInt	unicode/unimap.c	/^void *MapUstrLoadInt(void **data,int bswap)$/;"	f
MapUstrSave	include/unimap.h	139;"	d
MapUstrSaveInt	unicode/unimap.c	/^int MapUstrSaveInt(void *value, FILE *f)$/;"	f
MapValue	include/unicode.h	51;"	d
Mark	treeedit/mark.cc	/^Mark::Mark()$/;"	f	class:Mark
Mark	treeedit/mark.cc	/^Mark::Mark(Node* pn, Index i)$/;"	f	class:Mark
Mark	treeedit/mark.cc	/^Mark::Mark(const Mark& m)$/;"	f	class:Mark
Mark	treeedit/mark.hh	/^class Mark {$/;"	c
Marker	treeedit/marker.cc	/^Marker::Marker(Kind k)$/;"	f	class:Marker
Marker	treeedit/marker.hh	/^class Marker : public Mark {$/;"	c
MarkupGroup	include/markup.h	/^} MarkupGroup;$/;"	t	typeref:enum:__anon52
MaxPrecedence	include/mathpad.h	108;"	d
ModAlt	include/keys.h	10;"	d
ModCtrl	include/keys.h	8;"	d
ModHyper	include/keys.h	12;"	d
ModMeta	include/keys.h	9;"	d
ModShift	include/keys.h	7;"	d
ModSuper	include/keys.h	11;"	d
ModeAdd	include/keys.h	16;"	d
ModeAddIgnore	include/keys.h	15;"	d
ModeAddNeed	include/keys.h	14;"	d
MouseNum	keyboard/X11syskeys.c	40;"	d	file:
NAME	unicode/datatotable.c	10;"	d	file:
NAMEDESC	windows/notadef.c	80;"	d	file:
NAMEDHEAD	output/latexout.c	65;"	d	file:
NAMEDTAIL	output/latexout.c	66;"	d	file:
NAMEFORMAT	include/notatype.h	21;"	d
NAME_LENGTH	windows/notation.c	66;"	d	file:
NAME_SIZE	windows/notadef.c	66;"	d	file:
NAT	module/hugsparse.c	/^typedef void *NAT;     \/* identifier *\/$/;"	t	file:
NEWDOC	windows/edit.c	316;"	d	file:
NEWL	windows/notadef.c	1431;"	d	file:
NEWSCOD	windows/find.c	/^	      SAVECOD, PREVCOD, NEXTCOD, NEWSCOD, CLEACOD };$/;"	e	enum:button	file:
NEWSIZE	templates/notatype.c	703;"	d	file:
NEWSIZE	util/flexarray.c	40;"	d	file:
NEXTCOD	windows/find.c	/^	      SAVECOD, PREVCOD, NEXTCOD, NEWSCOD, CLEACOD };$/;"	e	enum:button	file:
NILstr	module/pvs.c	/^static char *NILstr="NIL";$/;"	v	file:
NLSTATE	language/parselex.c	2069;"	d	file:
NLSTATE	language/parselex.c	3;"	d	file:
NLSTATE	module/pvsparselex.c	446;"	d	file:
NLSTATE	module/pvsparselex.c	4;"	d	file:
NODETYPE	include/fileread.h	38;"	d
NODE_HH	treeedit/node.hh	37;"	d
NOINPUTTIME	tools/xpipein.c	69;"	d	file:
NONBLOCKFLAGS	tools/xpipein.c	172;"	d	file:
NONBLOCKFLAGS	tools/xpipeout.c	51;"	d	file:
NOOUTPUTTIME	tools/xpipeout.c	64;"	d	file:
NOTADEFNAME	windows/notadef.c	63;"	d	file:
NOTATION	include/notatype.h	/^        } NOTATION;$/;"	t	typeref:struct:__anon47
NOTATIONDEFWINDOW	include/sources.h	/^    MAINNOTATIONWINDOW, NOTATIONWINDOW, NOTATIONDEFWINDOW,$/;"	e	enum:__anon40
NOTATIONDIR	documents/system.c	49;"	d	file:
NOTATIONFILE	include/notatype.h	/^        } NOTATIONFILE;$/;"	t	typeref:struct:__anon48
NOTATIONFONT	include/system.h	29;"	d
NOTATIONINFO	windows/notation.c	/^} NOTATIONINFO;$/;"	t	typeref:struct:__anon74	file:
NOTATIONLIST	include/notatype.h	/^typedef NOTATION *NOTATIONLIST;$/;"	t
NOTATIONNAME	windows/notation.c	62;"	d	file:
NOTATIONWINDOW	include/sources.h	/^    MAINNOTATIONWINDOW, NOTATIONWINDOW, NOTATIONDEFWINDOW,$/;"	e	enum:__anon40
NOTEQUAL	language/parse.c	18;"	d	file:
NOT_FOUND	windows/menu.c	665;"	d	file:
NOWINDOW	include/sources.h	/^    NOWINDOW, BUTTONWINDOW, SCROLLBARWINDOW, STRINGWINDOW, MENUWINDOW,$/;"	e	enum:__anon40
NO_REMARK	include/remark.h	18;"	d
NR_BUTTON	windows/buffer.c	/^enum button { KILLBUTTON, DONEBUTTON, NR_BUTTON };$/;"	e	enum:button	file:
NR_BUTTON	windows/default.c	/^enum button {SETBUTTON, SAVEBUTTON, DONEBUTTON, NR_BUTTON };$/;"	e	enum:button	file:
NR_BUTTON	windows/edit.c	/^	      OUTPUTBUTTON, INCLUDEBUTTON, DONEBUTTON, NR_BUTTON  };$/;"	e	enum:button	file:
NR_BUTTON	windows/fileselc.c	/^enum button { OKBUTTON, RESCANBUTTON, CANCELBUTTON, NR_BUTTON };$/;"	e	enum:button	file:
NR_BUTTON	windows/find.c	/^enum button { FINDBUTTON, STACKBUTTON, DONEBUTTON, NR_BUTTON,$/;"	e	enum:button	file:
NR_BUTTON	windows/menu.c	/^              MISCBUTTON, VERSIONBUTTON, QUITBUTTON, NR_BUTTON };$/;"	e	enum:button	file:
NR_BUTTON	windows/notadef.c	/^              DOUBLEBUTTON, DONEBUTTON, NR_BUTTON };$/;"	e	enum:button	file:
NR_BUTTON	windows/notation.c	/^    DONEBUTTON, NR_BUTTON };$/;"	e	enum:button	file:
NR_BUTTON	windows/symbol.c	/^enum button { PAGEBUTTON, DONEBUTTON, NR_BUTTON };$/;"	e	enum:button	file:
NR_CURBAR	windows/output.c	55;"	d	file:
NR_CURSOR	windows/output.c	53;"	d	file:
NR_FIELD	windows/default.c	73;"	d	file:
NR_FILEDESC	windows/sources.c	1304;"	d	file:
NR_FILEDESC_OLD	windows/sources.c	1305;"	d	file:
NR_MARK	windows/output.c	54;"	d	file:
NR_ROWS	windows/menu.c	76;"	d	file:
NR_SIZE	include/system.h	32;"	d
NULL	documents/helpfile.c	34;"	d	file:
NULL	include/funcs.h	18;"	d
NULL	language/expression.c	11;"	d	file:
New	templates/match.c	424;"	d	file:
NewArray	templates/match.c	425;"	d	file:
NewLeaf	language/leaftree.c	97;"	d	file:
NewLeaf	util/leaftree.c	97;"	d	file:
NewNode	language/leaftree.c	96;"	d	file:
NewNode	util/debug.c	172;"	d	file:
NewNode	util/leaftree.c	96;"	d	file:
NewNode	util/memman.c	151;"	d	file:
NewNodes	treeedit/node.hh	249;"	d
NewObjectList	util/fifolist.c	16;"	d	file:
Newline	include/mathpad.h	28;"	d
NewlineBox	windows/output.c	199;"	d	file:
Nmax	treeedit/node.hh	247;"	d
Nmin	treeedit/node.hh	245;"	d
Nmod	treeedit/node.hh	246;"	d
NoCaller	language/prototype.c	12;"	d	file:
NoProtoCaller	language/function.c	80;"	d	file:
NoRefType	include/types.h	14;"	d
Node	treeedit/node.cc	/^Node::Node(Char nk) : father(Tree)$/;"	f	class:Node
Node	treeedit/node.cc	/^Node::Node(const Node* pn) : father(Tree)$/;"	f	class:Node
Node	treeedit/node.hh	/^class Node {$/;"	c
NodeBox	windows/output.c	198;"	d	file:
NodeCode	include/mathpad.h	80;"	d
None	include/mathpad.h	/^typedef enum Opkind { None, Prefix, Postfix,$/;"	e	enum:Opkind
None	module/pvsparse.c	/^typedef enum Opkind { None, Prefix, Postfix,$/;"	e	enum:Opkind	file:
Normal	include/mathpad.h	/^typedef enum { Normal, Reverse, Xor } TextMode;$/;"	e	enum:__anon54
Normal	module/pvsparse.c	/^typedef enum { Normal, Reverse, Xor } TextMode;$/;"	e	enum:__anon34	file:
Num	include/mathpad.h	111;"	d
Num2Ph	include/mathpad.h	118;"	d
Num2Tab	include/mathpad.h	101;"	d
OBJECTS	documents/Makefile	/^OBJECTS = $(SOURCE:.c=.o) $(SOURCEXX:.cc=.o)$/;"	m
OBJECTS	include/Makefile	/^OBJECTS = $(SOURCE:.c=.o) $(SOURCEXX:.cc=.o)$/;"	m
OBJECTS	keyboard/Makefile	/^OBJECTS = $(SOURCE:.c=.o) $(SOURCEXX:.cc=.o)$/;"	m
OBJECTS	language/Makefile	/^OBJECTS = $(SOURCE:.c=.o) $(SOURCEXX:.cc=.o)$/;"	m
OBJECTS	markup/Makefile	/^OBJECTS = $(SOURCE:.c=.o) $(SOURCEXX:.cc=.o)$/;"	m
OBJECTS	module/Makefile	/^OBJECTS = $(SOURCE:.c=.o) $(SOURCEXX:.cc=.o)$/;"	m
OBJECTS	output/Makefile	/^OBJECTS = $(SOURCE:.c=.o) $(SOURCEXX:.cc=.o)$/;"	m
OBJECTS	templates/Makefile	/^OBJECTS = $(SOURCE:.c=.o) $(SOURCEXX:.cc=.o)$/;"	m
OBJECTS	tools/Makefile	/^OBJECTS = $(SOURCE:.c=.o) $(SOURCEXX:.cc=.o)$/;"	m
OBJECTS	treeedit/Makefile	/^OBJECTS = $(SOURCE:.c=.o) $(SOURCEXX:.cc=.o)$/;"	m
OBJECTS	unicode/Makefile	/^OBJECTS = $(SOURCE:.c=.o) $(SOURCEXX:.cc=.o)$/;"	m
OBJECTS	util/Makefile	/^OBJECTS = $(SOURCE:.c=.o) $(SOURCEXX:.cc=.o)$/;"	m
OBJECTS	windows/Makefile	/^OBJECTS = $(SOURCE:.c=.o) $(SOURCEXX:.cc=.o)$/;"	m
OD	language/parse.c	47;"	d	file:
OFF	include/output.h	19;"	d
OKBUTTON	windows/fileselc.c	/^enum button { OKBUTTON, RESCANBUTTON, CANCELBUTTON, NR_BUTTON };$/;"	e	enum:button	file:
OLDDOC	windows/edit.c	315;"	d	file:
OLDNAME	unicode/datatotable.c	19;"	d	file:
ON	include/output.h	20;"	d
OPADD	include/expression.h	23;"	d
OPAND	include/expression.h	40;"	d
OPARRAY	include/expression.h	21;"	d
OPASSIGN	include/expression.h	20;"	d
OPDIV	include/expression.h	26;"	d
OPENBRACE	windows/notadef.c	1432;"	d	file:
OPEQUAL	include/expression.h	33;"	d
OPFP	documents/fileread.c	505;"	d	file:
OPGREATER	include/expression.h	35;"	d
OPGREATEREQUAL	include/expression.h	38;"	d
OPLESS	include/expression.h	36;"	d
OPLESSEQUAL	include/expression.h	37;"	d
OPLOGICAND	include/expression.h	29;"	d
OPLOGICNOT	include/expression.h	32;"	d
OPLOGICOR	include/expression.h	30;"	d
OPLOGICXOR	include/expression.h	31;"	d
OPMULT	include/expression.h	25;"	d
OPNOT	include/expression.h	43;"	d
OPNOTEQUAL	include/expression.h	34;"	d
OPOR	include/expression.h	41;"	d
OPREMAIN	include/expression.h	27;"	d
OPSHIFTLEFT	include/expression.h	44;"	d
OPSHIFTRIGHT	include/expression.h	45;"	d
OPSUB	include/expression.h	24;"	d
OPTIONS	language/parse.c	48;"	d	file:
OPXOR	include/expression.h	42;"	d
OTHER	windows/notadef.c	1435;"	d	file:
OUTPUTBUTTON	windows/edit.c	/^	      OUTPUTBUTTON, INCLUDEBUTTON, DONEBUTTON, NR_BUTTON  };$/;"	e	enum:button	file:
OUTPUTTIME	tools/xpipeout.c	63;"	d	file:
O_NONBLOCK	tools/xpipein.c	170;"	d	file:
O_NONBLOCK	tools/xpipeout.c	49;"	d	file:
ObjectList	util/fifolist.c	/^typedef struct _ObjectList ObjectList;$/;"	t	typeref:struct:_ObjectList	file:
Offset	include/mathpad.h	/^typedef int Offset;$/;"	t
Offset	module/pvsparse.c	/^typedef int Offset;$/;"	t	file:
OldNewline	documents/fileread.c	137;"	d	file:
OpStruct	language/expression.c	/^struct OpStruct {$/;"	s	file:
OpStruct	language/expression.c	/^typedef struct OpStruct OpStruct;$/;"	t	typeref:struct:OpStruct	file:
OpType	language/expression.c	24;"	d	file:
OpenBottom	include/mathpad.h	46;"	d
OpenGap	include/mathpad.h	48;"	d
OpenTop	include/mathpad.h	44;"	d
Operator	include/expression.h	47;"	d
Operator	language/expression.c	23;"	d	file:
Opkind	include/mathpad.h	/^                    } Opkind;$/;"	t	typeref:enum:Opkind
Opkind	include/mathpad.h	/^typedef enum Opkind { None, Prefix, Postfix,$/;"	g
Opkind	module/pvsparse.c	/^                    } Opkind;$/;"	t	typeref:enum:Opkind	file:
Opkind	module/pvsparse.c	/^typedef enum Opkind { None, Prefix, Postfix,$/;"	g	file:
Opspace	include/mathpad.h	120;"	d
PAGEBUTTON	windows/symbol.c	/^enum button { PAGEBUTTON, DONEBUTTON, NR_BUTTON };$/;"	e	enum:button	file:
PARRULE	templates/match.c	/^struct PARRULE {$/;"	s	file:
PARRULE	templates/match.c	/^typedef struct PARRULE PARRULE;$/;"	t	typeref:struct:PARRULE	file:
PARSERULES	include/match.h	/^} PARSERULES;$/;"	t	typeref:struct:ParseRules
PATHSEP	util/filefind.c	164;"	d	file:
PIN	language/parse.c	49;"	d	file:
PINUPHELP	include/helpfile.h	93;"	d
PLACENAMESIZE	output/latexout.c	23;"	d	file:
PLACENAMESIZE	windows/output.c	124;"	d	file:
PLACEPOS	windows/notadef.c	89;"	d	file:
PLAINTEX	include/sources.h	36;"	d
PLUS	module/pvsparse.c	/^     PLUS = 260,$/;"	e	enum:pvs_yytokentype	file:
POPUPFONT	include/system.h	31;"	d
POPUPHELP	include/helpfile.h	96;"	d
POPUPSIZE	windows/menu.c	70;"	d	file:
POPUPWINDOW	include/sources.h	/^    POPUPWINDOW, CHECKBOXWINDOW, MAXWINDOWTYPE$/;"	e	enum:__anon40
POSTFIX	include/match.h	14;"	d
PRECPOS	windows/notadef.c	86;"	d	file:
PRED	module/hugsparse.c	/^typedef void *PRED;    \/* expression node *\/$/;"	t	file:
PREFIX	include/match.h	13;"	d
PREVCOD	windows/find.c	/^	      SAVECOD, PREVCOD, NEXTCOD, NEWSCOD, CLEACOD };$/;"	e	enum:button	file:
PROGOBJECTS	documents/Makefile	/^PROGOBJECTS = $(SOURCEPROG:.c=.o) $(SOURCEXXPROG:.cc=.o)$/;"	m
PROGOBJECTS	include/Makefile	/^PROGOBJECTS = $(SOURCEPROG:.c=.o) $(SOURCEXXPROG:.cc=.o)$/;"	m
PROGOBJECTS	keyboard/Makefile	/^PROGOBJECTS = $(SOURCEPROG:.c=.o) $(SOURCEXXPROG:.cc=.o)$/;"	m
PROGOBJECTS	language/Makefile	/^PROGOBJECTS = $(SOURCEPROG:.c=.o) $(SOURCEXXPROG:.cc=.o)$/;"	m
PROGOBJECTS	markup/Makefile	/^PROGOBJECTS = $(SOURCEPROG:.c=.o) $(SOURCEXXPROG:.cc=.o)$/;"	m
PROGOBJECTS	module/Makefile	/^PROGOBJECTS = $(SOURCEPROG:.c=.o) $(SOURCEXXPROG:.cc=.o)$/;"	m
PROGOBJECTS	output/Makefile	/^PROGOBJECTS = $(SOURCEPROG:.c=.o) $(SOURCEXXPROG:.cc=.o)$/;"	m
PROGOBJECTS	templates/Makefile	/^PROGOBJECTS = $(SOURCEPROG:.c=.o) $(SOURCEXXPROG:.cc=.o)$/;"	m
PROGOBJECTS	tools/Makefile	/^PROGOBJECTS = $(SOURCEPROG:.c=.o) $(SOURCEXXPROG:.cc=.o)$/;"	m
PROGOBJECTS	treeedit/Makefile	/^PROGOBJECTS = $(SOURCEPROG:.c=.o) $(SOURCEXXPROG:.cc=.o)$/;"	m
PROGOBJECTS	unicode/Makefile	/^PROGOBJECTS = $(SOURCEPROG:.c=.o) $(SOURCEXXPROG:.cc=.o)$/;"	m
PROGOBJECTS	util/Makefile	/^PROGOBJECTS = $(SOURCEPROG:.c=.o) $(SOURCEXXPROG:.cc=.o)$/;"	m
PROGOBJECTS	windows/Makefile	/^PROGOBJECTS = $(SOURCEPROG:.c=.o) $(SOURCEXXPROG:.cc=.o)$/;"	m
PROGRAM	language/parse.c	66;"	d	file:
PROGRAMS	tools/Makefile	/^PROGRAMS = ispellfilter pktobdf xpipein xpipeout xsetprid$/;"	m
PROGRAMS	treeedit/Makefile	/^PROGRAMS = mathpad$/;"	m
PROGRAMS	unicode/Makefile	/^PROGRAMS = strasciitomap maptoascii asciitomap$/;"	m
PROINTARG	windows/editlib.c	115;"	d	file:
PROINTARG	windows/getstring.c	633;"	d	file:
PROINTARG	windows/notadef.c	2712;"	d	file:
PROINTINTARG	windows/editlib.c	116;"	d	file:
PROINTINTARG	windows/getstring.c	634;"	d	file:
PROINTINTARG	windows/notadef.c	2713;"	d	file:
PROINTINTINTINTINTARG	windows/editlib.c	119;"	d	file:
PROINTINTSTRINGREFARG	windows/editlib.c	128;"	d	file:
PROINTREFSTRSTRARG	windows/editlib.c	122;"	d	file:
PROINTSTRINGARG	windows/editlib.c	126;"	d	file:
PROJECTFILE	include/fileread.h	26;"	d
PRONOARG	windows/editlib.c	114;"	d	file:
PRONOARG	windows/getstring.c	632;"	d	file:
PRONOARG	windows/notadef.c	2711;"	d	file:
PRONOARGINTRES	windows/editlib.c	127;"	d	file:
PROOFTEX	include/sources.h	35;"	d
PROPBUFSIZE	windows/edit.c	950;"	d	file:
PROSTRARG	windows/notadef.c	2714;"	d	file:
PROSTRINGARG	windows/editlib.c	117;"	d	file:
PROSTRINGFUNCFUNCARG	windows/editlib.c	121;"	d	file:
PROSTRINGSTRINGARG	windows/editlib.c	118;"	d	file:
PROSTRINTARG	windows/editlib.c	125;"	d	file:
PROSTRINTINTARG	windows/editlib.c	124;"	d	file:
PROSTRSTRARG	windows/notadef.c	2715;"	d	file:
PROSTRSTRINTARG	windows/editlib.c	123;"	d	file:
PROSTRSTRSTRSTRFUNCARG	windows/editlib.c	120;"	d	file:
PROTOLIST	windows/editlib.c	/^} PROTOLIST;$/;"	t	typeref:struct:__anon86	file:
PROTOLIST	windows/getstring.c	/^} PROTOLIST;$/;"	t	typeref:struct:__anon77	file:
PROTOLIST	windows/notadef.c	/^} PROTOLIST;$/;"	t	typeref:struct:__anon89	file:
PULineFunc	language/popupmenu.c	23;"	d	file:
PULineSeparator	language/popupmenu.c	21;"	d	file:
PULineSubmenu	language/popupmenu.c	22;"	d	file:
PVSENDPREF	module/pvs.c	343;"	d	file:
PVSMESSAGE	module/pvs.c	21;"	d	file:
PVSPREFIX	module/pvs.c	341;"	d	file:
PVSPREFLEN	module/pvs.c	342;"	d	file:
PVSProof	module/pvs.c	/^struct PVSProof {$/;"	s	file:
PVSProof	module/pvs.c	/^typedef struct PVSProof PVSProof;$/;"	t	typeref:struct:PVSProof	file:
ParseLeaf	templates/match.c	/^struct ParseLeaf {$/;"	s	file:
ParseLeaf	templates/match.c	/^typedef struct ParseLeaf ParseLeaf;$/;"	t	typeref:struct:ParseLeaf	file:
ParseRules	include/match.h	/^typedef struct ParseRules {$/;"	s
PathInfo	include/filefind.h	/^typedef void *PathInfo;$/;"	t
PaybackFunc	util/memman.c	/^typedef struct _PaybackFunc PaybackFunc;$/;"	t	typeref:struct:_PaybackFunc	file:
Pfm	treeedit/mathpad.hh	/^typedef void (*Pfm)(const Mark&);$/;"	t
Pfv	treeedit/mathpad.hh	/^typedef void (*Pfv)();$/;"	t
Ph	include/mathpad.h	110;"	d
Ph2Num	include/mathpad.h	117;"	d
PhNum2Char	include/mathpad.h	112;"	d
PlName	include/mathpad.h	67;"	d
PlNameEnd	include/mathpad.h	68;"	d
PopFont	include/mathpad.h	87;"	d
PopSize	include/mathpad.h	43;"	d
Poptabs	include/mathpad.h	35;"	d
PopupLine	include/popupmenu.h	/^struct PopupLine {$/;"	s
PopupLine	include/popupmenu.h	/^typedef struct PopupLine PopupLine;$/;"	t	typeref:struct:PopupLine
PopupList	language/popupmenu.c	/^struct PopupList {$/;"	s	file:
PopupList	language/popupmenu.c	/^typedef struct PopupList PopupList;$/;"	t	typeref:struct:PopupList	file:
PopupMenu	include/popupmenu.h	/^struct PopupMenu {$/;"	s
PopupMenu	include/popupmenu.h	/^typedef struct PopupMenu PopupMenu;$/;"	t	typeref:struct:PopupMenu
Postfix	include/mathpad.h	/^typedef enum Opkind { None, Prefix, Postfix,$/;"	e	enum:Opkind
Postfix	module/pvsparse.c	/^typedef enum Opkind { None, Prefix, Postfix,$/;"	e	enum:Opkind	file:
Prefix	include/mathpad.h	/^typedef enum Opkind { None, Prefix, Postfix,$/;"	e	enum:Opkind
Prefix	module/pvsparse.c	/^typedef enum Opkind { None, Prefix, Postfix,$/;"	e	enum:Opkind	file:
PrimSel	include/mathpad.h	106;"	d
ProgAttrib	include/markup.h	/^    ProgAttrib,  \/* programming constructs, conditional output. *\/$/;"	e	enum:__anon52
ProofStep	module/pvs.c	/^struct ProofStep {$/;"	s	file:
ProofStep	module/pvs.c	/^typedef struct ProofStep ProofStep;$/;"	t	typeref:struct:ProofStep	file:
ProtoArgs	include/prototype.h	27;"	d
ProtoCaller	include/prototype.h	26;"	d
ProtoEmpty	include/prototype.h	64;"	d
ProtoInt	include/prototype.h	65;"	d
ProtoResult	include/prototype.h	28;"	d
ProtoStr	include/prototype.h	66;"	d
Prototype	include/prototype.h	/^} Prototype;$/;"	t	typeref:struct:__anon39
Pushtabs	include/mathpad.h	34;"	d
QUITBUTTON	windows/menu.c	/^              MISCBUTTON, VERSIONBUTTON, QUITBUTTON, NR_BUTTON };$/;"	e	enum:button	file:
RANGE	language/parse.c	80;"	d	file:
RANGEALIAS	unicode/unifont.c	278;"	d	file:
RANGEALIAS	unicode/virtread.c	98;"	d	file:
RANGEREC	unicode/unifont.c	/^struct RANGEREC {$/;"	s	file:
RANGEREC	unicode/unifont.c	/^typedef struct RANGEREC RANGEREC;$/;"	t	typeref:struct:RANGEREC	file:
RANGEREC	unicode/virtread.c	/^struct RANGEREC {$/;"	s	file:
RANGEREC	unicode/virtread.c	/^typedef struct RANGEREC RANGEREC;$/;"	t	typeref:struct:RANGEREC	file:
RANLIB	documents/Makefile	/^RANLIB    = ranlib$/;"	m
RANLIB	include/Makefile	/^RANLIB    = ranlib$/;"	m
RANLIB	keyboard/Makefile	/^RANLIB    = ranlib$/;"	m
RANLIB	language/Makefile	/^RANLIB    = ranlib$/;"	m
RANLIB	markup/Makefile	/^RANLIB    = ranlib$/;"	m
RANLIB	module/Makefile	/^RANLIB    = ranlib$/;"	m
RANLIB	output/Makefile	/^RANLIB    = ranlib$/;"	m
RANLIB	templates/Makefile	/^RANLIB    = ranlib$/;"	m
RANLIB	tools/Makefile	/^RANLIB    = ranlib$/;"	m
RANLIB	treeedit/Makefile	/^RANLIB    = ranlib$/;"	m
RANLIB	unicode/Makefile	/^RANLIB    = ranlib$/;"	m
RANLIB	util/Makefile	/^RANLIB    = ranlib$/;"	m
RANLIB	windows/Makefile	/^RANLIB    = ranlib$/;"	m
READSTACK	documents/fileread.c	/^struct READSTACK {$/;"	s	file:
READSTACK	documents/fileread.c	/^typedef struct READSTACK READSTACK;$/;"	t	typeref:struct:READSTACK	file:
REAL	language/parse.c	33;"	d	file:
REHASHLIMIT	util/translate.c	33;"	d	file:
REJECT	language/parselex.c	64;"	d	file:
REJECT	module/pvsparselex.c	67;"	d	file:
RELSIZESYMBOL	windows/output.c	111;"	d	file:
REMAINDER	language/parse.c	25;"	d	file:
REMAPREC	unicode/unifont.c	/^struct REMAPREC {$/;"	s	file:
REMAPREC	unicode/unifont.c	/^typedef struct REMAPREC REMAPREC;$/;"	t	typeref:struct:REMAPREC	file:
REMARK	language/parse.c	76;"	d	file:
REMARKWINDOW	include/sources.h	/^    SYMBOLWINDOW, DEFAULTWINDOW, REMARKWINDOW, FINDWINDOW, FILESELCWINDOW,$/;"	e	enum:__anon40
REMARK_BUTTON	include/remark.h	23;"	d
REMARK_CENTRE	include/remark.h	19;"	d
REMARK_LASTPOS	include/remark.h	21;"	d
REMARK_MOTION	include/remark.h	25;"	d
REMARK_POINTER	include/remark.h	20;"	d
REMARK_POSITION	include/remark.h	24;"	d
REMARK_VCENTRE	include/remark.h	22;"	d
RENAMEBUTTON	windows/edit.c	/^enum button { LOADBUTTON,  SAVEBUTTON,    RENAMEBUTTON,$/;"	e	enum:button	file:
RENAMEBUTTON	windows/notation.c	/^enum button { LOADBUTTON,   SAVEBUTTON, RENAMEBUTTON,$/;"	e	enum:button	file:
REPACOD	windows/find.c	/^	      FINDCOD, REPLCOD, REPFCOD, REPACOD, LOADCOD,$/;"	e	enum:button	file:
REPFCOD	windows/find.c	/^	      FINDCOD, REPLCOD, REPFCOD, REPACOD, LOADCOD,$/;"	e	enum:button	file:
REPLCOD	windows/find.c	/^	      FINDCOD, REPLCOD, REPFCOD, REPACOD, LOADCOD,$/;"	e	enum:button	file:
RESCANBUTTON	windows/fileselc.c	/^enum button { OKBUTTON, RESCANBUTTON, CANCELBUTTON, NR_BUTTON };$/;"	e	enum:button	file:
RETSIGTYPE	include/config.h	11;"	d
RIGHT	language/parse.c	59;"	d	file:
RIGHTLEFT	language/parse.c	51;"	d	file:
RIGHT_LINE	windows/default.c	62;"	d	file:
RULE	templates/match.c	/^struct RULE {$/;"	s	file:
RULE	templates/match.c	/^typedef struct RULE RULE;$/;"	t	typeref:struct:RULE	file:
RUNCOM	windows/edit.c	73;"	d	file:
RealType	include/types.h	9;"	d
RedirectFunc	include/markup.h	/^typedef int (*RedirectFunc)(Uchar);$/;"	t
RefElem	util/refcounting.c	/^struct RefElem {$/;"	s	file:
RefElem	util/refcounting.c	/^typedef struct RefElem RefElem;$/;"	t	typeref:struct:RefElem	file:
RegisterPaybackFunction	util/memman.c	/^void RegisterPaybackFunction(void (*function)(void))$/;"	f
RemovePaybackFunction	util/memman.c	/^void RemovePaybackFunction(void (*function)(void))$/;"	f
Return	treeedit/editwindow.cc	/^Return::Return() : point(Line)$/;"	f	class:Return
Return	treeedit/editwindow.cc	/^Return::Return(Node *pn, Index i) : point(Line)$/;"	f	class:Return
Return	treeedit/editwindow.cc	/^Return::Return(const Mark& m) : point(Line)$/;"	f	class:Return
Return	treeedit/editwindow.cc	/^Return::Return(const Mark& m, Index) : point(LeftLine)$/;"	f	class:Return
Return	treeedit/editwindow.hh	/^class Return {$/;"	c
Reverse	include/mathpad.h	/^typedef enum { Normal, Reverse, Xor } TextMode;$/;"	e	enum:__anon54
Reverse	module/pvsparse.c	/^typedef enum { Normal, Reverse, Xor } TextMode;$/;"	e	enum:__anon34	file:
Right	treeedit/marker.hh	/^enum Kind { View, Left, LeftLine, Right, Line, Tree };$/;"	e	enum:Kind
RightBinding	include/mathpad.h	/^                      Infix, LeftBinding, RightBinding$/;"	e	enum:Opkind
RightBinding	module/pvsparse.c	/^                      Infix, LeftBinding, RightBinding$/;"	e	enum:Opkind	file:
RotateBuffer	unicode/unistring.c	/^} RotateBuffer;$/;"	t	typeref:struct:__anon98	file:
Rtab	include/mathpad.h	30;"	d
RubRef	language/typetest.c	/^typedef Rubbish *RubRef;$/;"	t	file:
Rubbish	language/typetest.c	/^} Rubbish;$/;"	t	typeref:struct:__anon6	file:
SAVEBUTTON	windows/default.c	/^enum button {SETBUTTON, SAVEBUTTON, DONEBUTTON, NR_BUTTON };$/;"	e	enum:button	file:
SAVEBUTTON	windows/edit.c	/^enum button { LOADBUTTON,  SAVEBUTTON,    RENAMEBUTTON,$/;"	e	enum:button	file:
SAVEBUTTON	windows/notation.c	/^enum button { LOADBUTTON,   SAVEBUTTON, RENAMEBUTTON,$/;"	e	enum:button	file:
SAVECOD	windows/find.c	/^	      SAVECOD, PREVCOD, NEXTCOD, NEWSCOD, CLEACOD };$/;"	e	enum:button	file:
SCREENDESC	windows/notadef.c	82;"	d	file:
SCREENFORMAT	include/notatype.h	19;"	d
SCROLLBAR	language/parse.c	57;"	d	file:
SCROLLBARHELP	include/helpfile.h	92;"	d
SCROLLBARINFO	windows/scrollbar.c	/^        } SCROLLBARINFO;$/;"	t	typeref:struct:__anon91	file:
SCROLLBARSIZE	include/system.h	22;"	d
SCROLLBARSIZED	windows/scrollbar.c	49;"	d	file:
SCROLLBARWINDOW	include/sources.h	/^    NOWINDOW, BUTTONWINDOW, SCROLLBARWINDOW, STRINGWINDOW, MENUWINDOW,$/;"	e	enum:__anon40
SEARCH	windows/menu.c	664;"	d	file:
SELECTIONBUTTON	windows/menu.c	/^enum button { WINDOWBUTTON, EDITOPBUTTON, STRUCTUREBUTTON, SELECTIONBUTTON,$/;"	e	enum:button	file:
SELECT_HH	treeedit/select.hh	38;"	d
SEPARATOR	language/parse.c	52;"	d	file:
SEPERATOR	windows/notadef.c	1433;"	d	file:
SETBUTTON	windows/default.c	/^enum button {SETBUTTON, SAVEBUTTON, DONEBUTTON, NR_BUTTON };$/;"	e	enum:button	file:
SET_BOX	windows/output.c	467;"	d	file:
SET_FREE	windows/output.c	1895;"	d	file:
SHADES	include/output.h	16;"	d
SHELL	documents/Makefile	/^SHELL     = \/bin\/sh$/;"	m
SHELL	include/Makefile	/^SHELL     = \/bin\/sh$/;"	m
SHELL	keyboard/Makefile	/^SHELL     = \/bin\/sh$/;"	m
SHELL	language/Makefile	/^SHELL     = \/bin\/sh$/;"	m
SHELL	language/parse.c	74;"	d	file:
SHELL	markup/Makefile	/^SHELL     = \/bin\/sh$/;"	m
SHELL	module/Makefile	/^SHELL     = \/bin\/sh$/;"	m
SHELL	output/Makefile	/^SHELL     = \/bin\/sh$/;"	m
SHELL	templates/Makefile	/^SHELL     = \/bin\/sh$/;"	m
SHELL	tools/Makefile	/^SHELL     = \/bin\/sh$/;"	m
SHELL	treeedit/Makefile	/^SHELL     = \/bin\/sh$/;"	m
SHELL	unicode/Makefile	/^SHELL     = \/bin\/sh$/;"	m
SHELL	util/Makefile	/^SHELL     = \/bin\/sh$/;"	m
SHELL	windows/Makefile	/^SHELL     = \/bin\/sh$/;"	m
SHIFTLEFT	language/parse.c	19;"	d	file:
SHIFTRIGHT	language/parse.c	20;"	d	file:
SHORT_REMARK	include/remark.h	17;"	d
SIGTYPE	windows/sources.c	/^} SIGTYPE;$/;"	t	typeref:struct:__anon83	file:
SIZELATEX	output/latexout.c	76;"	d	file:
SIZEPOS	windows/notadef.c	92;"	d	file:
SIZESYMBOL	windows/output.c	110;"	d	file:
SIZEX	windows/symbol.c	53;"	d	file:
SIZEY	windows/symbol.c	54;"	d	file:
SIdClose	include/latexout.h	/^               SIdOpen, SIdClose, LIdOpen, LIdClose, VarOpen, VarClose,$/;"	e	enum:__anon44
SIdOpen	include/latexout.h	/^               SIdOpen, SIdClose, LIdOpen, LIdClose, VarOpen, VarClose,$/;"	e	enum:__anon44
SMART	include/output.h	17;"	d
SOURCE	documents/Makefile	/^SOURCE = fileread.c helpfile.c system.c $/;"	m
SOURCE	keyboard/Makefile	/^SOURCE = X11syskeys.c keyboard.c keys.c $/;"	m
SOURCE	language/Makefile	/^SOURCE = constant.c expression.c function.c \\$/;"	m
SOURCE	markup/Makefile	/^SOURCE = box_markup.c color_markup.c font_markup.c lang_markup.c markup.c $/;"	m
SOURCE	module/Makefile	/^SOURCE = SEJ.c hugs.c hugsparse.c ispell.c maple.c parser.c parsertemp.c \\$/;"	m
SOURCE	output/Makefile	/^SOURCE = latexout.c $/;"	m
SOURCE	templates/Makefile	/^SOURCE = notatype.c $/;"	m
SOURCE	tools/Makefile	/^SOURCE = $/;"	m
SOURCE	unicode/Makefile	/^SOURCE = uniconv.c unifont.c unimap.c unistring.c unitype.c $/;"	m
SOURCE	util/Makefile	/^SOURCE = debug.c dynasize.c fifolist.c filefind.c flexarray.c fstate.c \\$/;"	m
SOURCE	windows/Makefile	/^SOURCE = buffer.c button.c checkbox.c default.c edit.c \\$/;"	m
SOURCEXX	treeedit/Makefile	/^SOURCEXX = editwindow.cc mark.cc marker.cc node.cc select.cc  editor.cc$/;"	m
SOpClose	include/latexout.h	/^typedef enum { ExprOpen, ExprClose, SOpOpen, SOpClose, LOpOpen, LOpClose,$/;"	e	enum:__anon44
SOpOpen	include/latexout.h	/^typedef enum { ExprOpen, ExprClose, SOpOpen, SOpClose, LOpOpen, LOpClose,$/;"	e	enum:__anon44
SPACEPOS	windows/notadef.c	87;"	d	file:
SPACEVAL	templates/match.c	88;"	d	file:
SRCDIR	Makefile	/^SRCDIR    = .$/;"	m
SRCDIR	documents/Makefile	/^SRCDIR    = .$/;"	m
SRCDIR	include/Makefile	/^SRCDIR    = .$/;"	m
SRCDIR	keyboard/Makefile	/^SRCDIR    = .$/;"	m
SRCDIR	language/Makefile	/^SRCDIR    = .$/;"	m
SRCDIR	markup/Makefile	/^SRCDIR    = .$/;"	m
SRCDIR	module/Makefile	/^SRCDIR    = .$/;"	m
SRCDIR	output/Makefile	/^SRCDIR    = .$/;"	m
SRCDIR	templates/Makefile	/^SRCDIR    = .$/;"	m
SRCDIR	tools/Makefile	/^SRCDIR    = .$/;"	m
SRCDIR	treeedit/Makefile	/^SRCDIR    = .$/;"	m
SRCDIR	unicode/Makefile	/^SRCDIR    = .$/;"	m
SRCDIR	util/Makefile	/^SRCDIR    = .$/;"	m
SRCDIR	windows/Makefile	/^SRCDIR    = .$/;"	m
STACKBUTTON	windows/find.c	/^enum button { FINDBUTTON, STACKBUTTON, DONEBUTTON, NR_BUTTON,$/;"	e	enum:button	file:
STACKD	windows/getstring.c	55;"	d	file:
STARTCURSOR	windows/button.c	49;"	d	file:
STATE	util/fstate.c	/^typedef unsigned short STATE;$/;"	t	file:
STATECHANGE	util/fstate.c	/^} STATECHANGE;$/;"	t	typeref:struct:__anon60	file:
STATEFILE	include/fileread.h	28;"	d
STDC_HEADERS	include/config.h	17;"	d
STENCIL	language/parse.c	70;"	d	file:
STENCILDEFINEHELP	include/helpfile.h	39;"	d
STENCILDONEHELP	include/helpfile.h	40;"	d
STENCILFILE	include/fileread.h	21;"	d
STENCILFILETYPE	include/fileread.h	40;"	d
STENCILHELP	include/helpfile.h	35;"	d
STENCILLOADHELP	include/helpfile.h	36;"	d
STENCILRENAMEHELP	include/helpfile.h	38;"	d
STENCILSAVEHELP	include/helpfile.h	37;"	d
STENCILTYPE	include/fileread.h	39;"	d
STOP	windows/notadef.c	1430;"	d	file:
STRING	language/parse.c	29;"	d	file:
STRING	module/hugsparse.c	/^typedef void *STRING;  \/* text node *\/$/;"	t	file:
STRINGINFO	windows/getstring.c	/^struct STRINGINFO {$/;"	s	file:
STRINGINFO	windows/getstring.c	/^typedef struct STRINGINFO STRINGINFO;$/;"	t	typeref:struct:STRINGINFO	file:
STRINGSTACK	documents/fileread.c	/^struct STRINGSTACK {$/;"	s	file:
STRINGSTACK	documents/fileread.c	/^typedef struct STRINGSTACK STRINGSTACK;$/;"	t	typeref:struct:STRINGSTACK	file:
STRINGWINDOW	include/sources.h	/^    NOWINDOW, BUTTONWINDOW, SCROLLBARWINDOW, STRINGWINDOW, MENUWINDOW,$/;"	e	enum:__anon40
STRSTACK	tools/xpipein.c	/^struct STRSTACK {$/;"	s	file:
STRSTACK	tools/xpipein.c	/^typedef struct STRSTACK STRSTACK;$/;"	t	typeref:struct:STRSTACK	file:
STRSTACK	tools/xpipeout.c	/^struct STRSTACK {$/;"	s	file:
STRSTACK	tools/xpipeout.c	/^typedef struct STRSTACK STRSTACK;$/;"	t	typeref:struct:STRSTACK	file:
STRUCTUREBUTTON	windows/menu.c	/^enum button { WINDOWBUTTON, EDITOPBUTTON, STRUCTUREBUTTON, SELECTIONBUTTON,$/;"	e	enum:button	file:
SUBDIRS	Makefile	/^SUBDIRS = include util markup unicode keyboard language templates \\$/;"	m
SUBMAKE	documents/Makefile	/^SUBMAKE   = $(MAKE) 'CC=$(CC)' 'CFLAGS=$(CFLAGS)' 'CXXFLAGS=$(CXXFLAGS)'$/;"	m
SUBMAKE	include/Makefile	/^SUBMAKE   = $(MAKE) 'CC=$(CC)' 'CFLAGS=$(CFLAGS)' 'CXXFLAGS=$(CXXFLAGS)'$/;"	m
SUBMAKE	keyboard/Makefile	/^SUBMAKE   = $(MAKE) 'CC=$(CC)' 'CFLAGS=$(CFLAGS)' 'CXXFLAGS=$(CXXFLAGS)'$/;"	m
SUBMAKE	language/Makefile	/^SUBMAKE   = $(MAKE) 'CC=$(CC)' 'CFLAGS=$(CFLAGS)' 'CXXFLAGS=$(CXXFLAGS)'$/;"	m
SUBMAKE	markup/Makefile	/^SUBMAKE   = $(MAKE) 'CC=$(CC)' 'CFLAGS=$(CFLAGS)' 'CXXFLAGS=$(CXXFLAGS)'$/;"	m
SUBMAKE	module/Makefile	/^SUBMAKE   = $(MAKE) 'CC=$(CC)' 'CFLAGS=$(CFLAGS)' 'CXXFLAGS=$(CXXFLAGS)'$/;"	m
SUBMAKE	output/Makefile	/^SUBMAKE   = $(MAKE) 'CC=$(CC)' 'CFLAGS=$(CFLAGS)' 'CXXFLAGS=$(CXXFLAGS)'$/;"	m
SUBMAKE	templates/Makefile	/^SUBMAKE   = $(MAKE) 'CC=$(CC)' 'CFLAGS=$(CFLAGS)' 'CXXFLAGS=$(CXXFLAGS)'$/;"	m
SUBMAKE	tools/Makefile	/^SUBMAKE   = $(MAKE) 'CC=$(CC)' 'CFLAGS=$(CFLAGS)' 'CXXFLAGS=$(CXXFLAGS)'$/;"	m
SUBMAKE	treeedit/Makefile	/^SUBMAKE   = $(MAKE) 'CC=$(CC)' 'CFLAGS=$(CFLAGS)' 'CXXFLAGS=$(CXXFLAGS)'$/;"	m
SUBMAKE	unicode/Makefile	/^SUBMAKE   = $(MAKE) 'CC=$(CC)' 'CFLAGS=$(CFLAGS)' 'CXXFLAGS=$(CXXFLAGS)'$/;"	m
SUBMAKE	util/Makefile	/^SUBMAKE   = $(MAKE) 'CC=$(CC)' 'CFLAGS=$(CFLAGS)' 'CXXFLAGS=$(CXXFLAGS)'$/;"	m
SUBMAKE	windows/Makefile	/^SUBMAKE   = $(MAKE) 'CC=$(CC)' 'CFLAGS=$(CFLAGS)' 'CXXFLAGS=$(CXXFLAGS)'$/;"	m
SUBSCRIPT	module/pvsparse.c	/^     SUBSCRIPT = 264,$/;"	e	enum:pvs_yytokentype	file:
SUCCESS	include/fileread.h	13;"	d
SYMBOL	language/parse.c	69;"	d	file:
SYMBOLDONEHELP	include/helpfile.h	64;"	d
SYMBOLFILE	include/fileread.h	24;"	d
SYMBOLFONT	include/system.h	30;"	d
SYMBOLHELP	include/helpfile.h	61;"	d
SYMBOLINFO	windows/symbol.c	/^       } SYMBOLINFO;$/;"	t	typeref:struct:__anon85	file:
SYMBOLNAME	windows/symbol.c	50;"	d	file:
SYMBOLNEXTHELP	include/helpfile.h	62;"	d
SYMBOLPAGE	windows/symbol.c	/^struct SYMBOLPAGE {$/;"	s	file:
SYMBOLPAGE	windows/symbol.c	/^typedef struct SYMBOLPAGE SYMBOLPAGE;$/;"	t	typeref:struct:SYMBOLPAGE	file:
SYMBOLPREVHELP	include/helpfile.h	63;"	d
SYMBOLTYPE	include/fileread.h	45;"	d
SYMBOLWINDOW	include/sources.h	/^    SYMBOLWINDOW, DEFAULTWINDOW, REMARKWINDOW, FINDWINDOW, FILESELCWINDOW,$/;"	e	enum:__anon40
SYMBOL_PH	windows/output.c	88;"	d	file:
SYMBOL_TAB	windows/output.c	87;"	d	file:
SecondSel	include/mathpad.h	104;"	d
SelPasteKey	windows/events.c	68;"	d	file:
SelPasteMode	windows/events.c	69;"	d	file:
Select	treeedit/select.cc	/^Select::Select() : begin(Left), end(Right)$/;"	f	class:Select
Select	treeedit/select.hh	/^class Select {$/;"	c
SeqPair	language/parse.c	/^} SeqPair;$/;"	t	typeref:struct:__anon7	file:
Sequence	include/keyboard.h	11;"	d
Sequence	include/sequence.h	10;"	d
Settab	include/mathpad.h	29;"	d
SizeFont	include/mathpad.h	86;"	d
SkipStep	module/pvs.c	71;"	d	file:
SoftNewline	include/mathpad.h	36;"	d
SpaceBox	windows/output.c	214;"	d	file:
SpaceCode	include/mathpad.h	81;"	d
SpaceFont	include/mathpad.h	83;"	d
StackAttrib	include/markup.h	/^    StackAttrib, \/* for refering to stack information with additional data *\/$/;"	e	enum:__anon52
StackB	include/mathpad.h	53;"	d
StackBaseBox	windows/output.c	201;"	d	file:
StackC	include/mathpad.h	54;"	d
StackCenterBox	windows/output.c	200;"	d	file:
StackClose	include/mathpad.h	57;"	d
StackFont	include/mathpad.h	84;"	d
StartHide	include/mathpad.h	42;"	d
StippleBox	windows/output.c	212;"	d	file:
StringToKey	keyboard/X11syskeys.c	/^KeyNum StringToKey(char *s)$/;"	f
StringType	include/types.h	8;"	d
SurroHandler	markup/markup.c	/^struct SurroHandler {$/;"	s	file:
SurroHandler	markup/markup.c	/^typedef struct SurroHandler SurroHandler;$/;"	t	typeref:struct:SurroHandler	file:
SymbolKey	windows/symbol.c	58;"	d	file:
SymbolMode	windows/symbol.c	59;"	d	file:
SystemFunc	windows/popup.c	/^} SystemFunc;$/;"	t	typeref:struct:__anon72	file:
TABBING	windows/output.c	/^struct TABBING {$/;"	s	file:
TABBING	windows/output.c	/^typedef struct TABBING TABBING;$/;"	t	typeref:struct:TABBING	file:
TABPOS	windows/notadef.c	93;"	d	file:
TAPTOPTYPE	module/hugsparse.c	34;"	d	file:
TAPTYPE	module/hugsparse.c	37;"	d	file:
TARROWOP	module/hugsparse.c	38;"	d	file:
TARROWTYPE	module/hugsparse.c	32;"	d	file:
TBADKIND	module/hugsparse.c	40;"	d	file:
TBADTYPE	module/hugsparse.c	35;"	d	file:
TEMPINFO	module/hugsparse.c	/^} TEMPINFO;$/;"	t	typeref:struct:__anon35	file:
TESTPROGS	unicode/Makefile	/^TESTPROGS = brows convert datatotable decomp fonttest printdecomp \\$/;"	m
TEXP	module/hugsparse.c	/^typedef void *TEXP;    \/* expression node *\/$/;"	t	file:
TEXT	include/match.h	16;"	d
TEXTCLOSE	windows/output.c	90;"	d	file:
TEXTFONT	include/system.h	18;"	d
TEXTOPEN	windows/output.c	89;"	d	file:
TEXTTREE	include/match.h	22;"	d
TEXTX	windows/button.c	50;"	d	file:
TEXTX	windows/getstring.c	53;"	d	file:
TEXTY	windows/button.c	51;"	d	file:
TEXTY	windows/getstring.c	54;"	d	file:
THREE_BYTES	unicode/unistring.c	73;"	d	file:
TIMES	module/pvsparse.c	/^     TIMES = 261,$/;"	e	enum:pvs_yytokentype	file:
TITLE	language/parse.c	53;"	d	file:
TITLEEQ	unicode/datatotable.c	23;"	d	file:
TITLESEL	windows/popup.c	61;"	d	file:
TKINDARROW	module/hugsparse.c	42;"	d	file:
TLISTTYPE	module/hugsparse.c	31;"	d	file:
TNOCONTEXT	module/hugsparse.c	28;"	d	file:
TOP	language/parse.c	61;"	d	file:
TOPOBJ	Makefile	/^TOPOBJ    = .$/;"	m
TOPOBJ	documents/Makefile	/^TOPOBJ    = .$/;"	m
TOPOBJ	include/Makefile	/^TOPOBJ    = .$/;"	m
TOPOBJ	keyboard/Makefile	/^TOPOBJ    = .$/;"	m
TOPOBJ	language/Makefile	/^TOPOBJ    = .$/;"	m
TOPOBJ	markup/Makefile	/^TOPOBJ    = .$/;"	m
TOPOBJ	module/Makefile	/^TOPOBJ    = .$/;"	m
TOPOBJ	output/Makefile	/^TOPOBJ    = .$/;"	m
TOPOBJ	templates/Makefile	/^TOPOBJ    = .$/;"	m
TOPOBJ	tools/Makefile	/^TOPOBJ    = .$/;"	m
TOPOBJ	treeedit/Makefile	/^TOPOBJ    = .$/;"	m
TOPOBJ	unicode/Makefile	/^TOPOBJ    = .$/;"	m
TOPOBJ	util/Makefile	/^TOPOBJ    = .$/;"	m
TOPOBJ	windows/Makefile	/^TOPOBJ    = .$/;"	m
TOPSRCDIR	Makefile	/^TOPSRCDIR = ..$/;"	m
TOPSRCDIR	documents/Makefile	/^TOPSRCDIR = ..\/..$/;"	m
TOPSRCDIR	include/Makefile	/^TOPSRCDIR = ..\/..$/;"	m
TOPSRCDIR	keyboard/Makefile	/^TOPSRCDIR = ..\/..$/;"	m
TOPSRCDIR	language/Makefile	/^TOPSRCDIR = ..\/..$/;"	m
TOPSRCDIR	markup/Makefile	/^TOPSRCDIR = ..\/..$/;"	m
TOPSRCDIR	module/Makefile	/^TOPSRCDIR = ..\/..$/;"	m
TOPSRCDIR	output/Makefile	/^TOPSRCDIR = ..\/..$/;"	m
TOPSRCDIR	templates/Makefile	/^TOPSRCDIR = ..\/..$/;"	m
TOPSRCDIR	tools/Makefile	/^TOPSRCDIR = ..\/..$/;"	m
TOPSRCDIR	treeedit/Makefile	/^TOPSRCDIR = ..\/..$/;"	m
TOPSRCDIR	unicode/Makefile	/^TOPSRCDIR = ..\/..$/;"	m
TOPSRCDIR	util/Makefile	/^TOPSRCDIR = ..\/..$/;"	m
TOPSRCDIR	windows/Makefile	/^TOPSRCDIR = ..\/..$/;"	m
TPREDAPP	module/hugsparse.c	30;"	d	file:
TPREDSEP	module/hugsparse.c	29;"	d	file:
TRANSLATION	language/parse.c	81;"	d	file:
TREESTORE	keyboard/keyboard.c	21;"	d	file:
TSIGCONTYPE	module/hugsparse.c	26;"	d	file:
TSIGTYPE	module/hugsparse.c	27;"	d	file:
TSTARKIND	module/hugsparse.c	41;"	d	file:
TTUPLETYPE	module/hugsparse.c	33;"	d	file:
TTYPESEP	module/hugsparse.c	36;"	d	file:
TUNPRED	module/hugsparse.c	39;"	d	file:
TVal	include/types.h	/^} TVal;$/;"	t	typeref:union:__anon56
TWO_BYTES	unicode/unistring.c	74;"	d	file:
TYPE	language/parse.c	63;"	d	file:
TYPEVAL	language/parse.c	32;"	d	file:
TabClose	include/mathpad.h	60;"	d
TabCodes	include/mathpad.h	72;"	d
TabOpen	include/mathpad.h	59;"	d
Tabminus	include/mathpad.h	33;"	d
Tabplus	include/mathpad.h	32;"	d
TemplateKey	windows/notation.c	58;"	d	file:
TemplateMode	windows/notation.c	59;"	d	file:
TexCode	include/latexout.h	/^	   } TexCode;$/;"	t	typeref:enum:__anon44
TextBox	windows/output.c	195;"	d	file:
TextClose	include/latexout.h	/^               TextOpen, TextClose, DispOpen, DispClose$/;"	e	enum:__anon44
TextMode	include/mathpad.h	/^typedef enum { Normal, Reverse, Xor } TextMode;$/;"	t	typeref:enum:__anon54
TextMode	module/pvsparse.c	/^typedef enum { Normal, Reverse, Xor } TextMode;$/;"	t	typeref:enum:__anon34	file:
TextOpen	include/latexout.h	/^               TextOpen, TextClose, DispOpen, DispClose$/;"	e	enum:__anon44
ThinSpace	include/mathpad.h	64;"	d
ThirdSel	include/mathpad.h	105;"	d
ToArrayType	include/types.h	17;"	d
ToConstType	include/types.h	16;"	d
ToRefType	include/types.h	13;"	d
TopBox	windows/output.c	208;"	d	file:
TopGap	include/mathpad.h	55;"	d
TransLang	util/translate.c	/^} TransLang;$/;"	t	typeref:struct:__anon67	file:
Translation	util/translate.c	/^struct Translation {$/;"	s	file:
Translation	util/translate.c	/^typedef struct Translation Translation;$/;"	t	typeref:struct:Translation	file:
Tree	treeedit/marker.hh	/^enum Kind { View, Left, LeftLine, Right, Line, Tree };$/;"	e	enum:Kind
True	language/leaftree.c	41;"	d	file:
True	util/leaftree.c	41;"	d	file:
TrueTrue	output/latexout.c	203;"	d	file:
TryHard	util/memman.c	367;"	d	file:
Tstr	module/pvs.c	/^static char *Tstr="T";$/;"	v	file:
Type	include/types.h	/^typedef unsigned int Type;$/;"	t
TypeConstruct	language/types.c	/^} TypeConstruct;$/;"	t	typeref:struct:__anon2	file:
TypeMatch	include/types.h	18;"	d
TypeNeeded	include/prototype.h	25;"	d
TypeSize	language/expression.c	350;"	d	file:
TypeSize	language/userdef.c	61;"	d	file:
U	language/parselex.c	2;"	d	file:
U	module/pvsparselex.c	3;"	d	file:
UCheckConv	include/unitype.h	190;"	d
UConvDeFail	unicode/uniconv.c	/^Uchar *UConvDeFail(const Uchar *text, UConverter *convert)$/;"	f
UConvDeLen	unicode/uniconv.c	/^int   UConvDeLen(const Uchar *text, UConverter *convert)$/;"	f
UConvDecode	unicode/uniconv.c	/^unsigned char *UConvDecode(const Uchar *text, unsigned char *target,$/;"	f
UConvEnFail	unicode/uniconv.c	/^unsigned char *UConvEnFail(const unsigned char *text, UConverter *convert)$/;"	f
UConvEnLen	unicode/uniconv.c	/^int    UConvEnLen(const unsigned char *text, UConverter *convert)$/;"	f
UConvEncode	unicode/uniconv.c	/^Uchar *UConvEncode(const unsigned char *text, Uchar *target,$/;"	f
UConvGet	unicode/uniconv.c	/^UConverter *UConvGet(UConvID convid)$/;"	f
UConvGetID	unicode/uniconv.c	/^UConvID UConvGetID(Uchar *name)$/;"	f
UConvID	include/uniconv.h	/^typedef short UConvID;$/;"	t
UConvLoad	unicode/uniconv.c	/^static void UConvLoad(UConvID convid)$/;"	f	file:
UConvLoadDatabase	unicode/uniconv.c	/^void UConvLoadDatabase(char *name)$/;"	f
UConvName	unicode/uniconv.c	/^Uchar *UConvName(UConverter *convert)$/;"	f
UConverter	include/uniconv.h	/^} UConverter;$/;"	t	typeref:struct:__anon42
UM_BOOLTYPE	include/unimap.h	18;"	d
UM_CHARREFTYPE	include/unimap.h	21;"	d
UM_CHARTYPE	include/unimap.h	19;"	d
UM_INTTYPE	include/unimap.h	23;"	d
UM_UCHARREFTYPE	include/unimap.h	22;"	d
UM_UCHARTYPE	include/unimap.h	20;"	d
UNICODE_H	include/unicode.h	28;"	d
UNICONV_H	include/uniconv.h	22;"	d
UNIFONT_H	include/unifont.h	15;"	d
UNIMAP_H	include/unimap.h	11;"	d
UNISTRING_H	include/unistring.h	9;"	d
UNISTRING_ROTATE_MAX	unicode/unistring.c	502;"	d	file:
UNITYPE_H	include/unitype.h	19;"	d
UNI_MAPSIZE	include/unicode.h	34;"	d
UNOFLANG	markup/lang_markup.c	/^typedef struct UNOFLANG {$/;"	s	file:
UNOFLANG	markup/lang_markup.c	/^} UNOFLANG;$/;"	t	typeref:struct:UNOFLANG	file:
UPEQ	unicode/datatotable.c	21;"	d	file:
USEDMAX	windows/fonts.c	172;"	d	file:
USERDIR	documents/system.c	47;"	d	file:
USERFUNC	language/sequence.c	11;"	d	file:
UTFcheck	unicode/unistring.c	/^int UTFcheck(const unsigned char *c)$/;"	f
UTFneedlen	unicode/unistring.c	/^int UTFneedlen(const Uchar *c)$/;"	f
UTFstrlen	unicode/unistring.c	/^int UTFstrlen(const unsigned char *s)$/;"	f
UTFtoUstr	unicode/unistring.c	/^int UTFtoUstr(const unsigned char *s, Uchar *t)$/;"	f
Uchar	include/unicode.h	/^typedef unsigned short Uchar;$/;"	t
Uchar	module/pvsparse.c	/^typedef unsigned short Uchar;$/;"	t	file:
Ucombclass	include/unitype.h	219;"	d
Ucompmap	unicode/unistring.c	148;"	d	file:
Udecomp	include/unitype.h	209;"	d
Udecomptype	include/unitype.h	211;"	d
Uindex	unicode/unistring.c	/^Uchar *Uindex(const Uchar *s, int c)$/;"	f
Uisalnum	include/unitype.h	150;"	d
Uisalpha	include/unitype.h	142;"	d
Uisarabnum	include/unitype.h	172;"	d
Uisclose	include/unitype.h	162;"	d
Uiscntrl	include/unitype.h	154;"	d
Uiscombining	include/unitype.h	156;"	d
Uiscurrency	include/unitype.h	160;"	d
Uisdigit	include/unitype.h	147;"	d
Uiseuronum	include/unitype.h	169;"	d
Uiseurosep	include/unitype.h	170;"	d
Uiseuroterm	include/unitype.h	171;"	d
Uisgraph	include/unitype.h	153;"	d
Uisleftright	include/unitype.h	167;"	d
Uislower	include/unitype.h	144;"	d
Uismath	include/unitype.h	159;"	d
Uismirrored	include/unitype.h	165;"	d
Uismodifier	include/unitype.h	146;"	d
Uisneutral	include/unitype.h	174;"	d
Uisnonspacing	include/unitype.h	157;"	d
Uisopen	include/unitype.h	161;"	d
Uisprint	include/unitype.h	152;"	d
Uisprivate	include/unitype.h	176;"	d
Uispunct	include/unitype.h	149;"	d
Uisrightleft	include/unitype.h	168;"	d
Uisspace	include/unitype.h	148;"	d
Uissurrogatehigh	include/unitype.h	179;"	d
Uissurrogatelow	include/unitype.h	180;"	d
Uissymbol	include/unitype.h	151;"	d
Uistitle	include/unitype.h	145;"	d
Uisupper	include/unitype.h	143;"	d
Uiswhite	include/unitype.h	173;"	d
Uisxdigit	include/unitype.h	188;"	d
Ultostr	unicode/unistring.c	/^Uchar *Ultostr(long l, Uchar *s)$/;"	f
Urindex	unicode/unistring.c	/^Uchar *Urindex(const Uchar *s, int c)$/;"	f
UserDef	language/userdef.c	/^} UserDef;$/;"	t	typeref:struct:__anon5	file:
UserFuncType	language/expression.c	27;"	d	file:
Ustpcpy	unicode/unistring.c	/^Uchar *Ustpcpy(Uchar *dest, const Uchar *src)$/;"	f
Ustpncpy	unicode/unistring.c	/^Uchar *Ustpncpy(Uchar *dest, const Uchar *src, size_t n)$/;"	f
Ustrcasecmp	unicode/unistring.c	/^int Ustrcasecmp(const Uchar *s1, const Uchar *s2)$/;"	f
Ustrcat	unicode/unistring.c	/^Uchar *Ustrcat(Uchar *dest, const Uchar *src)$/;"	f
Ustrchr	unicode/unistring.c	/^Uchar *Ustrchr(const Uchar *s, Uchar c)$/;"	f
Ustrcmp	unicode/unistring.c	/^int Ustrcmp(const Uchar *s1, const Uchar *s2)$/;"	f
Ustrcpy	unicode/unistring.c	/^Uchar *Ustrcpy(Uchar *dest, const Uchar *src)$/;"	f
Ustrcspn	unicode/unistring.c	/^size_t Ustrcspn(const Uchar *s, const Uchar *reject)$/;"	f
Ustrdup	unicode/unistring.c	/^Uchar *Ustrdup(const Uchar *s)$/;"	f
Ustrerror	unicode/unistring.c	/^Uchar *Ustrerror(int errnum)$/;"	f
Ustrlen	unicode/unistring.c	/^size_t Ustrlen(const Uchar *s)$/;"	f
Ustrncasecmp	unicode/unistring.c	/^int Ustrncasecmp(const Uchar *s1, const Uchar *s2, size_t n)$/;"	f
Ustrncat	unicode/unistring.c	/^Uchar *Ustrncat(Uchar *dest, const Uchar *src, size_t n)$/;"	f
Ustrncmp	unicode/unistring.c	/^int Ustrncmp(const Uchar *s1, const Uchar *s2, size_t n)$/;"	f
Ustrncpy	unicode/unistring.c	/^Uchar *Ustrncpy(Uchar *dest, const Uchar *src, size_t n)$/;"	f
Ustrpbrk	unicode/unistring.c	/^Uchar *Ustrpbrk(const Uchar *s, const Uchar *accept)$/;"	f
Ustrrchr	unicode/unistring.c	/^Uchar *Ustrrchr(const Uchar *s, Uchar c)$/;"	f
Ustrsep	unicode/unistring.c	/^Uchar *Ustrsep(Uchar **stringp, const Uchar *delim)$/;"	f
Ustrsigcache	unicode/unistring.c	/^static Uchar *Ustrsigcache[MAX_UNI_SIG]={0};$/;"	v	file:
Ustrsignal	unicode/unistring.c	/^Uchar *Ustrsignal(int sig)$/;"	f
Ustrspn	unicode/unistring.c	/^size_t Ustrspn(const Uchar *s, const Uchar *accept)$/;"	f
Ustrstr	unicode/unistring.c	/^Uchar *Ustrstr(const Uchar *haystack, const Uchar *needle)$/;"	f
UstrtoFilename	unicode/unistring.c	/^char *UstrtoFilename(const Uchar *s)$/;"	f
UstrtoLocale	unicode/unistring.c	/^unsigned char *UstrtoLocale(const Uchar *s)$/;"	f
UstrtoUTF	unicode/unistring.c	/^int UstrtoUTF(const Uchar *s, unsigned char *t)$/;"	f
Ustrtok	unicode/unistring.c	/^Uchar *Ustrtok(Uchar *s, const Uchar *delim)$/;"	f
Ustrtol	unicode/unistring.c	/^long Ustrtol(const Uchar *s, Uchar **res, int base)$/;"	f
Usurrogate	include/unitype.h	182;"	d
Uswapb	unicode/unistring.c	/^void Uswapb(Uchar *s, size_t n)$/;"	f
Utofinal	include/unitype.h	199;"	d
Utofvalue	include/unitype.h	203;"	d
Utoinitial	include/unitype.h	197;"	d
Utoisolated	include/unitype.h	200;"	d
Utolower	include/unitype.h	192;"	d
Utomedial	include/unitype.h	198;"	d
Utomirror	include/unitype.h	215;"	d
Utonoaccent	include/unitype.h	195;"	d
Utospacing	include/unitype.h	218;"	d
Utosurrogatehigh	include/unitype.h	185;"	d
Utosurrogatelow	include/unitype.h	186;"	d
Utotitle	include/unitype.h	194;"	d
Utoupper	include/unitype.h	193;"	d
Utovalue	include/unitype.h	202;"	d
Utoxvalue	include/unitype.h	204;"	d
VARIABLE	language/parse.c	40;"	d	file:
VERSION	include/notatype.h	/^       } VERSION;$/;"	t	typeref:struct:__anon46
VERSIONBUTTON	windows/menu.c	/^              MISCBUTTON, VERSIONBUTTON, QUITBUTTON, NR_BUTTON };$/;"	e	enum:button	file:
VERSIONLIST	templates/notatype.c	/^struct VERSIONLIST {$/;"	s	file:
VERSIONLIST	templates/notatype.c	/^typedef struct VERSIONLIST VERSIONLIST;$/;"	t	typeref:struct:VERSIONLIST	file:
VERSIONTYPE	include/fileread.h	41;"	d
VERTICAL	include/scrollbar.h	17;"	d
VERTICAL_SHORT	include/scrollbar.h	19;"	d
VIEWCOM	windows/edit.c	71;"	d	file:
VISIBLE	include/output.h	14;"	d
Value	include/types.h	/^} Value;$/;"	t	typeref:struct:__anon57
VarClose	include/latexout.h	/^               SIdOpen, SIdClose, LIdOpen, LIdClose, VarOpen, VarClose,$/;"	e	enum:__anon44
VarOpen	include/latexout.h	/^               SIdOpen, SIdClose, LIdOpen, LIdClose, VarOpen, VarClose,$/;"	e	enum:__anon44
Variable	language/variable.c	/^} Variable;$/;"	t	typeref:struct:__anon4	file:
VerLine	include/mathpad.h	63;"	d
View	treeedit/marker.hh	/^enum Kind { View, Left, LeftLine, Right, Line, Tree };$/;"	e	enum:Kind
WINDOWBUTTON	windows/menu.c	/^enum button { WINDOWBUTTON, EDITOPBUTTON, STRUCTUREBUTTON, SELECTIONBUTTON,$/;"	e	enum:button	file:
WINDOWTYPE	include/sources.h	/^} WINDOWTYPE;$/;"	t	typeref:enum:__anon40
WM_DELETE_WINDOW	windows/sources.c	/^Atom WM_SAVE_YOURSELF, WM_DELETE_WINDOW;$/;"	v
WM_SAVE_YOURSELF	windows/sources.c	/^Atom WM_SAVE_YOURSELF, WM_DELETE_WINDOW;$/;"	v
WORDSEL	treeedit/select.cc	58;"	d	file:
WRAP_NOT_FOUND	windows/menu.c	667;"	d	file:
WRAP_SEARCH	windows/menu.c	666;"	d	file:
WordItem	unicode/drawstring.c	/^} WordItem;$/;"	t	typeref:struct:__anon95	file:
XLIB	documents/Makefile	/^XLIB      = $(X_LIBS)  -lSM -lICE -lX11 $/;"	m
XLIB	include/Makefile	/^XLIB      = $(X_LIBS)  -lSM -lICE -lX11 $/;"	m
XLIB	keyboard/Makefile	/^XLIB      = $(X_LIBS)  -lSM -lICE -lX11 $/;"	m
XLIB	language/Makefile	/^XLIB      = $(X_LIBS)  -lSM -lICE -lX11 $/;"	m
XLIB	markup/Makefile	/^XLIB      = $(X_LIBS)  -lSM -lICE -lX11 $/;"	m
XLIB	module/Makefile	/^XLIB      = $(X_LIBS)  -lSM -lICE -lX11 $/;"	m
XLIB	output/Makefile	/^XLIB      = $(X_LIBS)  -lSM -lICE -lX11 $/;"	m
XLIB	templates/Makefile	/^XLIB      = $(X_LIBS)  -lSM -lICE -lX11 $/;"	m
XLIB	tools/Makefile	/^XLIB      = $(X_LIBS)  -lSM -lICE -lX11 $/;"	m
XLIB	treeedit/Makefile	/^XLIB      = $(X_LIBS)  -lSM -lICE -lX11 $/;"	m
XLIB	unicode/Makefile	/^XLIB      = $(X_LIBS)  -lSM -lICE -lX11 $/;"	m
XLIB	util/Makefile	/^XLIB      = $(X_LIBS)  -lSM -lICE -lX11 $/;"	m
XLIB	windows/Makefile	/^XLIB      = $(X_LIBS)  -lSM -lICE -lX11 $/;"	m
X_CFLAGS	documents/Makefile	/^X_CFLAGS  = $/;"	m
X_CFLAGS	include/Makefile	/^X_CFLAGS  = $/;"	m
X_CFLAGS	keyboard/Makefile	/^X_CFLAGS  = $/;"	m
X_CFLAGS	language/Makefile	/^X_CFLAGS  = $/;"	m
X_CFLAGS	markup/Makefile	/^X_CFLAGS  = $/;"	m
X_CFLAGS	module/Makefile	/^X_CFLAGS  = $/;"	m
X_CFLAGS	output/Makefile	/^X_CFLAGS  = $/;"	m
X_CFLAGS	templates/Makefile	/^X_CFLAGS  = $/;"	m
X_CFLAGS	tools/Makefile	/^X_CFLAGS  = $/;"	m
X_CFLAGS	treeedit/Makefile	/^X_CFLAGS  = $/;"	m
X_CFLAGS	unicode/Makefile	/^X_CFLAGS  = $/;"	m
X_CFLAGS	util/Makefile	/^X_CFLAGS  = $/;"	m
X_CFLAGS	windows/Makefile	/^X_CFLAGS  = $/;"	m
X_LIBS	documents/Makefile	/^X_LIBS    = $/;"	m
X_LIBS	include/Makefile	/^X_LIBS    = $/;"	m
X_LIBS	keyboard/Makefile	/^X_LIBS    = $/;"	m
X_LIBS	language/Makefile	/^X_LIBS    = $/;"	m
X_LIBS	markup/Makefile	/^X_LIBS    = $/;"	m
X_LIBS	module/Makefile	/^X_LIBS    = $/;"	m
X_LIBS	output/Makefile	/^X_LIBS    = $/;"	m
X_LIBS	templates/Makefile	/^X_LIBS    = $/;"	m
X_LIBS	tools/Makefile	/^X_LIBS    = $/;"	m
X_LIBS	treeedit/Makefile	/^X_LIBS    = $/;"	m
X_LIBS	unicode/Makefile	/^X_LIBS    = $/;"	m
X_LIBS	util/Makefile	/^X_LIBS    = $/;"	m
X_LIBS	windows/Makefile	/^X_LIBS    = $/;"	m
Xor	include/mathpad.h	/^typedef enum { Normal, Reverse, Xor } TextMode;$/;"	e	enum:__anon54
Xor	module/pvsparse.c	/^typedef enum { Normal, Reverse, Xor } TextMode;$/;"	e	enum:__anon34	file:
YACC	documents/Makefile	/^YACC      = yacc$/;"	m
YACC	include/Makefile	/^YACC      = yacc$/;"	m
YACC	keyboard/Makefile	/^YACC      = yacc$/;"	m
YACC	language/Makefile	/^YACC      = yacc$/;"	m
YACC	markup/Makefile	/^YACC      = yacc$/;"	m
YACC	module/Makefile	/^YACC      = yacc$/;"	m
YACC	output/Makefile	/^YACC      = yacc$/;"	m
YACC	templates/Makefile	/^YACC      = yacc$/;"	m
YACC	tools/Makefile	/^YACC      = yacc$/;"	m
YACC	treeedit/Makefile	/^YACC      = yacc$/;"	m
YACC	unicode/Makefile	/^YACC      = yacc$/;"	m
YACC	util/Makefile	/^YACC      = yacc$/;"	m
YACC	windows/Makefile	/^YACC      = yacc$/;"	m
YYABORT	language/parse.c	651;"	d	file:
YYACCEPT	language/parse.c	650;"	d	file:
YYBACKUP	language/parse.c	659;"	d	file:
YYBISON	language/parse.c	5;"	d	file:
YYEMPTY	language/parse.c	648;"	d	file:
YYEOF	language/parse.c	649;"	d	file:
YYERRCODE	language/parse.c	672;"	d	file:
YYERROR	language/parse.c	652;"	d	file:
YYFAIL	language/parse.c	657;"	d	file:
YYFINAL	language/parse.c	180;"	d	file:
YYFLAG	language/parse.c	181;"	d	file:
YYINITDEPTH	language/parse.c	719;"	d	file:
YYISARRAY	module/pvsparselex.c	69;"	d	file:
YYLAST	language/parse.c	458;"	d	file:
YYLERR	language/parselex.c	6;"	d	file:
YYLERR	module/pvsparselex.c	7;"	d	file:
YYLEX	language/parse.c	675;"	d	file:
YYLEX	language/parse.c	681;"	d	file:
YYLEX	language/parse.c	683;"	d	file:
YYLEX	language/parse.c	687;"	d	file:
YYLEX	language/parse.c	689;"	d	file:
YYLMAX	language/parselex.c	9;"	d	file:
YYLMAX	module/pvsparselex.c	11;"	d	file:
YYMAXDEPTH	language/parse.c	726;"	d	file:
YYMAXDEPTH	language/parse.c	730;"	d	file:
YYNEWLINE	language/parselex.c	86;"	d	file:
YYNEWLINE	module/pvsparselex.c	90;"	d	file:
YYNTBASE	language/parse.c	182;"	d	file:
YYOPTIM	language/parselex.c	8;"	d	file:
YYOPTIM	module/pvsparselex.c	9;"	d	file:
YYPARSE_PARAM_ARG	language/parse.c	787;"	d	file:
YYPARSE_PARAM_ARG	language/parse.c	790;"	d	file:
YYPARSE_PARAM_ARG	language/parse.c	794;"	d	file:
YYPARSE_PARAM_DECL	language/parse.c	788;"	d	file:
YYPARSE_PARAM_DECL	language/parse.c	791;"	d	file:
YYPARSE_PARAM_DECL	language/parse.c	795;"	d	file:
YYPOPSTACK	language/parse.c	829;"	d	file:
YYRECOVERING	language/parse.c	658;"	d	file:
YYSTACK_ALLOC	language/parse.c	637;"	d	file:
YYSTACK_ALLOC	language/parse.c	639;"	d	file:
YYSTACK_USE_ALLOCA	language/parse.c	596;"	d	file:
YYSTACK_USE_ALLOCA	language/parse.c	599;"	d	file:
YYSTACK_USE_ALLOCA	language/parse.c	603;"	d	file:
YYSTACK_USE_ALLOCA	language/parse.c	620;"	d	file:
YYSTATE	language/parselex.c	7;"	d	file:
YYSTATE	module/pvsparselex.c	8;"	d	file:
YYSTYPE	language/parse.c	/^	} YYSTYPE;$/;"	t	typeref:union:__anon14	file:
YYSTYPE	module/pvsparse.c	/^typedef int YYSTYPE;$/;"	t	file:
YYTERROR	language/parse.c	671;"	d	file:
YYTRANSLATE	language/parse.c	184;"	d	file:
YYTYPE	language/parselex.c	1480;"	d	file:
YYTYPE	module/pvsparselex.c	286;"	d	file:
YYU	language/parselex.c	2068;"	d	file:
YYU	module/pvsparselex.c	445;"	d	file:
_FIFOList	util/fifolist.c	/^struct _FIFOList {$/;"	s	file:
_FLItem	util/memman.c	/^struct _FLItem { FLItem *next; };$/;"	s	file:
_FifoList	include/fifolist.h	/^struct _FifoList {$/;"	s
_G_fpos64_t	module/pvsparse.c	/^} _G_fpos64_t;$/;"	t	typeref:struct:__anon28	file:
_G_fpos_t	module/pvsparse.c	/^} _G_fpos_t;$/;"	t	typeref:struct:__anon27	file:
_G_iconv_t	module/pvsparse.c	/^} _G_iconv_t;$/;"	t	typeref:union:__anon31	file:
_G_int16_t	module/pvsparse.c	/^typedef int _G_int16_t __attribute__ ((__mode__ (__HI__)));$/;"	t	file:
_G_int32_t	module/pvsparse.c	/^typedef int _G_int32_t __attribute__ ((__mode__ (__SI__)));$/;"	t	file:
_G_uint16_t	module/pvsparse.c	/^typedef unsigned int _G_uint16_t __attribute__ ((__mode__ (__HI__)));$/;"	t	file:
_G_uint32_t	module/pvsparse.c	/^typedef unsigned int _G_uint32_t __attribute__ ((__mode__ (__SI__)));$/;"	t	file:
_IO_FILE	module/pvsparse.c	/^struct _IO_FILE {$/;"	s	file:
_IO_FILE	module/pvsparse.c	/^typedef struct _IO_FILE _IO_FILE;$/;"	t	typeref:struct:_IO_FILE	file:
_IO_backup_base	module/pvsparse.c	/^  char *_IO_backup_base;$/;"	m	struct:_IO_FILE	file:
_IO_buf_base	module/pvsparse.c	/^  char* _IO_buf_base;$/;"	m	struct:_IO_FILE	file:
_IO_buf_end	module/pvsparse.c	/^  char* _IO_buf_end;$/;"	m	struct:_IO_FILE	file:
_IO_lock_t	module/pvsparse.c	/^typedef void _IO_lock_t;$/;"	t	file:
_IO_marker	module/pvsparse.c	/^struct _IO_marker {$/;"	s	file:
_IO_read_base	module/pvsparse.c	/^  char* _IO_read_base;$/;"	m	struct:_IO_FILE	file:
_IO_read_end	module/pvsparse.c	/^  char* _IO_read_end;$/;"	m	struct:_IO_FILE	file:
_IO_read_ptr	module/pvsparse.c	/^  char* _IO_read_ptr;$/;"	m	struct:_IO_FILE	file:
_IO_save_base	module/pvsparse.c	/^  char *_IO_save_base;$/;"	m	struct:_IO_FILE	file:
_IO_save_end	module/pvsparse.c	/^  char *_IO_save_end;$/;"	m	struct:_IO_FILE	file:
_IO_write_base	module/pvsparse.c	/^  char* _IO_write_base;$/;"	m	struct:_IO_FILE	file:
_IO_write_end	module/pvsparse.c	/^  char* _IO_write_end;$/;"	m	struct:_IO_FILE	file:
_IO_write_ptr	module/pvsparse.c	/^  char* _IO_write_ptr;$/;"	m	struct:_IO_FILE	file:
_ObjectList	util/fifolist.c	/^struct _ObjectList {$/;"	s	file:
_PaybackFunc	util/memman.c	/^struct _PaybackFunc {$/;"	s	file:
__FILE	module/pvsparse.c	/^typedef struct _IO_FILE __FILE;$/;"	t	typeref:struct:_IO_FILE	file:
__GCONV_EMPTY_INPUT	module/pvsparse.c	/^  __GCONV_EMPTY_INPUT,$/;"	e	enum:__anon29	file:
__GCONV_FULL_OUTPUT	module/pvsparse.c	/^  __GCONV_FULL_OUTPUT,$/;"	e	enum:__anon29	file:
__GCONV_IGNORE_ERRORS	module/pvsparse.c	/^  __GCONV_IGNORE_ERRORS = 0x0002$/;"	e	enum:__anon30	file:
__GCONV_ILLEGAL_DESCRIPTOR	module/pvsparse.c	/^  __GCONV_ILLEGAL_DESCRIPTOR,$/;"	e	enum:__anon29	file:
__GCONV_ILLEGAL_INPUT	module/pvsparse.c	/^  __GCONV_ILLEGAL_INPUT,$/;"	e	enum:__anon29	file:
__GCONV_INCOMPLETE_INPUT	module/pvsparse.c	/^  __GCONV_INCOMPLETE_INPUT,$/;"	e	enum:__anon29	file:
__GCONV_INTERNAL_ERROR	module/pvsparse.c	/^  __GCONV_INTERNAL_ERROR$/;"	e	enum:__anon29	file:
__GCONV_IS_LAST	module/pvsparse.c	/^  __GCONV_IS_LAST = 0x0001,$/;"	e	enum:__anon30	file:
__GCONV_NOCONV	module/pvsparse.c	/^  __GCONV_NOCONV,$/;"	e	enum:__anon29	file:
__GCONV_NODB	module/pvsparse.c	/^  __GCONV_NODB,$/;"	e	enum:__anon29	file:
__GCONV_NOMEM	module/pvsparse.c	/^  __GCONV_NOMEM,$/;"	e	enum:__anon29	file:
__GCONV_OK	module/pvsparse.c	/^  __GCONV_OK = 0,$/;"	e	enum:__anon29	file:
__a	module/pvsparse.c	/^    unsigned long long int __a;$/;"	m	struct:drand48_data	file:
__align	module/pvsparse.c	/^  __pthread_cond_align_t __align;$/;"	m	struct:__anon21	file:
__blkcnt64_t	module/pvsparse.c	/^__extension__ typedef __quad_t __blkcnt64_t;$/;"	t	file:
__blkcnt_t	module/pvsparse.c	/^__extension__ typedef long int __blkcnt_t;$/;"	t	file:
__blksize_t	module/pvsparse.c	/^__extension__ typedef long int __blksize_t;$/;"	t	file:
__btowc_fct	module/pvsparse.c	/^  __gconv_btowc_fct __btowc_fct;$/;"	m	struct:__gconv_step	file:
__c	module/pvsparse.c	/^    unsigned short int __c;$/;"	m	struct:drand48_data	file:
__c_lock	module/pvsparse.c	/^  struct _pthread_fastlock __c_lock;$/;"	m	struct:__anon21	typeref:struct:__anon21::_pthread_fastlock	file:
__c_waiting	module/pvsparse.c	/^  _pthread_descr __c_waiting;$/;"	m	struct:__anon21	file:
__caddr_t	module/pvsparse.c	/^typedef char *__caddr_t;$/;"	t	file:
__cd	module/pvsparse.c	/^    struct __gconv_info __cd;$/;"	m	struct:__anon31::__anon32	typeref:struct:__anon31::__anon32::__gconv_info	file:
__cd	module/pvsparse.c	/^  struct __gconv_info __cd;$/;"	m	union:__anon31	typeref:struct:__anon31::__gconv_info	file:
__clock_t	module/pvsparse.c	/^__extension__ typedef long int __clock_t;$/;"	t	file:
__clockid_t	module/pvsparse.c	/^__extension__ typedef int __clockid_t;$/;"	t	file:
__codecvt_error	module/pvsparse.c	/^  __codecvt_error,$/;"	e	enum:__codecvt_result	file:
__codecvt_noconv	module/pvsparse.c	/^  __codecvt_noconv$/;"	e	enum:__codecvt_result	file:
__codecvt_ok	module/pvsparse.c	/^  __codecvt_ok,$/;"	e	enum:__codecvt_result	file:
__codecvt_partial	module/pvsparse.c	/^  __codecvt_partial,$/;"	e	enum:__codecvt_result	file:
__codecvt_result	module/pvsparse.c	/^enum __codecvt_result$/;"	g	file:
__combined	module/pvsparse.c	/^  } __combined;$/;"	m	union:__anon31	typeref:struct:__anon31::__anon32	file:
__compar_fn_t	module/pvsparse.c	/^typedef int (*__compar_fn_t) (__const void *, __const void *);$/;"	t	file:
__count	module/pvsparse.c	/^  int __count;$/;"	m	struct:__anon25	file:
__counter	module/pvsparse.c	/^  int __counter;$/;"	m	struct:__gconv_step	file:
__daddr_t	module/pvsparse.c	/^__extension__ typedef int __daddr_t;$/;"	t	file:
__data	module/pvsparse.c	/^    struct __gconv_step_data __data;$/;"	m	struct:__anon31::__anon32	typeref:struct:__anon31::__anon32::__gconv_step_data	file:
__data	module/pvsparse.c	/^  __extension__ struct __gconv_step_data __data [];$/;"	m	struct:__gconv_info	typeref:struct:__gconv_info::__gconv_step_data	file:
__data	module/pvsparse.c	/^  void *__data;$/;"	m	struct:__gconv_step	file:
__data	module/pvsparse.c	/^  void *__data;$/;"	m	struct:__gconv_trans_data	file:
__detachstate	module/pvsparse.c	/^  int __detachstate;$/;"	m	struct:__pthread_attr_s	file:
__dev_t	module/pvsparse.c	/^__extension__ typedef __u_quad_t __dev_t;$/;"	t	file:
__dummy	module/pvsparse.c	/^  int __dummy;$/;"	m	struct:__anon22	file:
__end_fct	module/pvsparse.c	/^  __gconv_end_fct __end_fct;$/;"	m	struct:__gconv_step	file:
__fct	module/pvsparse.c	/^  __gconv_fct __fct;$/;"	m	struct:__gconv_step	file:
__fd_mask	module/pvsparse.c	/^typedef long int __fd_mask;$/;"	t	file:
__fds_bits	module/pvsparse.c	/^    __fd_mask __fds_bits[1024 \/ (8 * sizeof (__fd_mask))];$/;"	m	struct:__anon20	file:
__flags	module/pvsparse.c	/^  int __flags;$/;"	m	struct:__gconv_step_data	file:
__from_name	module/pvsparse.c	/^  char *__from_name;$/;"	m	struct:__gconv_step	file:
__fsblkcnt64_t	module/pvsparse.c	/^__extension__ typedef __u_quad_t __fsblkcnt64_t;$/;"	t	file:
__fsblkcnt_t	module/pvsparse.c	/^__extension__ typedef unsigned long int __fsblkcnt_t;$/;"	t	file:
__fsfilcnt64_t	module/pvsparse.c	/^__extension__ typedef __u_quad_t __fsfilcnt64_t;$/;"	t	file:
__fsfilcnt_t	module/pvsparse.c	/^__extension__ typedef unsigned long int __fsfilcnt_t;$/;"	t	file:
__fsid_t	module/pvsparse.c	/^__extension__ typedef struct { int __val[2]; } __fsid_t;$/;"	t	typeref:struct:__anon18	file:
__gconv_btowc_fct	module/pvsparse.c	/^typedef wint_t (*__gconv_btowc_fct) (struct __gconv_step *, unsigned char);$/;"	t	file:
__gconv_end_fct	module/pvsparse.c	/^typedef void (*__gconv_end_fct) (struct __gconv_step *);$/;"	t	file:
__gconv_fct	module/pvsparse.c	/^typedef int (*__gconv_fct) (struct __gconv_step *, struct __gconv_step_data *,$/;"	t	file:
__gconv_info	module/pvsparse.c	/^typedef struct __gconv_info$/;"	s	file:
__gconv_init_fct	module/pvsparse.c	/^typedef int (*__gconv_init_fct) (struct __gconv_step *);$/;"	t	file:
__gconv_step	module/pvsparse.c	/^struct __gconv_step$/;"	s	file:
__gconv_step_data	module/pvsparse.c	/^struct __gconv_step_data$/;"	s	file:
__gconv_t	module/pvsparse.c	/^} *__gconv_t;$/;"	t	typeref:struct:__gconv_info	file:
__gconv_trans_context_fct	module/pvsparse.c	/^typedef int (*__gconv_trans_context_fct) (void *, __const unsigned char *,$/;"	t	file:
__gconv_trans_data	module/pvsparse.c	/^struct __gconv_trans_data$/;"	s	file:
__gconv_trans_end_fct	module/pvsparse.c	/^typedef void (*__gconv_trans_end_fct) (void *);$/;"	t	file:
__gconv_trans_fct	module/pvsparse.c	/^typedef int (*__gconv_trans_fct) (struct __gconv_step *,$/;"	t	file:
__gconv_trans_init_fct	module/pvsparse.c	/^typedef int (*__gconv_trans_init_fct) (void **, const char *);$/;"	t	file:
__gconv_trans_query_fct	module/pvsparse.c	/^typedef int (*__gconv_trans_query_fct) (__const char *, __const char ***,$/;"	t	file:
__gid_t	module/pvsparse.c	/^__extension__ typedef unsigned int __gid_t;$/;"	t	file:
__gnuc_va_list	module/pvsparse.c	/^typedef __builtin_va_list __gnuc_va_list;$/;"	t	file:
__guardsize	module/pvsparse.c	/^  size_t __guardsize;$/;"	m	struct:__pthread_attr_s	file:
__id_t	module/pvsparse.c	/^__extension__ typedef unsigned int __id_t;$/;"	t	file:
__inheritsched	module/pvsparse.c	/^  int __inheritsched;$/;"	m	struct:__pthread_attr_s	file:
__init	module/pvsparse.c	/^    unsigned short int __init;$/;"	m	struct:drand48_data	file:
__init_fct	module/pvsparse.c	/^  __gconv_init_fct __init_fct;$/;"	m	struct:__gconv_step	file:
__ino64_t	module/pvsparse.c	/^__extension__ typedef __u_quad_t __ino64_t;$/;"	t	file:
__ino_t	module/pvsparse.c	/^__extension__ typedef unsigned long int __ino_t;$/;"	t	file:
__int16_t	module/pvsparse.c	/^typedef signed short int __int16_t;$/;"	t	file:
__int32_t	module/pvsparse.c	/^typedef signed int __int32_t;$/;"	t	file:
__int64_t	module/pvsparse.c	/^__extension__ typedef signed long long int __int64_t;$/;"	t	file:
__int8_t	module/pvsparse.c	/^typedef signed char __int8_t;$/;"	t	file:
__internal_use	module/pvsparse.c	/^  int __internal_use;$/;"	m	struct:__gconv_step_data	file:
__intptr_t	module/pvsparse.c	/^__extension__ typedef int __intptr_t;$/;"	t	file:
__invocation_counter	module/pvsparse.c	/^  int __invocation_counter;$/;"	m	struct:__gconv_step_data	file:
__io_close_fn	module/pvsparse.c	/^typedef int __io_close_fn (void *__cookie);$/;"	t	file:
__io_read_fn	module/pvsparse.c	/^typedef __ssize_t __io_read_fn (void *__cookie, char *__buf, size_t __nbytes);$/;"	t	file:
__io_seek_fn	module/pvsparse.c	/^typedef int __io_seek_fn (void *__cookie, __off64_t *__pos, int __w);$/;"	t	file:
__io_write_fn	module/pvsparse.c	/^typedef __ssize_t __io_write_fn (void *__cookie, __const char *__buf,$/;"	t	file:
__key_t	module/pvsparse.c	/^__extension__ typedef int __key_t;$/;"	t	file:
__loff_t	module/pvsparse.c	/^typedef __off64_t __loff_t;$/;"	t	file:
__m_count	module/pvsparse.c	/^  int __m_count;$/;"	m	struct:__anon23	file:
__m_kind	module/pvsparse.c	/^  int __m_kind;$/;"	m	struct:__anon23	file:
__m_lock	module/pvsparse.c	/^  struct _pthread_fastlock __m_lock;$/;"	m	struct:__anon23	typeref:struct:__anon23::_pthread_fastlock	file:
__m_owner	module/pvsparse.c	/^  _pthread_descr __m_owner;$/;"	m	struct:__anon23	file:
__m_reserved	module/pvsparse.c	/^  int __m_reserved;$/;"	m	struct:__anon23	file:
__max_needed_from	module/pvsparse.c	/^  int __max_needed_from;$/;"	m	struct:__gconv_step	file:
__max_needed_to	module/pvsparse.c	/^  int __max_needed_to;$/;"	m	struct:__gconv_step	file:
__mbstate_t	module/pvsparse.c	/^} __mbstate_t;$/;"	t	typeref:struct:__anon25	file:
__min_needed_from	module/pvsparse.c	/^  int __min_needed_from;$/;"	m	struct:__gconv_step	file:
__min_needed_to	module/pvsparse.c	/^  int __min_needed_to;$/;"	m	struct:__gconv_step	file:
__mode_t	module/pvsparse.c	/^__extension__ typedef unsigned int __mode_t;$/;"	t	file:
__modname	module/pvsparse.c	/^  __const char *__modname;$/;"	m	struct:__gconv_step	file:
__mutexkind	module/pvsparse.c	/^  int __mutexkind;$/;"	m	struct:__anon24	file:
__next	module/pvsparse.c	/^  struct __gconv_trans_data *__next;$/;"	m	struct:__gconv_trans_data	typeref:struct:__gconv_trans_data::__gconv_trans_data	file:
__nlink_t	module/pvsparse.c	/^__extension__ typedef unsigned int __nlink_t;$/;"	t	file:
__nsteps	module/pvsparse.c	/^  size_t __nsteps;$/;"	m	struct:__gconv_info	file:
__off64_t	module/pvsparse.c	/^__extension__ typedef __quad_t __off64_t;$/;"	t	file:
__off_t	module/pvsparse.c	/^__extension__ typedef long int __off_t;$/;"	t	file:
__old_x	module/pvsparse.c	/^    unsigned short int __old_x[3];$/;"	m	struct:drand48_data	file:
__outbuf	module/pvsparse.c	/^  unsigned char *__outbuf;$/;"	m	struct:__gconv_step_data	file:
__outbufend	module/pvsparse.c	/^  unsigned char *__outbufend;$/;"	m	struct:__gconv_step_data	file:
__pad1	module/pvsparse.c	/^  void *__pad1;$/;"	m	struct:_IO_FILE	file:
__pad2	module/pvsparse.c	/^  void *__pad2;$/;"	m	struct:_IO_FILE	file:
__padding	module/pvsparse.c	/^  char __padding[48 - sizeof (struct _pthread_fastlock)$/;"	m	struct:__anon21	file:
__pid_t	module/pvsparse.c	/^__extension__ typedef int __pid_t;$/;"	t	file:
__pos	module/pvsparse.c	/^  __off64_t __pos;$/;"	m	struct:__anon28	file:
__pos	module/pvsparse.c	/^  __off_t __pos;$/;"	m	struct:__anon27	file:
__pthread_attr_s	module/pvsparse.c	/^typedef struct __pthread_attr_s$/;"	s	file:
__pthread_cond_align_t	module/pvsparse.c	/^__extension__ typedef long long __pthread_cond_align_t;$/;"	t	file:
__qaddr_t	module/pvsparse.c	/^typedef __quad_t *__qaddr_t;$/;"	t	file:
__quad_t	module/pvsparse.c	/^__extension__ typedef long long int __quad_t;$/;"	t	file:
__rlim64_t	module/pvsparse.c	/^__extension__ typedef __u_quad_t __rlim64_t;$/;"	t	file:
__rlim_t	module/pvsparse.c	/^__extension__ typedef unsigned long int __rlim_t;$/;"	t	file:
__sched_param	module/pvsparse.c	/^struct __sched_param$/;"	s	file:
__sched_priority	module/pvsparse.c	/^    int __sched_priority;$/;"	m	struct:__sched_param	file:
__schedparam	module/pvsparse.c	/^  struct __sched_param __schedparam;$/;"	m	struct:__pthread_attr_s	typeref:struct:__pthread_attr_s::__sched_param	file:
__schedpolicy	module/pvsparse.c	/^  int __schedpolicy;$/;"	m	struct:__pthread_attr_s	file:
__scope	module/pvsparse.c	/^  int __scope;$/;"	m	struct:__pthread_attr_s	file:
__shlib_handle	module/pvsparse.c	/^  struct __gconv_loaded_object *__shlib_handle;$/;"	m	struct:__gconv_step	typeref:struct:__gconv_step::__gconv_loaded_object	file:
__sig_atomic_t	module/pvsparse.c	/^typedef int __sig_atomic_t;$/;"	t	file:
__sigset_t	module/pvsparse.c	/^  } __sigset_t;$/;"	t	typeref:struct:__anon19	file:
__socklen_t	module/pvsparse.c	/^__extension__ typedef unsigned int __socklen_t;$/;"	t	file:
__spinlock	module/pvsparse.c	/^  int __spinlock;$/;"	m	struct:_pthread_fastlock	file:
__ssize_t	module/pvsparse.c	/^__extension__ typedef int __ssize_t;$/;"	t	file:
__stackaddr	module/pvsparse.c	/^  void *__stackaddr;$/;"	m	struct:__pthread_attr_s	file:
__stackaddr_set	module/pvsparse.c	/^  int __stackaddr_set;$/;"	m	struct:__pthread_attr_s	file:
__stacksize	module/pvsparse.c	/^  size_t __stacksize;$/;"	m	struct:__pthread_attr_s	file:
__state	module/pvsparse.c	/^  __mbstate_t __state;$/;"	m	struct:__anon27	file:
__state	module/pvsparse.c	/^  __mbstate_t __state;$/;"	m	struct:__anon28	file:
__state	module/pvsparse.c	/^  __mbstate_t __state;$/;"	m	struct:__gconv_step_data	file:
__stateful	module/pvsparse.c	/^  int __stateful;$/;"	m	struct:__gconv_step	file:
__statep	module/pvsparse.c	/^  __mbstate_t *__statep;$/;"	m	struct:__gconv_step_data	file:
__status	module/pvsparse.c	/^  long int __status;$/;"	m	struct:_pthread_fastlock	file:
__steps	module/pvsparse.c	/^  struct __gconv_step *__steps;$/;"	m	struct:__gconv_info	typeref:struct:__gconv_info::__gconv_step	file:
__suseconds_t	module/pvsparse.c	/^__extension__ typedef long int __suseconds_t;$/;"	t	file:
__swblk_t	module/pvsparse.c	/^__extension__ typedef long int __swblk_t;$/;"	t	file:
__time_t	module/pvsparse.c	/^__extension__ typedef long int __time_t;$/;"	t	file:
__timer_t	module/pvsparse.c	/^__extension__ typedef int __timer_t;$/;"	t	file:
__to_name	module/pvsparse.c	/^  char *__to_name;$/;"	m	struct:__gconv_step	file:
__trans	module/pvsparse.c	/^  struct __gconv_trans_data *__trans;$/;"	m	struct:__gconv_step_data	typeref:struct:__gconv_step_data::__gconv_trans_data	file:
__trans_context_fct	module/pvsparse.c	/^  __gconv_trans_context_fct __trans_context_fct;$/;"	m	struct:__gconv_trans_data	file:
__trans_end_fct	module/pvsparse.c	/^  __gconv_trans_end_fct __trans_end_fct;$/;"	m	struct:__gconv_trans_data	file:
__trans_fct	module/pvsparse.c	/^  __gconv_trans_fct __trans_fct;$/;"	m	struct:__gconv_trans_data	file:
__u_char	module/pvsparse.c	/^typedef unsigned char __u_char;$/;"	t	file:
__u_int	module/pvsparse.c	/^typedef unsigned int __u_int;$/;"	t	file:
__u_long	module/pvsparse.c	/^typedef unsigned long int __u_long;$/;"	t	file:
__u_quad_t	module/pvsparse.c	/^__extension__ typedef unsigned long long int __u_quad_t;$/;"	t	file:
__u_short	module/pvsparse.c	/^typedef unsigned short int __u_short;$/;"	t	file:
__uid_t	module/pvsparse.c	/^__extension__ typedef unsigned int __uid_t;$/;"	t	file:
__uint16_t	module/pvsparse.c	/^typedef unsigned short int __uint16_t;$/;"	t	file:
__uint32_t	module/pvsparse.c	/^typedef unsigned int __uint32_t;$/;"	t	file:
__uint64_t	module/pvsparse.c	/^__extension__ typedef unsigned long long int __uint64_t;$/;"	t	file:
__uint8_t	module/pvsparse.c	/^typedef unsigned char __uint8_t;$/;"	t	file:
__useconds_t	module/pvsparse.c	/^__extension__ typedef unsigned int __useconds_t;$/;"	t	file:
__val	module/pvsparse.c	/^    unsigned long int __val[(1024 \/ (8 * sizeof (unsigned long int)))];$/;"	m	struct:__anon19	file:
__val	module/pvsparse.c	/^__extension__ typedef struct { int __val[2]; } __fsid_t;$/;"	m	struct:__anon18	file:
__value	module/pvsparse.c	/^  } __value;$/;"	m	struct:__anon25	typeref:union:__anon25::__anon26	file:
__wch	module/pvsparse.c	/^    wint_t __wch;$/;"	m	union:__anon25::__anon26	file:
__wchb	module/pvsparse.c	/^    char __wchb[4];$/;"	m	union:__anon25::__anon26	file:
__x	module/pvsparse.c	/^    unsigned short int __x[3];$/;"	m	struct:drand48_data	file:
__yy_memcpy	language/parse.c	/^__yy_memcpy (char *to, char *from, unsigned int count)$/;"	f	file:
__yy_memcpy	language/parse.c	/^__yy_memcpy (to, from, count)$/;"	f	file:
__yy_memcpy	language/parse.c	739;"	d	file:
_attribs	include/markup.h	/^typedef struct _attribs {$/;"	s
_chain	module/pvsparse.c	/^  struct _IO_FILE *_chain;$/;"	m	struct:_IO_FILE	typeref:struct:_IO_FILE::_IO_FILE	file:
_cur_column	module/pvsparse.c	/^  unsigned short _cur_column;$/;"	m	struct:_IO_FILE	file:
_display_pos	treeedit/node.hh	/^    Offset _display_pos; \/\/ user added change to display indentation$/;"	m	class:Node
_fileno	module/pvsparse.c	/^  int _fileno;$/;"	m	struct:_IO_FILE	file:
_findnr	treeedit/node.hh	/^    Char _findnr;   \/\/ Number of the empty placeholder in a find\/replace.$/;"	m	class:Node
_first	treeedit/node.hh	/^    Node* _first;    \/\/ Same first of the sons.$/;"	m	class:Node
_flags	module/pvsparse.c	/^  int _flags;$/;"	m	struct:_IO_FILE	file:
_flags2	module/pvsparse.c	/^  int _flags2;$/;"	m	struct:_IO_FILE	file:
_kind	treeedit/marker.hh	/^    Kind _kind;$/;"	m	class:Marker
_kind	treeedit/node.hh	/^    Char _kind;     \/\/ Kind of node: placeholder + number.$/;"	m	class:Node
_last	treeedit/node.hh	/^    Node* _last;     \/\/ Same last of the sons.$/;"	m	class:Node
_left	treeedit/node.hh	/^    Node* _left;     \/\/ Pointer to left brother.$/;"	m	class:Node
_lines	treeedit/node.hh	/^    Index _lines;   \/\/ Number of lines in a node.$/;"	m	class:Node
_lock	module/pvsparse.c	/^  _IO_lock_t *_lock;$/;"	m	struct:_IO_FILE	file:
_markers	module/pvsparse.c	/^  struct _IO_marker *_markers;$/;"	m	struct:_IO_FILE	typeref:struct:_IO_FILE::_IO_marker	file:
_mode	module/pvsparse.c	/^  int _mode;$/;"	m	struct:_IO_FILE	file:
_next	module/pvsparse.c	/^  struct _IO_marker *_next;$/;"	m	struct:_IO_marker	typeref:struct:_IO_marker::_IO_marker	file:
_next	treeedit/marker.hh	/^    Marker* _next;$/;"	m	class:Marker
_offset	module/pvsparse.c	/^  __off64_t _offset;$/;"	m	struct:_IO_FILE	file:
_old_offset	module/pvsparse.c	/^  __off_t _old_offset;$/;"	m	struct:_IO_FILE	file:
_opdelta	treeedit/node.hh	/^    Offset _opdelta; \/\/ user added modification to _opspace.$/;"	m	class:Node
_parens	treeedit/node.hh	/^    Bool _parens;   \/\/ If Ph(_kind)==MP_Expr: parentheses?$/;"	m	class:Node
_pos	module/pvsparse.c	/^  int _pos;$/;"	m	struct:_IO_marker	file:
_pthread_descr	module/pvsparse.c	/^typedef struct _pthread_descr_struct *_pthread_descr;$/;"	t	typeref:struct:_pthread_descr_struct	file:
_pthread_fastlock	module/pvsparse.c	/^struct _pthread_fastlock$/;"	s	file:
_right	treeedit/node.hh	/^    Node* _right;    \/\/ Same right.$/;"	m	class:Node
_sbuf	module/pvsparse.c	/^  struct _IO_FILE *_sbuf;$/;"	m	struct:_IO_marker	typeref:struct:_IO_marker::_IO_FILE	file:
_shortbuf	module/pvsparse.c	/^  char _shortbuf[1];$/;"	m	struct:_IO_FILE	file:
_unused2	module/pvsparse.c	/^  char _unused2[15 * sizeof (int) - 2 * sizeof (void *)];$/;"	m	struct:_IO_FILE	file:
_vtable_offset	module/pvsparse.c	/^  signed char _vtable_offset;$/;"	m	struct:_IO_FILE	file:
above	treeedit/node.cc	/^const Mark& Node::above()$/;"	f	class:Node
accentline	unicode/drawstring.c	/^} accentline[MAXOFFSET];$/;"	v	typeref:struct:__anon96	file:
accentpos	unicode/drawstring.c	/^static int accentpos=0;              \/* position in accentstring to use *\/$/;"	v	file:
accents	unicode/brows.c	/^static int accents=0;$/;"	v	file:
accentstring	unicode/drawstring.c	/^static FontChar accentstring[MAXACCENT]; \/* contains the actual accents *\/$/;"	v	file:
acgc	unicode/brows.c	/^static GC acgc;$/;"	v	file:
active_target_cursor	windows/output.c	/^static Bool active_target_cursor = MP_False;$/;"	v	file:
add	util/fstate.c	57;"	d	file:
add_12bit_conv	unicode/uniconv.c	/^static void add_12bit_conv(Uchar *name, void *dataenc, void *datadec)$/;"	f	file:
add_16bit_conv	unicode/uniconv.c	/^static void add_16bit_conv(Uchar *name, void *dataenc, void *datadec)$/;"	f	file:
add_8bit_conv	unicode/uniconv.c	/^static void add_8bit_conv(Uchar *name, void *dataenc, void *datadec)$/;"	f	file:
add_accent	unicode/drawstring.c	/^static void add_accent(int voffset, Font fontnr, Uchar cpos,$/;"	f	file:
add_alias	unicode/unifont.c	/^static char *add_alias(char *name, int aliastype, void *data)$/;"	f	file:
add_alias	unicode/virtread.c	/^static char *add_alias(char *name, int aliastype, void *data)$/;"	f	file:
add_breanchnode	language/leaftree.c	/^static BreanchNode *add_breanchnode(BreanchNode *lt, BreanchNode *ltadd)$/;"	f	file:
add_breanchnode	util/leaftree.c	/^static BreanchNode *add_breanchnode(BreanchNode *lt, BreanchNode *ltadd)$/;"	f	file:
add_buf	documents/fileread.c	/^static int add_buf(READSTACK *rst, Char n)$/;"	f	file:
add_buf_string	documents/fileread.c	/^static int add_buf_string(READSTACK *rst, Char *c, int len)$/;"	f	file:
add_builtin_conv	unicode/uniconv.c	/^static void add_builtin_conv(void)$/;"	f	file:
add_char	windows/menu.c	/^static void add_char(int code, Index count)$/;"	f	file:
add_dist	tools/pktobdf.c	/^static void add_dist(dist,size,nr)$/;"	f	file:
add_file_ref	templates/notatype.c	/^void add_file_ref(int fnr)$/;"	f
add_file_to_parser	module/parsertemp.c	/^void add_file_to_parser(Char *name)$/;"	f
add_font_range	unicode/unifont.c	/^static int add_font_range(int fontnr, int attribpos, MapUchar encoding,$/;"	f	file:
add_format_to_parser	module/parsertemp.c	/^static void add_format_to_parser(Char *c, int len, int ivnr, Char mode,$/;"	f	file:
add_freelist	util/memman.c	/^static void add_freelist(FreeList *fl)$/;"	f	file:
add_item	windows/popup.c	/^void add_item(MENU *menu, Char *string, void (*func)(void*,int),$/;"	f
add_markup_handler	markup/markup.c	/^int add_markup_handler(MarkupGroup mg, HandleFunc print, HandleFunc handle)$/;"	f
add_nota	templates/notatype.c	/^static int add_nota(int fnr, int onr, NOTATION *nota)$/;"	f	file:
add_notation	templates/notatype.c	/^int add_notation(int oldnr, NOTATION *nota)$/;"	f
add_notation_ref	templates/notatype.c	/^static void add_notation_ref(int nnr)$/;"	f	file:
add_parse_stack	treeedit/editor.cc	/^void *add_parse_stack(Char *txt, int len)$/;"	f
add_replace_char	windows/menu.c	/^static void add_replace_char(Char c, Index count)$/;"	f	file:
add_result_type	language/prototype.c	/^int add_result_type(Prototype *prototype, const Type type)$/;"	f
add_return	windows/menu.c	/^static void add_return(void)$/;"	f	file:
add_search_char	windows/menu.c	/^static void add_search_char(Char c, Index count)$/;"	f	file:
add_search_notation	windows/menu.c	/^static void add_search_notation(void)$/;"	f	file:
add_space_boxes	windows/output.c	/^static void add_space_boxes(BOX *b, int width)$/;"	f	file:
add_string	output/latexout.c	/^static void add_string(char *str)$/;"	f	file:
add_suffix	tools/pktobdf.c	/^static void add_suffix(name, suffix)$/;"	f	file:
add_surrogate_handler	markup/markup.c	/^int add_surrogate_handler(Uchar highvalue, HandleFunc print,$/;"	f
add_sym	windows/menu.c	/^static void add_sym(void)$/;"	f	file:
add_tab	windows/menu.c	/^static void add_tab(Index count)$/;"	f	file:
add_template_to_parser	module/parsertemp.c	/^void add_template_to_parser(NOTATION *nota)$/;"	f
add_type	language/prototype.c	/^int add_type(Prototype *p, const Type type)$/;"	f
add_version	templates/notatype.c	/^void  add_version(VERSION **list, int place, int *max)$/;"	f
add_version_to_parser	module/parsertemp.c	/^static void add_version_to_parser(VERSION *vers, int pmode, int prec)$/;"	f	file:
add_window	windows/sources.c	/^int add_window(Window win, WINDOWTYPE wtype, Window pwin, void *wdata,$/;"	f
addstylename	tools/pktobdf.c	/^char *addstylename="";$/;"	v
adjust_firstpix	windows/getstring.c	/^static Bool adjust_firstpix(STRINGINFO *sinfo)$/;"	f	file:
adjust_lineheight	windows/output.c	/^void adjust_lineheight(void)$/;"	f
adjust_mark	treeedit/editwindow.cc	/^Mark EditWindow::adjust_mark(const Mark& init, Bool left)$/;"	f	class:EditWindow
adjust_scrollbar	treeedit/editwindow.cc	/^void EditWindow::adjust_scrollbar(void)$/;"	f	class:EditWindow
adjust_scrollbar	windows/notadef.c	/^static void adjust_scrollbar(void)$/;"	f	file:
advance	language/parselex.c	/^struct yywork { YYTYPE verify, advance; } yycrank[] = {$/;"	m	struct:yywork	file:
advance	module/pvsparse.c	/^struct pvs_yywork { unsigned char verify, advance; } pvs_yycrank[] = {$/;"	m	struct:pvs_yywork	file:
advance	module/pvsparselex.c	/^struct yywork { YYTYPE verify, advance; } yycrank[] = {$/;"	m	struct:yywork	file:
after_macro	output/latexout.c	/^static Bool in_math, in_tabbing, tex_plhl, after_slash, after_macro,$/;"	v	file:
after_newline	module/pvs.c	/^static int after_newline=0;$/;"	v	file:
after_node	windows/output.c	/^static int after_node=MP_False;$/;"	v	file:
after_slash	output/latexout.c	/^static Bool in_math, in_tabbing, tex_plhl, after_slash, after_macro,$/;"	v	file:
afterlen	keyboard/keyboard.c	/^static int afterlen=0;$/;"	v	file:
afterlist	keyboard/keyboard.c	/^static void *afterlist[600];$/;"	v	file:
afternotation	windows/notadef.c	/^static int editnotation=-1, afternotation=-1;$/;"	v	file:
aig	include/mathpad.h	157;"	d
al1	include/leaftree.h	/^typedef union { double al1; long al2; void *al3; int al4; } DummyAlign;$/;"	m	union:__anon45
al1	unicode/unimap.c	/^    long al1;$/;"	m	union:__anon93	file:
al2	include/leaftree.h	/^typedef union { double al1; long al2; void *al3; int al4; } DummyAlign;$/;"	m	union:__anon45
al2	unicode/unimap.c	/^    void *al2;$/;"	m	union:__anon93	file:
al3	include/leaftree.h	/^typedef union { double al1; long al2; void *al3; int al4; } DummyAlign;$/;"	m	union:__anon45
al3	unicode/unimap.c	/^    int al3;$/;"	m	union:__anon93	file:
al4	include/leaftree.h	/^typedef union { double al1; long al2; void *al3; int al4; } DummyAlign;$/;"	m	union:__anon45
alarm_handle	tools/xpipein.c	/^static void alarm_handle(int sig __attribute__((unused)))$/;"	f	file:
alarm_needed	tools/xpipein.c	/^int alarm_needed=NOINPUTTIME;$/;"	v
alarm_needed	tools/xpipeout.c	/^int alarm_needed=NOOUTPUTTIME;$/;"	v
alarm_set	windows/sources.c	/^static Bool alarm_set = MP_False;$/;"	v	file:
alarm_went_off	windows/sources.c	/^static Bool alarm_went_off = MP_False;$/;"	v	file:
alarm_works	windows/sources.c	/^static Bool alarm_works = MP_True;$/;"	v	file:
aliasdata	unicode/unifont.c	/^    void *aliasdata;$/;"	m	struct:ALIASREC	file:
aliasdata	unicode/virtread.c	/^    void *aliasdata;$/;"	m	struct:ALIASREC	file:
aliaslist	unicode/unifont.c	/^static ALIASREC *aliaslist=NULL;$/;"	v	file:
aliaslist	unicode/virtread.c	/^static ALIASREC *aliaslist=NULL;$/;"	v	file:
aliastype	unicode/unifont.c	/^    int aliastype;$/;"	m	struct:ALIASREC	file:
aliastype	unicode/virtread.c	/^    int aliastype;$/;"	m	struct:ALIASREC	file:
all_iconized	windows/events.c	/^static Bool all_iconized(void)$/;"	f	file:
all_parens	treeedit/node.cc	/^Bool all_parens=MP_False;$/;"	v
allchars	unicode/unifont.c	/^static MapInt *allchars=0;$/;"	v	file:
allcharsize	unicode/unifont.c	/^static int allcharsize=0;$/;"	v	file:
allkeymaps	keyboard/keyboard.c	/^static KeyMapList *allkeymaps=0;$/;"	v	file:
alllist	util/memman.c	/^static FreeList *alllist[MAXFREELIST];$/;"	v	file:
allnotas	templates/notatype.c	/^static FlexArray allnotas;$/;"	v	file:
alloca	language/parse.c	600;"	d	file:
allocsize	tools/xpipein.c	/^int allocsize=1000;$/;"	v
allow_zips	util/filefind.c	/^void allow_zips(int yes)$/;"	f
allvars	language/variable.c	/^static LeafTree allvars = { 0, var_cmp, var_free, sizeof(Variable) };$/;"	v	file:
alternative	include/sequence.h	/^    Sequence *alternative; \/* false case (if defined) *\/$/;"	m	struct:FuncSequence
alval	language/parse.c	/^	ArgList alval;$/;"	m	union:__anon14	file:
and_uid	module/pvsparse.c	/^  and_uid=2666975502UL,$/;"	v	file:
anr	windows/notation.c	/^    int kind, anr, mnr, height;$/;"	m	struct:__anon73	file:
anrsel	windows/notation.c	/^static int anrsel= -1, kindsel= -1;$/;"	v	file:
append_editwindow	treeedit/editor.cc	/^void append_editwindow(void* w, Char *s, unsigned int nr)$/;"	f
append_next_kill	treeedit/editor.cc	/^void append_next_kill(void)$/;"	f
append_node	treeedit/editwindow.cc	/^void EditWindow::append_node(Node *n)$/;"	f	class:EditWindow
append_string	treeedit/editwindow.cc	/^void EditWindow::append_string(Char *c, unsigned int nr)$/;"	f	class:EditWindow
append_structure	treeedit/editor.cc	/^void append_structure(void *w)$/;"	f
appendcom	util/filefind.c	/^  char *appendcom;\/* append command for pipes (%s indicates full filename) *\/$/;"	m	struct:__anon63	file:
apply	treeedit/editor.cc	/^void apply(void)$/;"	f
apply	treeedit/select.cc	/^void Select::apply(Select& f, Select& a)$/;"	f	class:Select
apply_leibnitz	treeedit/editor.cc	/^void apply_leibnitz(void)$/;"	f
apply_leibnitz	treeedit/node.cc	/^void Node::apply_leibnitz(void)$/;"	f	class:Node
apply_uid	module/pvsparse.c	/^  apply_uid=2946556517UL,$/;"	v	file:
arg	include/expression.h	/^	Argument arg;$/;"	m	union:Expression::__anon50
argint_cmp	language/variable.c	/^static int argint_cmp(const void *arg1, const void *arg2)$/;"	f	file:
arglist	include/sequence.h	/^    Expression *arglist;   \/* list of arguments *\/$/;"	m	struct:FuncSequence
argnr	windows/menu.c	/^static int argnr=0,bi=0,fi=0, cpos=-1;$/;"	v	file:
argreal_cmp	language/variable.c	/^static int argreal_cmp(const void *arg1, const void *arg2)$/;"	f	file:
argstring_cmp	language/variable.c	/^static int argstring_cmp(const void *arg1, const void *arg2)$/;"	f	file:
argum	windows/menu.c	/^static Char *argum[10] = {NULL};$/;"	v	file:
arguments	documents/system.c	/^char **arguments;$/;"	v
arr	include/flexarray.h	/^struct { void *arr;$/;"	m	struct:__anon38
arr	util/fstate.c	/^    ARROW *arr;$/;"	m	struct:__anon60	file:
arr_dest	util/fstate.c	49;"	d	file:
arr_lab	util/fstate.c	48;"	d	file:
arrayvalue	language/stringlib.c	/^static int arrayvalue(Uchar *s, int pos)$/;"	f	file:
as_icon	windows/buffer.c	/^static Bool as_icon = MP_False;$/;"	v	file:
as_icon	windows/edit.c	/^static Bool state_open = MP_False, as_icon = MP_False;$/;"	v	file:
as_icon	windows/notation.c	/^static Bool state_open = MP_False, as_icon = MP_False;$/;"	v	file:
as_icon	windows/symbol.c	/^static Bool state_open = MP_False, as_icon = MP_False;$/;"	v	file:
ascent	windows/output.c	/^    short width, ascent, descent, x, y, itemnr,$/;"	m	struct:BOX	file:
ascent_dist	tools/pktobdf.c	/^integer ascent_dist[MAXPKCHAR], descent_dist[MAXPKCHAR];$/;"	v
ascii_ph	output/latexout.c	/^char *ascii_ph[7] = { "Expr", "Op", "Id", "Var",$/;"	v	file:
ascii_tab	output/latexout.c	/^char *ascii_tab[44] = { "\\n", "", "\\t", "",   "", "", "", "",$/;"	v	file:
asciiname	unicode/brows.c	/^static unsigned char asciiname[] = {$/;"	v	file:
ask_latex_line	windows/menu.c	/^static void ask_latex_line(void)$/;"	f	file:
ask_save_time	windows/menu.c	/^static void ask_save_time(void)$/;"	f	file:
ask_selection	windows/getstring.c	/^static void ask_selection(void)$/;"	f	file:
ask_selection	windows/menu.c	/^static void ask_selection(void)$/;"	f	file:
ask_selection	windows/notadef.c	/^static void ask_selection(void)$/;"	f	file:
assexprlist	language/parse.y	/^assexprlist :	expression$/;"	l
assign	language/intlib.c	/^static void assign(int y, int *x)$/;"	f	file:
assign	language/ptest.c	/^void assign(int y, int *x)$/;"	f
assign	language/stringlib.c	/^static void assign(Uchar *s, Uchar **t)$/;"	f	file:
assign_expression	language/expression.c	/^Expression *assign_expression(int nr, Argument *alist, Expression *elist)$/;"	f
assign_lazy	language/ptest.c	/^static void assign_lazy(void *s, void **t)$/;"	f	file:
assigndouble	language/reallib.c	/^static void assigndouble(double y, double *x)$/;"	f	file:
assignint	language/typetest.c	/^static void assignint(int y, RubRef *x)$/;"	f	file:
assignment	language/parse.y	/^assignment  :	identlist ASSIGN assexprlist$/;"	l
assignrub	language/typetest.c	/^static void assignrub(RubRef y, int *x)$/;"	f	file:
assignrubrub	language/typetest.c	/^static void assignrubrub(RubRef y, RubRef *x)$/;"	f	file:
assignstr	language/typetest.c	/^static void assignstr(Uchar *y, RubRef *x)$/;"	f	file:
at_line	treeedit/editwindow.hh	/^    Index at_line;$/;"	m	class:EditWindow
attr	windows/output.c	/^  } attr[4];$/;"	m	struct:__anon79	typeref:struct:__anon79::__anon80	file:
attrgroup	unicode/unifont.c	/^  short attrgroup;$/;"	m	struct:REMAPREC	file:
attribinfo	unicode/unifont.c	/^} attribinfo[MAXATTRIB];$/;"	v	typeref:struct:__anon97	file:
attribinfo	unicode/virtread.c	/^} attribinfo[MAXATTRIB];$/;"	v	typeref:struct:__anon92	file:
attriblist	unicode/unifont.c	/^static ATTRIBREC *attriblist=NULL;$/;"	v	file:
attriblist	unicode/virtread.c	/^static ATTRIBREC *attriblist=NULL;$/;"	v	file:
attribpos	unicode/unifont.c	/^    int attribpos;   \/* calculated combination of attributes *\/$/;"	m	struct:FONTREC	file:
attribpos	unicode/virtread.c	/^    int attribpos;   \/* calculated combination of attributes *\/$/;"	m	struct:FONTREC	file:
attribstack	windows/output.c	/^INTSTACK *attribstack = NULL;$/;"	v
attribtovalue	unicode/unifont.c	110;"	d	file:
attribtovalue	unicode/virtread.c	87;"	d	file:
auto_format	windows/notadef.c	/^static void auto_format(void)$/;"	f	file:
auto_save	include/sources.h	/^    void (*auto_save)(void*,int);$/;"	m	struct:__anon41
auto_save_window	templates/notatype.c	/^void auto_save_window(int fnr, int dump)$/;"	f
auto_saved	windows/edit.c	/^                 Bool saved, iconized, auto_saved, view_mode, empty,$/;"	m	struct:__anon69	file:
autoconv	util/translate.c	/^  int autoconv;      \/* Is the string converted automatically?$/;"	m	struct:Translation	file:
autodouble	documents/system.c	/^    autodouble=0,$/;"	v
autosaved	include/notatype.h	/^	  int saved, autosaved;$/;"	m	struct:__anon48
autowordwrap	documents/system.c	/^    autowordwrap=1,$/;"	v
aval	language/parse.c	/^	Argument aval;$/;"	m	union:__anon14	file:
averagewidth	tools/pktobdf.c	/^integer averagewidth=0;$/;"	v
avgcapitalwidth	tools/pktobdf.c	/^integer avgcapitalwidth=0;$/;"	v
avglowercasewidth	tools/pktobdf.c	/^integer avglowercasewidth=0;$/;"	v
backfromstack	windows/menu.c	684;"	d	file:
backspace_char	windows/notadef.c	/^static void backspace_char(Index arg)$/;"	f	file:
backup	treeedit/editwindow.cc	/^void EditWindow::backup(Node *pn)$/;"	f	class:EditWindow
backupname	templates/notatype.c	/^Char backupname[1000];$/;"	v
backuptime	util/filefind.c	/^time_t backuptime=900; \/* 15 minuten *\/$/;"	v
backward	treeedit/select.cc	/^void Select::backward(Index n)$/;"	f	class:Select
backward_char	treeedit/editor.cc	/^void backward_char(Index n)$/;"	f
backward_kill_line	treeedit/editor.cc	/^void backward_kill_line(Index count)$/;"	f
backward_kill_word	treeedit/editor.cc	/^void backward_kill_word(Index count)$/;"	f
backward_line	treeedit/editor.cc	/^void backward_line(Index n)$/;"	f
backward_line	treeedit/select.cc	/^void Select::backward_line(Index n)$/;"	f	class:Select
backward_remove_char	treeedit/editor.cc	/^void backward_remove_char(Index count)$/;"	f
backward_search	windows/menu.c	/^static Bool backward_search = MP_False;$/;"	v	file:
backward_word	treeedit/editor.cc	/^void backward_word(Index n)$/;"	f
bad_end	include/sources.h	/^    void (*bad_end)(void*);$/;"	m	struct:__anon41
bad_notation	windows/notadef.c	/^static int bad_notation(void)$/;"	f	file:
bail_out	module/hugsparse.c	123;"	d	file:
bal	include/leaftree.h	/^    signed char bal; \/* balance count *\/$/;"	m	struct:bnode
bal	util/debug.c	/^    int bal;$/;"	m	struct:ltnode	file:
bal	util/memman.c	/^    int bal;$/;"	m	struct:ltnode	file:
base	treeedit/editwindow.hh	/^    Node* base() { return root; }$/;"	f	class:EditWindow
base	treeedit/mark.cc	/^const Mark& Mark::base() const$/;"	f	class:Mark
base_color	windows/output.c	/^static int base_color = 0;$/;"	v	file:
base_style	windows/output.c	/^static int base_style = 0;$/;"	v	file:
base_x	windows/output.c	/^static int base_x;$/;"	v	file:
base_y	windows/output.c	/^static int base_y;$/;"	v	file:
basename	util/filefind.c	/^  char *basename;  \/* point in fullname *\/$/;"	m	struct:CacheInfo	file:
baseop	language/expression.c	/^  Operator baseop;   \/* +                 + *\/$/;"	m	struct:OpStruct	file:
bdffile	tools/pktobdf.c	/^bytefile bdffile ;$/;"	v
before	treeedit/editwindow.cc	/^Return* Return::before(const Mark& m, int& h)$/;"	f	class:Return
begin	treeedit/select.hh	/^    Marker begin;$/;"	m	class:Select
begin_of_buffer	treeedit/editor.cc	/^void begin_of_buffer(void)$/;"	f
begin_of_buffer	treeedit/select.cc	/^void Select::begin_of_buffer()$/;"	f	class:Select
begin_of_line	treeedit/editor.cc	/^void begin_of_line(void)$/;"	f
begin_of_line	treeedit/select.cc	/^void Select::begin_of_line()$/;"	f	class:Select
begins_with	util/funcs.c	/^char *begins_with(char *s, char *t)$/;"	f
beginstack	tools/xpipein.c	/^STRSTACK *beginstack = NULL;$/;"	v
beginstack	tools/xpipeout.c	/^STRSTACK *beginstack = NULL;$/;"	v
bgcolor	include/markup.h	/^    int bgcolor;  \/* background color (0x00rrggbb) *\/$/;"	m	struct:_attribs
bi	windows/menu.c	/^static int argnr=0,bi=0,fi=0, cpos=-1;$/;"	v	file:
bindir	documents/Makefile	/^bindir          = ${exec_prefix}\/bin$/;"	m
bindir	include/Makefile	/^bindir          = ${exec_prefix}\/bin$/;"	m
bindir	keyboard/Makefile	/^bindir          = ${exec_prefix}\/bin$/;"	m
bindir	language/Makefile	/^bindir          = ${exec_prefix}\/bin$/;"	m
bindir	markup/Makefile	/^bindir          = ${exec_prefix}\/bin$/;"	m
bindir	module/Makefile	/^bindir          = ${exec_prefix}\/bin$/;"	m
bindir	output/Makefile	/^bindir          = ${exec_prefix}\/bin$/;"	m
bindir	templates/Makefile	/^bindir          = ${exec_prefix}\/bin$/;"	m
bindir	tools/Makefile	/^bindir          = ${exec_prefix}\/bin$/;"	m
bindir	treeedit/Makefile	/^bindir          = ${exec_prefix}\/bin$/;"	m
bindir	unicode/Makefile	/^bindir          = ${exec_prefix}\/bin$/;"	m
bindir	util/Makefile	/^bindir          = ${exec_prefix}\/bin$/;"	m
bindir	windows/Makefile	/^bindir          = ${exec_prefix}\/bin$/;"	m
bit	tools/pktobdf.c	52;"	d	file:
bitarray	tools/pktobdf.c	/^integer bitarray[] = {128, 64, 32, 16, 8, 4, 2, 1};$/;"	v
bitmap	tools/pktobdf.c	/^   char * bitmap;$/;"	m	struct:pkchar	file:
bitweight	tools/pktobdf.c	/^eightbits bitweight ;$/;"	v
black_pixel	windows/sources.c	/^unsigned long white_pixel, black_pixel;$/;"	v
black_width	windows/remark.c	/^static int black_width = 0;$/;"	v	file:
blkcnt_t	module/pvsparse.c	/^typedef __blkcnt_t blkcnt_t;$/;"	t	file:
block	language/parse.y	/^block	    :	'{'$/;"	l
bm	unicode/unifont.c	/^    int bt,bm,bmax;$/;"	m	struct:FONTREC	file:
bm	unicode/virtread.c	/^    int bt,bm,bmax;$/;"	m	struct:FONTREC	file:
bmark	treeedit/select.hh	/^  Mark  bmark() { return begin; }   $/;"	f	class:Select
bmax	unicode/unifont.c	/^    int bt,bm,bmax;$/;"	m	struct:FONTREC	file:
bmax	unicode/virtread.c	/^    int bt,bm,bmax;$/;"	m	struct:FONTREC	file:
bnode	include/leaftree.h	/^struct bnode {$/;"	s
boolean	tools/pktobdf.c	/^typedef char boolean ;$/;"	t	file:
border	windows/button.c	/^	    int border;$/;"	m	struct:__anon75	file:
box_add_char	windows/output.c	/^static void box_add_char(Char c)$/;"	f	file:
box_color	windows/output.c	/^static void box_color(int cattrib)$/;"	f	file:
box_handle	markup/box_markup.c	/^static Uchar *box_handle(int lowvalue, Attribute *attr, RedirectFunc *func)$/;"	f	file:
box_markup_init	markup/box_markup.c	/^void box_markup_init(void)$/;"	f
box_neg_space	windows/output.c	/^static void box_neg_space(int space)$/;"	f	file:
box_print	markup/box_markup.c	/^static Uchar *box_print(int lowvalue, Attribute *attr, RedirectFunc *func)$/;"	f	file:
box_space	windows/output.c	/^static void box_space(int space)$/;"	f	file:
boxstack	windows/output.c	/^static BOX *boxstack[1000];$/;"	v	file:
bp	windows/menu.c	/^static int bp[20] = {0};$/;"	v	file:
bpd	windows/menu.c	/^static int bpd = 0;$/;"	v	file:
bpos	treeedit/select.hh	/^    Index bpos() { return begin.pos; }$/;"	f	class:Select
brk	treeedit/editwindow.cc	/^Bool EditWindow::brk;$/;"	m	class:EditWindow	file:
brk	treeedit/editwindow.hh	/^    static Bool brk;$/;"	m	class:EditWindow
bs	util/fstate.c	/^    BITSET *bs;$/;"	m	struct:__anon60	file:
bsd	windows/output.c	/^static int bsd = 0;$/;"	v	file:
bt	unicode/unifont.c	/^    int bt,bm,bmax;$/;"	m	struct:FONTREC	file:
bt	unicode/virtread.c	/^    int bt,bm,bmax;$/;"	m	struct:FONTREC	file:
buf	documents/fileread.c	/^    Char *buf;$/;"	m	struct:READSTACK	file:
bufcount	windows/output.c	/^static int bufcount = 0;$/;"	v	file:
bufdrawwin	windows/buffer.c	/^static Window bufwin, bufdrawwin;$/;"	v	file:
buffer	language/parse.c	/^    char *buffer;  \/* unput buffer (shared) *\/$/;"	m	struct:FILESTACK	file:
buffer	module/hugsparse.c	/^char buffer[5000];$/;"	v
buffer	templates/notatype.c	/^static Char buffer[BUFSIZE];$/;"	v	file:
buffer	tools/ispellfilter.c	/^char buffer[5000];$/;"	v
buffer	unicode/printdecomp.c	/^char buffer[50000];$/;"	v
buffer	windows/default.c	/^static Char buffer[5000];$/;"	v	file:
buffer	windows/edit.c	/^static Char buffer[2000];$/;"	v	file:
buffer	windows/fonts.c	/^static char buffer[BUFSIZE];$/;"	v	file:
buffer	windows/menu.c	/^static Char buffer[5000];$/;"	v	file:
buffer	windows/sources.c	/^static Char buffer[BUFSIZE];$/;"	v	file:
buffer2	util/funcs.c	/^static Char *buffer2;$/;"	v	file:
buffer_bad_end	windows/buffer.c	/^static void buffer_bad_end(void *data __attribute__((unused)))$/;"	f	file:
buffer_close	windows/buffer.c	/^void buffer_close(void)$/;"	f
buffer_deiconize	windows/buffer.c	/^static void buffer_deiconize(void *data __attribute__((unused)))$/;"	f	file:
buffer_draw	windows/buffer.c	/^static void buffer_draw(void *data __attribute__((unused)))$/;"	f	file:
buffer_handle_button	windows/buffer.c	/^static void buffer_handle_button(void *data __attribute__((unused)), int b_num)$/;"	f	file:
buffer_iconize	windows/buffer.c	/^static void buffer_iconize(void *data __attribute__((unused)))$/;"	f	file:
buffer_iconized	documents/system.c	/^    buffer_iconized = 0,$/;"	v
buffer_info	windows/buffer.c	/^static void *scrollver, *scrollhor, *buffer_info;$/;"	v	file:
buffer_init	windows/buffer.c	/^void buffer_init(void)$/;"	f
buffer_is_open	documents/system.c	/^    buffer_is_open =0,$/;"	v
buffer_last_pos	windows/buffer.c	/^static int buffer_last_pos(int *x, int *y, int *w, int *h)$/;"	f	file:
buffer_layout_change	windows/buffer.c	/^static void buffer_layout_change(void *data __attribute__((unused)))$/;"	f	file:
buffer_margin	windows/buffer.c	/^static int buffer_margin(void *data __attribute__((unused)))$/;"	f	file:
buffer_motion	windows/buffer.c	/^static void buffer_motion(void *data __attribute__((unused)), int x, int y)$/;"	f	file:
buffer_name	windows/buffer.c	/^static XTextProperty buffer_name, icon_name;$/;"	v	file:
buffer_open	windows/buffer.c	/^void buffer_open(void)$/;"	f
buffer_press	windows/buffer.c	/^static void buffer_press(void *data __attribute__((unused)), XButtonEvent *event)$/;"	f	file:
buffer_release	windows/buffer.c	/^static void buffer_release(void *data __attribute__((unused)), XButtonEvent *event)$/;"	f	file:
buffer_resize	windows/buffer.c	/^static void buffer_resize(void *data __attribute__((unused)), XConfigureEvent *event)$/;"	f	file:
buffer_scrollto	windows/buffer.c	/^static void buffer_scrollto(void *data __attribute__((unused)), int kind)$/;"	f	file:
buffer_set_last_pos	windows/buffer.c	/^static void buffer_set_last_pos(int x, int y, int w, int h)$/;"	f	file:
buffer_set_number_of_lines	windows/buffer.c	/^void buffer_set_number_of_lines(void *data __attribute__((unused)), int numlin)$/;"	f
buffer_state	windows/buffer.c	/^static void buffer_state(void *data __attribute__((unused)), int *x, int *y, int *w, int *h,$/;"	f	file:
buffer_use_state	windows/buffer.c	/^static void buffer_use_state( int x, int y, int w, int h,$/;"	f	file:
bufferbutton	windows/buffer.c	/^char *bufferbutton[NR_BUTTON] = { "Kill", "Done"  };$/;"	v	file:
bufferfuncs	windows/buffer.c	/^FUNCTIONS bufferfuncs = {$/;"	v
bufferhelp	windows/buffer.c	/^int bufferhelp[NR_BUTTON] = { BUFFERKILLHELP, BUFFERDONEHELP };$/;"	v	file:
buffername	windows/buffer.c	/^static char *buffername = BUFFERNAME, *iconname = ICONNAME;$/;"	v	file:
buffersize	tools/xpipeout.c	/^int buffersize=0;$/;"	v
buflen	keyboard/keyboard.c	/^static int buflen=0;$/;"	v	file:
buflen	windows/edit.c	/^                 unsigned int width, height, buflen;$/;"	m	struct:__anon69	file:
bufpos	language/parse.c	/^    int bufpos;    \/* number of unput characters *\/$/;"	m	struct:FILESTACK	file:
bufwin	windows/buffer.c	/^static Window bufwin, bufdrawwin;$/;"	v	file:
build_font_structure	unicode/unifont.c	/^static int build_font_structure(void)$/;"	f	file:
build_menu	windows/popup.c	/^MENU *build_menu(Char *title)$/;"	f
build_remaptable	unicode/unifont.c	/^static int build_remaptable(void)$/;"	f	file:
builded	include/popup.h	/^  int builded;$/;"	m	struct:MENU
busylist	module/pvs.c	/^static Char busylist[4][2] = { {'-', 0}, {'\\\\',0},{'|',0},{'\/',0}};$/;"	v	file:
but_height	windows/button.c	/^	    unsigned int but_width, but_height;$/;"	m	struct:__anon75	file:
but_width	windows/button.c	/^	    unsigned int but_width, but_height;$/;"	m	struct:__anon75	file:
button	windows/buffer.c	/^enum button { KILLBUTTON, DONEBUTTON, NR_BUTTON };$/;"	g	file:
button	windows/default.c	/^enum button {SETBUTTON, SAVEBUTTON, DONEBUTTON, NR_BUTTON };$/;"	g	file:
button	windows/edit.c	/^enum button { LOADBUTTON,  SAVEBUTTON,    RENAMEBUTTON,$/;"	g	file:
button	windows/fileselc.c	/^enum button { OKBUTTON, RESCANBUTTON, CANCELBUTTON, NR_BUTTON };$/;"	g	file:
button	windows/find.c	/^enum button { FINDBUTTON, STACKBUTTON, DONEBUTTON, NR_BUTTON,$/;"	g	file:
button	windows/menu.c	/^enum button { WINDOWBUTTON, EDITOPBUTTON, STRUCTUREBUTTON, SELECTIONBUTTON,$/;"	g	file:
button	windows/notadef.c	/^enum button { INSTALLBUTTON, MODIFYBUTTON, DELETEBUTTON,$/;"	g	file:
button	windows/notation.c	/^enum button { LOADBUTTON,   SAVEBUTTON, RENAMEBUTTON,$/;"	g	file:
button	windows/symbol.c	/^enum button { PAGEBUTTON, DONEBUTTON, NR_BUTTON };$/;"	g	file:
button_attr	windows/button.c	/^static XSetWindowAttributes button_attr;$/;"	v	file:
button_draw	windows/button.c	/^static void button_draw(void *data)$/;"	f	file:
button_enter	windows/button.c	/^static void button_enter(void *data)$/;"	f	file:
button_height	windows/button.c	/^unsigned int button_height;$/;"	v
button_init	windows/button.c	/^void button_init(void)$/;"	f
button_leave	windows/button.c	/^static void button_leave(void *data)$/;"	f	file:
button_make	windows/button.c	/^void *button_make(int bnr, Window parent, Char *txt,$/;"	f
button_mask	windows/button.c	/^static unsigned long button_mask;$/;"	v	file:
button_move	windows/button.c	/^void button_move(void *data, int x, int y)$/;"	f
button_press	windows/button.c	/^static void button_press(void *data, XButtonEvent *event __attribute__((unused)))$/;"	f	file:
button_release	windows/button.c	/^static void button_release(void *data, XButtonEvent *event __attribute__((unused)))$/;"	f	file:
button_stick	windows/button.c	/^void button_stick(int gravity)$/;"	f
button_width	windows/button.c	/^unsigned int button_width(Char *txt)$/;"	f
buttondata	windows/notadef.c	/^	 void *buttondata;$/;"	m	struct:__anon88	file:
buttonfuncs	windows/button.c	/^FUNCTIONS buttonfuncs = {$/;"	v
buttonnum	keyboard/keyboard.c	/^static int buttonnum=0;$/;"	v	file:
byte1	unicode/drawstring.c	/^    unsigned char byte1;$/;"	m	struct:__anon94	file:
byte2	unicode/drawstring.c	/^    unsigned char byte2;$/;"	m	struct:__anon94	file:
bytefile	tools/pktobdf.c	/^typedef FILE *bytefile ;$/;"	t	file:
caddr_t	module/pvsparse.c	/^typedef __caddr_t caddr_t;$/;"	t	file:
calc_deltas	unicode/drawstring.c	/^static int calc_deltas(CharStruct *lastchar, unsigned char sptype,$/;"	f	file:
calculate_expression	language/expression.c	/^void calculate_expression(Expression *e)$/;"	f
calculate_lazy_expression	language/expression.c	/^void calculate_lazy_expression(void *lazyexpr)$/;"	f
call_auto_save	windows/sources.c	/^void call_auto_save(unsigned long curtime)$/;"	f
call_doubledoubledoubleref	language/reallib.c	/^static int call_doubledoubledoubleref(int (*fcal)(), void **args)$/;"	f	file:
call_doubledoubleref	language/reallib.c	/^static int call_doubledoubleref(int (*fcal)(), void **args)$/;"	f	file:
call_doubledoubleresdouble	language/reallib.c	/^static int call_doubledoubleresdouble(double (*fcal)(), void **args)$/;"	f	file:
call_doubleref	language/reallib.c	/^static int call_doubleref(int (*fcal)(), void **args)$/;"	f	file:
call_doubleresdouble	language/reallib.c	/^static int call_doubleresdouble(double (*fcal)(), void **args)$/;"	f	file:
call_empty	module/parsertemp.c	/^static int call_empty(int (*fcal)(), void **args)$/;"	f	file:
call_function	language/function.c	/^int call_function(FuncRef function, Value **list)$/;"	f
call_int	module/parsertemp.c	/^static int call_int(int (*fcal)(), void **args)$/;"	f	file:
call_int	module/pvs.c	/^static int call_int(int (*fcal)(), void **args)$/;"	f	file:
call_intarg	windows/editlib.c	/^static int call_intarg(int (*fcal)(), void **argl)$/;"	f	file:
call_intarg	windows/getstring.c	/^static int call_intarg(int (*func)(), void **argl)$/;"	f	file:
call_intarg	windows/notadef.c	/^static int call_intarg(int (*func)(), void **argl)$/;"	f	file:
call_intintarg	windows/editlib.c	/^static int call_intintarg(int (*fcal)(), void **argl)$/;"	f	file:
call_intintarg	windows/getstring.c	/^static int call_intintarg(int (*func)(), void **argl)$/;"	f	file:
call_intintarg	windows/notadef.c	/^static int call_intintarg(int (*func)(), void **argl)$/;"	f	file:
call_intintintintintarg	windows/editlib.c	/^static int call_intintintintintarg(int (*fcal)(), void **argl)$/;"	f	file:
call_intintintref	language/intlib.c	/^static int call_intintintref(int (*fcal)(), void **args)$/;"	f	file:
call_intintintref	language/ptest.c	/^static int call_intintintref(int (*fcal)(), void **args)$/;"	f	file:
call_intintref	language/intlib.c	/^static int call_intintref(int (*fcal)(), void **args)$/;"	f	file:
call_intintref	language/ptest.c	/^static int call_intintref(int (*fcal)(), void **args)$/;"	f	file:
call_intintresint	language/intlib.c	/^static int call_intintresint(int (*fcal)(), void **args)$/;"	f	file:
call_intintresint	language/ptest.c	/^static int call_intintresint(int (*fcal)(), void **args)$/;"	f	file:
call_intintstr	module/pvs.c	/^static int call_intintstr(int (*fcal)(), void **args)$/;"	f	file:
call_intintstrref	windows/editlib.c	/^static int call_intintstrref(int (*fcal)(),void **argl)$/;"	f	file:
call_intref	language/intlib.c	/^static int call_intref(int (*fcal)(), void **args)$/;"	f	file:
call_intref	language/ptest.c	/^static int call_intref(int (*fcal)(), void **args)$/;"	f	file:
call_intrefstrstrarg	windows/editlib.c	/^static int call_intrefstrstrarg(int (*fcal)(), void **argl)$/;"	f	file:
call_intresint	language/intlib.c	/^static int call_intresint(int (*fcal)(), void **args)$/;"	f	file:
call_intrubreff	language/typetest.c	/^static int call_intrubreff(int (*fcal)(), void **args)$/;"	f	file:
call_intstrarg	windows/editlib.c	/^static int call_intstrarg(int (*fcal)(), void **argl)$/;"	f	file:
call_layout_change	windows/sources.c	/^void call_layout_change(void)$/;"	f
call_lazy	language/ptest.c	/^static int call_lazy(int (*fcal)(), void **args)$/;"	f	file:
call_lazylazyref	language/ptest.c	/^static int call_lazylazyref(int (*fcal)(), void **args)$/;"	f	file:
call_noarg	windows/editlib.c	/^static int call_noarg(int (*fcal)(), void **argl __attribute__((unused)) )$/;"	f	file:
call_noarg	windows/fileselc.c	/^static int call_noarg(int (*func)(), void **argl __attribute__((unused)))$/;"	f	file:
call_noarg	windows/getstring.c	/^static int call_noarg(int (*func)(), void **argl __attribute__((unused)))$/;"	f	file:
call_noarg	windows/notadef.c	/^static int call_noarg(int (*func)(), void **argl __attribute__((unused)))$/;"	f	file:
call_noarg	windows/remark.c	/^static int call_noarg(int (*func)(), void **argl __attribute__((unused)))$/;"	f	file:
call_open_prompt	windows/remark.c	/^static int call_open_prompt(int (*func)(), void **argl)$/;"	f	file:
call_resint	windows/editlib.c	/^static int call_resint(int (*fcal)(), void **argl)$/;"	f	file:
call_rubref	language/typetest.c	/^static int call_rubref(int (*fcal)(), void **args)$/;"	f	file:
call_rubrefintref	language/typetest.c	/^static int call_rubrefintref(int (*fcal)(), void **args)$/;"	f	file:
call_rubrefrubreff	language/typetest.c	/^static int call_rubrefrubreff(int (*fcal)(), void **args)$/;"	f	file:
call_rubrefrubrefrubreff	language/typetest.c	/^static int call_rubrefrubrefrubreff(int (*fcal)(), void **args)$/;"	f	file:
call_str	language/stringlib.c	/^static int call_str(int (*fcal)(), void **args)$/;"	f	file:
call_str	module/MAG.c	/^static int call_str(int (*fcal)(), void **args)$/;"	f	file:
call_str	module/pvs.c	/^static int call_str(int (*fcal)(), void **args)$/;"	f	file:
call_strarg	windows/editlib.c	/^static int call_strarg(int (*fcal)(), void **argl)$/;"	f	file:
call_strarg	windows/notadef.c	/^static int call_strarg(int (*func)(), void **argl)$/;"	f	file:
call_strdouble	language/reallib.c	/^static int call_strdouble(int (*fcal)(), void **args)$/;"	f	file:
call_strfuncfuncarg	windows/editlib.c	/^static int call_strfuncfuncarg(int (*fcal)(), void **argl)$/;"	f	file:
call_string	module/parsertemp.c	/^static int call_string(int (*fcal)(), void **args)$/;"	f	file:
call_strint	language/intlib.c	/^static int call_strint(int (*fcal)(), void **args)$/;"	f	file:
call_strint	language/ptest.c	/^static int call_strint(int (*fcal)(), void **args)$/;"	f	file:
call_strintarg	windows/editlib.c	/^static int call_strintarg(int (*fcal)(), void **argl)$/;"	f	file:
call_strintintarg	windows/editlib.c	/^static int call_strintintarg(int (*fcal)(), void **argl)$/;"	f	file:
call_strintresint	language/stringlib.c	/^static int call_strintresint(int (*fcal)(), void **args)$/;"	f	file:
call_strrubreff	language/typetest.c	/^static int call_strrubreff(int (*fcal)(), void **args)$/;"	f	file:
call_strstrarg	windows/editlib.c	/^static int call_strstrarg(int (*fcal)(), void **argl)$/;"	f	file:
call_strstrarg	windows/notadef.c	/^static int call_strstrarg(int (*func)(), void **argl)$/;"	f	file:
call_strstrint	module/pvs.c	/^static int call_strstrint(int (*fcal)(), void **args)$/;"	f	file:
call_strstrintarg	windows/editlib.c	/^static int call_strstrintarg(int (*fcal)(), void **argl)$/;"	f	file:
call_strstrintref	language/stringlib.c	/^static int call_strstrintref(int (*fcal)(), void **args)$/;"	f	file:
call_strstrref	language/stringlib.c	/^static int call_strstrref(int (*fcal)(), void **args)$/;"	f	file:
call_strstrresint	language/stringlib.c	/^static int call_strstrresint(int (*fcal)(), void **args)$/;"	f	file:
call_strstrstrref	language/stringlib.c	/^static int call_strstrstrref(int (*fcal)(), void **args)$/;"	f	file:
call_strstrstrstrfuncarg	windows/editlib.c	/^static int call_strstrstrstrfuncarg(int (*fcal)(), void **argl)$/;"	f	file:
call_user_function	language/userdef.c	/^int call_user_function(FuncRef userdef, Value **alist)$/;"	f
callback	windows/edit.c	/^		 int (*callback)(unsigned char*,unsigned int*);$/;"	m	struct:__anon69	file:
caller	include/prototype.h	/^    int (*caller)();  \/* function to call a function for that prototype *\/$/;"	m	struct:__anon39
callfunc	windows/editlib.c	/^  int (*callfunc)(int (*func)(), void **argl);$/;"	m	struct:__anon86	file:
callfunc	windows/getstring.c	/^  int (*callfunc)(int (*func)(), void **argl);$/;"	m	struct:__anon77	file:
callfunc	windows/notadef.c	/^  int (*callfunc)(int (*func)(), void **argl);$/;"	m	struct:__anon89	file:
calloc	include/memman.h	41;"	d
calloc	include/memman.h	47;"	d
can_access_file	util/funcs.c	/^static Bool can_access_file(struct stat *stbuf)$/;"	f	file:
can_auto_save	windows/sources.c	/^Bool can_auto_save = MP_True;$/;"	v
can_backtab	windows/output.c	/^static Bool can_backtab;$/;"	v	file:
can_be_raised	treeedit/node.cc	/^Bool Node::can_be_raised()$/;"	f	class:Node
can_close_buffer	include/system.h	105;"	d
can_close_default	include/system.h	108;"	d
can_close_edit	include/system.h	106;"	d
can_close_find	include/system.h	110;"	d
can_close_notadef	include/system.h	107;"	d
can_close_notation	include/system.h	104;"	d
can_close_remark	include/system.h	109;"	d
can_close_symbol	include/system.h	103;"	d
can_open_buffer	include/system.h	96;"	d
can_open_default	include/system.h	99;"	d
can_open_edit	include/system.h	97;"	d
can_open_find	include/system.h	101;"	d
can_open_notadef	include/system.h	98;"	d
can_open_notation	include/system.h	95;"	d
can_open_remark	include/system.h	100;"	d
can_open_symbol	include/system.h	94;"	d
can_rename	treeedit/node.cc	/^Bool Node::can_rename(Char *name)$/;"	f	class:Node
case_insens	templates/match.c	/^static int case_insens=0;$/;"	v	file:
catchsig	windows/sources.c	/^static SIGTYPE catchsig[] = {$/;"	v	file:
cattrib	windows/output.c	/^          special,fattrib,cattrib;$/;"	m	struct:BOX	file:
ccf	treeedit/editor.cc	/^static Cpfv ccf; \/\/ Cursor function switch_{reverse,thick,thin} for *cs$/;"	v	file:
ces	language/expression.c	/^static ExpEvaStack *ces=0; \/* current expression\/evaluation stack *\/$/;"	v	file:
cf	treeedit/editwindow.cc	/^Cpfv EditWindow::cf;$/;"	m	class:EditWindow	file:
cf	treeedit/editwindow.hh	/^    static Cpfv cf;$/;"	m	class:EditWindow
cfree	module/hugsparse.c	103;"	d	file:
change_attribute	unicode/unifont.c	106;"	d	file:
change_attribute	unicode/virtread.c	83;"	d	file:
change_attribute	windows/menu.c	/^static void change_attribute(int *attributes, Char *attrname, Char *attrval)$/;"	f	file:
change_check	windows/edit.c	/^static Bool change_check = MP_True;$/;"	v	file:
change_mapped	windows/sources.c	/^void change_mapped(Window win, int mapped)$/;"	f
change_selection	treeedit/editor.cc	/^void change_selection(void *selection, int *position, int len)$/;"	f
change_to	treeedit/node.cc	/^void Node::change_to(Char newval, Index pos)$/;"	f	class:Node
change_visibility	windows/sources.c	/^void change_visibility(Window win, int state)$/;"	f
changed	treeedit/node.hh	/^    Bool changed;   \/\/ True: node has changed since last poll().$/;"	m	class:Node
changed_notation	templates/notatype.c	/^void changed_notation(void)$/;"	f
changes	util/fstate.c	/^    STATECHANGE *changes;$/;"	m	struct:__anon61	file:
char2width	windows/getstring.c	131;"	d	file:
char_ascent	windows/fonts.c	/^int char_ascent(Char data)$/;"	f
char_descent	windows/fonts.c	/^int char_descent(Char data)$/;"	f
char_kind	windows/notadef.c	/^static int char_kind(Char c)$/;"	f	file:
char_latex	output/latexout.c	/^char *char_latex(Char data, Bool math)$/;"	f
char_latex_next	output/latexout.c	/^char *char_latex_next(Char *data, int *math)$/;"	f
char_left	windows/fonts.c	/^int char_left(Char data)$/;"	f
char_right	windows/fonts.c	/^int char_right(Char data)$/;"	f
char_width	windows/fonts.c	/^int char_width(Char data)$/;"	f
character_info	unicode/unifont.c	/^CharInfo *character_info(Uchar c)$/;"	f
charcurs	windows/getstring.c	/^           int charcurs, pixcurs;$/;"	m	struct:STRINGINFO	file:
charrefvar	windows/default.c	116;"	d	file:
chars	unicode/drawstring.c	/^    FontChar *chars;$/;"	m	struct:__anon95	file:
charsetencoding	tools/pktobdf.c	/^char *charsetencoding="FONTSPECIFIC";$/;"	v
charsetregistry	tools/pktobdf.c	/^char *charsetregistry="MetaFont";$/;"	v
chartoChar	module/hugsparse.c	/^static int chartoChar(Char *b, char *c)$/;"	f	file:
check	treeedit/editwindow.cc	/^Bool Return::check()$/;"	f	class:Return
check	windows/checkbox.c	/^    Bool check;$/;"	m	struct:CHECKBOXINFO	file:
check	windows/output.c	/^static void check(void) { }$/;"	f	file:
check_event	tools/xpipein.c	/^static void check_event(void)$/;"	f	file:
check_events	tools/xpipein.c	/^static void check_events(void)$/;"	f	file:
check_find	treeedit/editor.cc	/^Bool check_find()$/;"	f
check_find_replace	treeedit/editor.cc	/^Bool check_find_replace()$/;"	f
check_name	windows/edit.c	/^static int check_name(EDITINFO *einf, Char *name)$/;"	f	file:
check_ph	treeedit/node.cc	/^Bool Node::check_ph(Node *n)$/;"	f	class:Node
check_property	tools/xpipein.c	/^static void check_property(void)$/;"	f	file:
checkbox_attr	windows/checkbox.c	/^static XSetWindowAttributes checkbox_attr;$/;"	v	file:
checkbox_connect	windows/checkbox.c	/^void checkbox_connect(void *box, void *other_box)$/;"	f
checkbox_draw	windows/checkbox.c	/^static void checkbox_draw(void *data)$/;"	f	file:
checkbox_init	windows/checkbox.c	/^void checkbox_init(void)$/;"	f
checkbox_make	windows/checkbox.c	/^void *checkbox_make(Window parent, int xpos, int ypos, int value __attribute__((unused)))$/;"	f
checkbox_mask	windows/checkbox.c	/^static unsigned long checkbox_mask;$/;"	v	file:
checkbox_release	windows/checkbox.c	/^static void checkbox_release(void *data, XButtonEvent *event __attribute__((unused)))$/;"	f	file:
checkbox_set	windows/checkbox.c	/^void checkbox_set(void *data, Bool on)$/;"	f
checkbox_value	windows/checkbox.c	/^Bool checkbox_value(void *data)$/;"	f
checkboxfuncs	windows/checkbox.c	/^FUNCTIONS checkboxfuncs = {$/;"	v
checkhesc	tools/pktobdf.c	/^integer checkhesc=0;$/;"	v
checkname	util/funcs.c	/^static char checkname[1024];$/;"	v	file:
checkwindow	windows/fileselc.c	/^    Window checkwindow;$/;"	m	struct:__anon71	file:
class_hints	windows/sources.c	/^XClassHint class_hints;$/;"	v
clean_up	treeedit/node.cc	/^void Node::clean_up(void)$/;"	f	class:Node
cleanup	treeedit/editwindow.hh	/^    void cleanup() { root->clean_up(); }$/;"	f	class:EditWindow
cleanup_filestack	documents/fileread.c	/^void cleanup_filestack(void)$/;"	f
cleanup_nodestack	treeedit/editor.cc	/^void cleanup_nodestack(void)$/;"	f
cleanup_stencilstack	templates/notatype.c	/^void cleanup_stencilstack(void)$/;"	f
clear	treeedit/editwindow.cc	/^void EditWindow::clear()$/;"	f	class:EditWindow
clear	util/debug.c	/^static void clear(lfptr t)$/;"	f	file:
clear	util/fstate.c	/^static void clear(BITSET *a)$/;"	f	file:
clear	util/memman.c	/^static void clear(lfptr t)$/;"	f	file:
clear_accents	unicode/drawstring.c	/^static void clear_accents(void)$/;"	f	file:
clear_all_tabs	treeedit/editwindow.cc	/^void EditWindow::clear_all_tabs()$/;"	f	class:EditWindow
clear_bottom	windows/notadef.c	/^static void clear_bottom(void)$/;"	f	file:
clear_eval_stack	language/expression.c	/^void clear_eval_stack(void)$/;"	f
clear_expr_stack	language/expression.c	/^void clear_expr_stack(void)$/;"	f
clear_file_ref	templates/notatype.c	/^void clear_file_ref(void)$/;"	f
clear_find_nr	treeedit/node.hh	/^    void clear_find_nr() {_findnr = 0; }$/;"	f	class:Node
clear_find_nr_rec	treeedit/node.cc	/^void Node::clear_find_nr_rec()$/;"	f	class:Node
clear_keymap	keyboard/keyboard.c	/^void clear_keymap(KeyMap *map)$/;"	f
clear_message	windows/output.c	/^void clear_message(Bool allways)$/;"	f
clear_notation_window	templates/notatype.c	/^int clear_notation_window(int fnr)$/;"	f
clear_parens	treeedit/editor.cc	/^void clear_parens(void)$/;"	f
clear_parens	treeedit/select.cc	/^void Select::clear_parens()$/;"	f	class:Select
clear_parser	module/parsertemp.c	/^void clear_parser(void)$/;"	f
clear_replacestop	treeedit/select.cc	/^void Select::clear_replacestop()$/;"	f	class:Select
clear_stack	treeedit/editor.cc	/^void clear_stack()$/;"	f
clear_stack	treeedit/select.cc	/^void Select::clear_stack()$/;"	f	class:Select
clear_stack_and_use	treeedit/editor.cc	/^void clear_stack_and_use()$/;"	f
clear_stack_and_use	treeedit/select.cc	/^void Select::clear_stack_and_use()$/;"	f	class:Select
clear_state	keyboard/keyboard.c	/^static void clear_state(void)$/;"	f	file:
clear_state	output/latexout.c	/^static void clear_state(void)$/;"	f	file:
clear_tab_positions	treeedit/editor.cc	/^void clear_tab_positions(void)$/;"	f
clear_tabs	treeedit/editwindow.cc	/^void EditWindow::clear_tabs()$/;"	f	class:EditWindow
clear_to_begin_of_line	windows/output.c	/^static void clear_to_begin_of_line(int height)$/;"	f	file:
clear_to_end_of_line	windows/output.c	/^static void clear_to_end_of_line(int x, int height)$/;"	f	file:
clear_to_end_of_page	windows/output.c	/^void clear_to_end_of_page(void)$/;"	f
clear_use_alternative	language/sequence.c	/^static void clear_use_alternative(void)$/;"	f	file:
clear_version	windows/notadef.c	/^static void clear_version(void)$/;"	f	file:
clear_window	treeedit/editor.cc	/^void clear_window(void* w)$/;"	f
clear_window	windows/notadef.c	/^static void clear_window(void)$/;"	f	file:
clipboard	windows/sources.c	/^static Atom targets[5], target_string=0, data_prop=0, clipboard=0,$/;"	v	file:
clockid_t	module/pvsparse.c	/^typedef __clockid_t clockid_t;$/;"	t	file:
close_box	windows/output.c	/^static void close_box(void)$/;"	f	file:
close_boxes	windows/output.c	/^static BOX *close_boxes(void)$/;"	f	file:
close_display	windows/output.c	/^void close_display(void)$/;"	f
close_editwindow	treeedit/editor.cc	/^void close_editwindow(void* w)$/;"	f
close_file	util/filefind.c	/^extern void close_file(FILE *file)$/;"	f
close_findwindow	treeedit/editor.cc	/^void close_findwindow(void)$/;"	f
close_macro	output/latexout.c	/^static void close_macro(void)$/;"	f	file:
close_match	windows/notadef.c	/^static int close_match(Char *s, int i, int *k)$/;"	f	file:
close_math	output/latexout.c	/^static void close_math(void)$/;"	f	file:
close_miniwindow	treeedit/editor.cc	/^void close_miniwindow(void)$/;"	f
close_node	windows/output.c	/^void close_node(void)$/;"	f
close_parens	treeedit/mark.cc	/^void Mark::close_parens()$/;"	f	class:Mark
close_replacewindow	treeedit/editor.cc	/^void close_replacewindow(void)$/;"	f
close_save_state_file	windows/sources.c	/^void close_save_state_file(void)$/;"	f
close_scratchwindow	treeedit/editor.cc	/^void close_scratchwindow(void)$/;"	f
close_slash	output/latexout.c	/^static void close_slash(void)$/;"	f	file:
close_tabbing	windows/output.c	/^void close_tabbing(void)$/;"	f
close_textbox	windows/output.c	/^static void close_textbox(void)$/;"	f	file:
close_window	windows/default.c	/^static void close_window(Bool bad)$/;"	f	file:
closeparen_insert	treeedit/editor.cc	/^void closeparen_insert(int, Index count)$/;"	f
closeparen_insert	treeedit/select.cc	/^Bool Select::closeparen_insert(Char c, Index count)$/;"	f	class:Select
clr_parens	treeedit/node.hh	/^    void clr_parens() { changed=changed||_parens; _parens = MP_False; }$/;"	f	class:Node
cmp	include/leaftree.h	/^    int (*cmp)(const void*,const void*);$/;"	m	struct:ltree
cmp_leaf	language/leaftree.c	/^static int (*cmp_leaf)(const void*,const void*);$/;"	v	file:
cmp_leaf	util/leaftree.c	/^static int (*cmp_leaf)(const void*,const void*);$/;"	v	file:
code	keyboard/keys.c	/^    char code;$/;"	m	struct:__anon59	file:
code	windows/notation.c	/^    unsigned long code;$/;"	m	struct:__anon73	file:
codename	markup/lang_markup.c	/^    char *codename;  \/* code name (as used for MIME tags) *\/$/;"	m	struct:UNOFLANG	file:
colcachemax	windows/sources.c	/^static int colcachemax=COLCACHELIMIT;$/;"	v	file:
color	windows/output.c	/^    char color, style;$/;"	m	struct:BOX	file:
color_handle	markup/color_markup.c	/^static Uchar *color_handle(int lowvalue, Attribute *attr, RedirectFunc *func)$/;"	f	file:
color_markup_init	markup/color_markup.c	/^void color_markup_init(void)$/;"	f
color_print	markup/color_markup.c	/^static Uchar *color_print(int lowvalue, Attribute *attr, RedirectFunc *func)$/;"	f	file:
color_set_blue	include/color_markup.h	6;"	d
color_set_cube	include/color_markup.h	13;"	d
color_set_cube	include/color_markup.h	19;"	d
color_set_green	include/color_markup.h	5;"	d
color_set_red	include/color_markup.h	4;"	d
colorbuf	markup/color_markup.c	/^static Uchar colorbuf[256];$/;"	v	file:
colorcell	windows/sources.c	/^} colorcell[COLCACHELIMIT];$/;"	v	typeref:struct:__anon81	file:
colorlist	windows/sources.c	/^unsigned long colorlist[MAX_CELLS\/2][2];$/;"	v
colormap	windows/sources.c	/^Colormap colormap;$/;"	v
colorname	windows/output.c	/^static Char colorname[COLORNAMESIZE+1];$/;"	v	file:
colorname	windows/sources.c	/^static char *colorname[MAX_CELLS] = {$/;"	v	file:
colorpos	windows/output.c	/^static int colorpos=0;$/;"	v	file:
colorref	windows/sources.c	/^static void colorref(int pos)$/;"	f	file:
colorset	windows/output.c	/^static int colorset=0;$/;"	v	file:
colsel	windows/notation.c	/^static int linesel, colsel;$/;"	v	file:
columns	windows/symbol.c	/^  int columns;    \/* number of columns *\/ $/;"	m	struct:SYMBOLPAGE	file:
combine	treeedit/select.cc	/^void Select::combine(const Select& s)$/;"	f	class:Select
combine_expression	language/expression.c	/^Expression *combine_expression(Expression *e1, Expression *e2,$/;"	f
comment	include/keyboard.h	/^    Uchar *comment;     \/* comment if help is needed  *\/$/;"	m	struct:keymap
comment	module/pvs.c	/^  Char *comment;         \/* a comment as feedback to the user *\/$/;"	m	struct:ProofStep	file:
comments	tools/pktobdf.c	/^char *comments[MAX_COMMENT];$/;"	v
commute	treeedit/editor.cc	/^void commute(void)$/;"	f
commute	treeedit/node.cc	/^void Node::commute(Index begin, Index end)$/;"	f	class:Node
commute	treeedit/select.cc	/^void Select::commute()$/;"	f	class:Select
commute_selection	treeedit/editor.cc	/^void commute_selection(void *selection)$/;"	f
comp	include/flexarray.h	/^	 int (*comp)(const void*,const void*);$/;"	m	struct:__anon38
compens	windows/default.c	/^static int compens;$/;"	v	file:
compens	windows/getstring.c	76;"	d	file:
compose_uid	module/pvsparse.c	/^  compose_uid=3406469154UL,$/;"	v	file:
compress_filesize	util/filefind.c	/^static int compress_filesize(char *name)$/;"	f	file:
con_insert	treeedit/editor.cc	/^static void con_insert(Char c, Index &count)$/;"	f	file:
concat	util/filefind.c	/^static char *concat(char *str1, char *str2)$/;"	f	file:
concat	util/funcs.c	/^Char *concat(Char *s1, Char *s2)$/;"	f
concat_in	util/funcs.c	/^void concat_in(Char *dest, Char *s1, Char *s2)$/;"	f
cond_left	treeedit/mark.cc	/^void Mark::cond_left(int n)$/;"	f	class:Mark
cond_right	treeedit/mark.cc	/^void Mark::cond_right(int n)$/;"	f	class:Mark
configure	include/sources.h	/^    void (*configure)(void*, XConfigureEvent*);$/;"	m	struct:__anon41
cons	language/types.c	/^    } cons;$/;"	m	struct:__anon2	typeref:union:__anon2::__anon3	file:
conskind	language/types.c	/^    int conskind;$/;"	m	struct:__anon2	file:
conssize	language/types.c	/^    int conssize;$/;"	m	struct:__anon2	file:
const	language/parse.c	174;"	d	file:
construct	language/types.c	/^    void (*construct)(void**);     \/* create object *\/$/;"	m	struct:__anon2	file:
construct_rubbish	language/typetest.c	/^static void construct_rubbish(void **rub)$/;"	f	file:
construct_selection	treeedit/editor.cc	/^void construct_selection(void **result)$/;"	f
construct_string	language/stringlib.c	/^static void construct_string(void **object)$/;"	f	file:
construct_string	windows/menu.c	/^static void construct_string(Char *prompt, Char *defaultval,$/;"	f	file:
contains	treeedit/select.cc	/^Bool Select::contains(const Mark& m) const$/;"	f	class:Select
contains	treeedit/select.cc	/^Bool Select::contains(const Select& s) const$/;"	f	class:Select
contains	util/fstate.c	56;"	d	file:
content	windows/symbol.c	/^  Char *content;  \/* array with columns * rows Chars *\/$/;"	m	struct:SYMBOLPAGE	file:
content_ref	treeedit/node.cc	/^Char *Node::content_ref()$/;"	f	class:Node
context_sensitive_help	windows/menu.c	/^static void context_sensitive_help(void)$/;"	f	file:
conv12bit	unicode/uniconv.c	/^static UConverter conv12bit = { 0, 0, 0,$/;"	v	file:
conv16bit	unicode/uniconv.c	/^static UConverter conv16bit = { 0, 0, 0,$/;"	v	file:
conv8bit	unicode/uniconv.c	/^static UConverter conv8bit = { 0, 0, 0,$/;"	v	file:
convbuf	unicode/brows.c	/^Uchar convbuf[40]={'U','T','F','8',0};$/;"	v
convert_event	keyboard/keys.c	/^int convert_event(void *event, KeyNum *keyres, KeyMode *moderes)$/;"	f
convertslash	language/parse.c	/^static void convertslash(Uchar *res, Uchar *s)$/;"	f	file:
convertslashascii	language/parse.c	/^static void convertslashascii(char *res, char *s, int limit)$/;"	f	file:
convid	include/uniconv.h	/^    UConvID convid;                            \/* converter ID *\/$/;"	m	struct:__anon42
convname	unicode/brows.c	/^Uchar *convname=convbuf;$/;"	v
convname	unicode/convert.c	/^Uchar *convname;$/;"	v
copy	language/types.c	/^    void (*copy)(void**, void*);   \/* copy(dest,source) *\/$/;"	m	struct:__anon2	file:
copy	treeedit/node.cc	/^Node* Node::copy(Index begin, Index end) const$/;"	f	class:Node
copy	treeedit/select.cc	/^void copy(Select& t, Select& s)$/;"	f
copy	util/fstate.c	/^static void copy(BITSET *a, BITSET *b)$/;"	f	file:
copy_item	util/flexarray.c	100;"	d	file:
copy_keyboard_stack	keyboard/keyboard.c	/^void *copy_keyboard_stack(void *stack)$/;"	f
copy_name	treeedit/node.cc	/^Char* Node::copy_name()$/;"	f	class:Node
copy_old	treeedit/select.cc	/^void Select::copy_old(Select &sl)$/;"	f	class:Select
copy_region	treeedit/editor.cc	/^void copy_region(void)$/;"	f
copy_rubbish	language/typetest.c	/^static void copy_rubbish(void **rubd, void *rubs)$/;"	f	file:
copy_selection	treeedit/editor.cc	/^void copy_selection(void **result, void *sel)$/;"	f
copy_selections	treeedit/editor.cc	/^void copy_selections(Index sel1, Index sel2)$/;"	f
copy_string	language/stringlib.c	/^static void copy_string(void **object, void *orig)$/;"	f	file:
copyright	tools/pktobdf.c	/^char *copyright="MetaFont (public domain)";$/;"	v
count	util/refcounting.c	/^  int count;$/;"	m	struct:RefElem	file:
count_lines	windows/output.c	/^static int count_lines(BOX *b)$/;"	f	file:
country	include/markup.h	/^    int country;  \/* country code (might influence other attributes) *\/$/;"	m	struct:_attribs
cpos	windows/menu.c	/^static int argnr=0,bi=0,fi=0, cpos=-1;$/;"	v	file:
create_arg	windows/sources.c	/^static int create_arg = 0;$/;"	v	file:
create_directory	windows/sources.c	/^static Bool create_directory(Char *data, void (*func)(int,Bool), int arg)$/;"	f	file:
create_func	windows/sources.c	/^static void (*create_func)(int,Bool) = 0;$/;"	v	file:
create_needed_directories	windows/sources.c	/^void create_needed_directories(int number, Bool made)$/;"	f
create_popup	windows/menu.c	/^static void create_popup(void *data __attribute__((unused)), int n)$/;"	f	file:
create_popup	windows/notadef.c	/^static void create_popup(void *data, int n __attribute__((unused)))$/;"	f	file:
create_prototype	language/prototype.c	/^Prototype *create_prototype(int (*caller)())$/;"	f
critical	tools/xpipeout.c	/^int critical=0;$/;"	v
cs	treeedit/editor.cc	/^Select* cs; \/\/ Current (in a few contexts)$/;"	v
cs	treeedit/editwindow.cc	/^Select* EditWindow::cs;$/;"	m	class:EditWindow	file:
cs	treeedit/editwindow.hh	/^    static Select* cs;$/;"	m	class:EditWindow
cscf	treeedit/editor.cc	/^static Cpfv cscf;$/;"	v	file:
csfreel	documents/fileread.c	/^static CSTRINGSTACK *csfreel=NULL, *csstack=NULL;$/;"	v	file:
csstack	documents/fileread.c	/^static CSTRINGSTACK *csfreel=NULL, *csstack=NULL;$/;"	v	file:
cur_time	keyboard/keyboard.c	/^static unsigned long cur_window, cur_time;$/;"	v	file:
cur_window	keyboard/keyboard.c	/^static unsigned long cur_window, cur_time;$/;"	v	file:
cur_x	keyboard/keyboard.c	/^static int cur_x,cur_y;$/;"	v	file:
cur_y	keyboard/keyboard.c	/^static int cur_x,cur_y;$/;"	v	file:
curbar	windows/output.c	/^static XPoint curbar[] = {{ -CWH,   CHH\/2},$/;"	v	file:
current_attr	unicode/unifont.c	/^static int current_attr=0;$/;"	v	file:
current_file	language/parse.c	/^static char *current_file(void)$/;"	f	file:
current_handler	markup/markup.c	/^static SurroHandler *current_handler=NULL;$/;"	v	file:
current_id	language/parse.c	/^static int current_id=0;$/;"	v	file:
current_keymap	language/parse.c	/^static KeyMap *current_keymap=0;$/;"	v	file:
current_line_number	language/parse.c	/^static int current_line_number(void)$/;"	f	file:
current_menu	language/parse.c	/^static PopupMenu *current_menu =0;$/;"	v	file:
current_rules	templates/match.c	/^static PARSERULES current_rules = {{NULL},NULL,0,0x8000 };$/;"	v	file:
current_symbol_window	windows/symbol.c	/^static SYMBOLINFO *current_symbol_window=0;$/;"	v	file:
current_time	util/filefind.c	/^static time_t current_time(void)$/;"	f	file:
current_type	language/parse.c	/^static int current_type=0;$/;"	v	file:
currentbusy	module/pvs.c	/^static int currentbusy=0;$/;"	v	file:
currentlang	util/translate.c	/^static TransLang *currentlang=0;$/;"	v	file:
currentpos	unicode/unistring.c	/^static int currentpos=UNISTRING_ROTATE_MAX-1;$/;"	v	file:
currentstack	keyboard/keyboard.c	/^static KeyStackInfo *currentstack=&defaultkeystack;$/;"	v	file:
currentwd	util/funcs.c	/^static char *currentwd=NULL;$/;"	v	file:
currentwdlen	util/funcs.c	/^static int currentwdlen=0;$/;"	v	file:
cursor	windows/output.c	/^static XPoint cursor[]   = {{0, 0},    {CWH+1, CHH+1}, {-CWH-1, CHH+1}};$/;"	v	file:
cursor_func	windows/output.c	/^static void (*cursor_func)(void*,int,int) = NULL;$/;"	v	file:
cursor_h	windows/output.c	/^static XPoint cursor_h[] = {{0, 0},    {CWH,   CHH},   {-CWH,   CHH}};$/;"	v	file:
cursor_target	windows/notadef.c	/^static int cursor_x=0, cursor_y=0, cursor_target=0;$/;"	v	file:
cursor_x	windows/notadef.c	/^static int cursor_x=0, cursor_y=0, cursor_target=0;$/;"	v	file:
cursor_y	windows/notadef.c	/^static int cursor_x=0, cursor_y=0, cursor_target=0;$/;"	v	file:
cursors	windows/scrollbar.c	/^Cursor cursors[] = { XC_sb_down_arrow,$/;"	v
cursorstack	windows/output.c	/^static BOX *cursorstack = NULL;$/;"	v	file:
curstep	module/pvs.c	/^static ProofStep *curstep=0;$/;"	v	file:
curtab	windows/output.c	/^                unsigned char curtab;$/;"	m	struct:TABBING	file:
curtabmar	windows/output.c	/^                unsigned char curtabmar;$/;"	m	struct:TABBING	file:
cut	treeedit/node.cc	/^Node* Node::cut(Index begin, Index end)$/;"	f	class:Node
cycle_popup	module/SEJ.c	/^static void cycle_popup(void *string, int n __attribute__((unused)))$/;"	f	file:
daddr_t	module/pvsparse.c	/^typedef __daddr_t daddr_t;$/;"	t	file:
data	include/memman.h	/^  void *data;$/;"	m	struct:__anon53
data	module/pvsparse.c	/^  void *data;$/;"	m	struct:__anon33	file:
data	windows/button.c	/^	    void *data;$/;"	m	struct:__anon75	file:
data	windows/default.c	/^    void *data;$/;"	m	struct:__anon76	file:
data	windows/events.c	/^static void *data=NULL, *datapar=NULL;$/;"	v	file:
data	windows/menu.c	/^    void *data;$/;"	m	struct:ITEMDESC	file:
data	windows/scrollbar.c	/^	   void *data;$/;"	m	struct:__anon91	file:
data	windows/sources.c	/^    void *data;$/;"	m	struct:__anon82	file:
data_prop	windows/sources.c	/^static Atom targets[5], target_string=0, data_prop=0, clipboard=0,$/;"	v	file:
dataarg	windows/popup.c	/^  void *dataarg;$/;"	m	struct:__anon72	file:
datadecode	include/uniconv.h	/^    void *datadecode;                          \/* data for decoding *\/$/;"	m	struct:__anon42
datadir	documents/Makefile	/^datadir         = ${prefix}\/share\/MathSpad$/;"	m
datadir	include/Makefile	/^datadir         = ${prefix}\/share\/MathSpad$/;"	m
datadir	keyboard/Makefile	/^datadir         = ${prefix}\/share\/MathSpad$/;"	m
datadir	language/Makefile	/^datadir         = ${prefix}\/share\/MathSpad$/;"	m
datadir	markup/Makefile	/^datadir         = ${prefix}\/share\/MathSpad$/;"	m
datadir	module/Makefile	/^datadir         = ${prefix}\/share\/MathSpad$/;"	m
datadir	output/Makefile	/^datadir         = ${prefix}\/share\/MathSpad$/;"	m
datadir	templates/Makefile	/^datadir         = ${prefix}\/share\/MathSpad$/;"	m
datadir	tools/Makefile	/^datadir         = ${prefix}\/share\/MathSpad$/;"	m
datadir	treeedit/Makefile	/^datadir         = ${prefix}\/share\/MathSpad$/;"	m
datadir	unicode/Makefile	/^datadir         = ${prefix}\/share\/MathSpad$/;"	m
datadir	util/Makefile	/^datadir         = ${prefix}\/share\/MathSpad$/;"	m
datadir	windows/Makefile	/^datadir         = ${prefix}\/share\/MathSpad$/;"	m
dataencode	include/uniconv.h	/^    void *dataencode;                          \/* data for encoding *\/$/;"	m	struct:__anon42
datapar	windows/events.c	/^static void *data=NULL, *datapar=NULL;$/;"	v	file:
datasubdir	unicode/Makefile	/^datasubdir = \/map$/;"	m
dbl_clck	treeedit/select.cc	/^static Bool dbl_clck=MP_False;$/;"	v	file:
dbl_click	include/sources.h	/^    void (*dbl_click)(void *);$/;"	m	struct:__anon41
dbl_click	treeedit/editor.cc	/^void dbl_click(void)$/;"	f
dbl_click	treeedit/select.cc	/^void Select::dbl_click()$/;"	f	class:Select
dcbuf	unicode/datatotable.c	/^static Uchar dcbuf[15000];$/;"	v	file:
dchange	language/leaftree.c	/^static int dchange=0;$/;"	v	file:
dchange	util/leaftree.c	/^static int dchange=0;$/;"	v	file:
dcp	unicode/datatotable.c	/^static int dcp=0;$/;"	v	file:
de_alias_node	treeedit/node.cc	/^void Node::de_alias_node()$/;"	f	class:Node
de_alias_tree	treeedit/node.cc	/^void Node::de_alias_tree()$/;"	f	class:Node
debugbuf	unicode/drawstring.c	/^static char debugbuf[0x10000];$/;"	v	file:
decode	documents/fileread.c	232;"	d	file:
decode	include/uniconv.h	/^    unsigned char *(*decode)(Uchar *, unsigned char *, void *);$/;"	m	struct:__anon42
decode_12bit	unicode/uniconv.c	/^static unsigned char *decode_12bit(Uchar *source, unsigned char *target,$/;"	f	file:
decode_16bit	unicode/uniconv.c	/^static unsigned char *decode_16bit(Uchar *source, unsigned char *target,$/;"	f	file:
decode_8bit	unicode/uniconv.c	/^static unsigned char *decode_8bit(Uchar *source, unsigned char *target,$/;"	f	file:
decode_pos	windows/notation.c	/^static int decode_pos(int col, unsigned long code)$/;"	f	file:
decomp	unicode/decomp.c	/^static MapUstr decomp=NULL;$/;"	v	file:
decrease_refcount	util/refcounting.c	/^void decrease_refcount(void *pointer)$/;"	f
decrease_spacing	treeedit/editor.cc	/^void decrease_spacing(Index count)$/;"	f
decrease_spacing	treeedit/node.cc	/^void Node::decrease_spacing(Index count)$/;"	f	class:Node
decrease_spacing	treeedit/select.cc	/^void Select::decrease_spacing(Index count)$/;"	f	class:Select
def	unicode/unifont.c	/^    int def;$/;"	m	struct:__anon97	file:
def	unicode/virtread.c	/^    int def;$/;"	m	struct:__anon92	file:
def	windows/notadef.c	/^         int selection, nr_items, def, x, max, helpnr;$/;"	m	struct:__anon88	file:
def	windows/sources.c	/^  XColor def;$/;"	m	struct:__anon81	file:
def_buf_size	documents/fileread.c	/^static int def_buf_size;$/;"	v	file:
def_charmap	unicode/unifont.c	/^static MapInt def_charmap=0;$/;"	v	file:
def_depth	windows/sources.c	/^static int def_depth=1;$/;"	v	file:
def_thinspace	windows/output.c	/^static int def_thinspace=0;$/;"	v	file:
defail	include/uniconv.h	/^    Uchar *(*defail)(Uchar *, void *);         \/* where does decoding fail *\/$/;"	m	struct:__anon42
defail_12bit	unicode/uniconv.c	/^static Uchar *defail_12bit(Uchar *source, void *data)$/;"	f	file:
defail_16bit	unicode/uniconv.c	/^static Uchar *defail_16bit(Uchar *source, void *data)$/;"	f	file:
defail_8bit	unicode/uniconv.c	/^static Uchar *defail_8bit(Uchar *source, void *data)$/;"	f	file:
default_bad_end	windows/default.c	/^static void default_bad_end(void *data __attribute__((unused)))$/;"	f	file:
default_character_info	unicode/unifont.c	/^CharInfo *default_character_info(Uchar c)$/;"	f
default_close	windows/default.c	/^void default_close(void)$/;"	f
default_deiconize	windows/default.c	/^static void default_deiconize(void *data __attribute__((unused)))$/;"	f	file:
default_draw	windows/default.c	/^static void default_draw(void *data __attribute__((unused)))$/;"	f	file:
default_handle_button	windows/default.c	/^static void default_handle_button(void *data __attribute__((unused)), int bnr)$/;"	f	file:
default_handle_fileselc	windows/default.c	/^static void default_handle_fileselc(void *data, Char *name)$/;"	f	file:
default_iconize	windows/default.c	/^static void default_iconize(void *data __attribute__((unused)))$/;"	f	file:
default_iconized	documents/system.c	/^    default_iconized = 0,$/;"	v
default_ignore	keyboard/keyboard.c	/^KeyMode default_ignore=0;$/;"	v
default_init	windows/default.c	/^void default_init(void)$/;"	f
default_is_open	documents/system.c	/^    default_is_open = 0,$/;"	v
default_last_pos	windows/default.c	/^static int default_last_pos(int *x, int *y, int *w, int *h)$/;"	f	file:
default_layout_change	windows/default.c	/^static void default_layout_change(void *data __attribute__((unused)))$/;"	f	file:
default_motion	windows/default.c	/^static void default_motion(void *data __attribute__((unused)), int x __attribute__((unused)), int y __attribute__((unused)))$/;"	f	file:
default_name	windows/default.c	/^static XTextProperty default_name, icon_name;$/;"	v	file:
default_open	windows/default.c	/^void default_open(void)$/;"	f
default_press	windows/default.c	/^static void default_press(void *data __attribute__((unused)), XButtonEvent *event)$/;"	f	file:
default_release	windows/default.c	/^static void default_release(void *data __attribute__((unused)), XButtonEvent *event __attribute__((unused)))$/;"	f	file:
default_remap_info	unicode/unifont.c	967;"	d	file:
default_remap_info	unicode/unifont.c	969;"	d	file:
default_resize	windows/default.c	/^static void default_resize(void *data __attribute__((unused)), XConfigureEvent *event)$/;"	f	file:
default_set	windows/default.c	/^static void default_set(void)$/;"	f	file:
default_set_last_pos	windows/default.c	/^static void default_set_last_pos(int x, int y, int w, int h)$/;"	f	file:
default_update	windows/default.c	/^void default_update(void)$/;"	f
defaultbutton	windows/default.c	/^char *defaultbutton[NR_BUTTON] = { "Set", "Save", "Done" };$/;"	v	file:
defaultchar	tools/pktobdf.c	/^integer defaultchar=-2;$/;"	v
defaultfilename	windows/sources.c	/^static Char *defaultfilename = NULL;$/;"	v	file:
defaultfuncs	windows/default.c	/^FUNCTIONS defaultfuncs = {$/;"	v
defaulthelp	windows/default.c	/^int defaulthelp[NR_BUTTON] =$/;"	v	file:
defaultkeystack	keyboard/keyboard.c	/^static KeyStackInfo defaultkeystack = { 0,0};$/;"	v	file:
defaultline	include/popupmenu.h	/^  int defaultline;$/;"	m	struct:PopupLine
defaultsizeval	windows/output.c	/^static int defaultsizeval=0;$/;"	v	file:
defaultstate	util/funcs.c	/^static int defaultstate[7] = {0, 0, 0, 0, 5, 5, 0 };$/;"	v	file:
defaultsurro	markup/markup.c	/^static Uchar defaultsurro[2] = { 0xFFFD,0};$/;"	v	file:
defaultwin	windows/default.c	/^static Window defaultwin;$/;"	v	file:
defdescript	windows/default.c	/^    char *defdescript;$/;"	m	struct:__anon76	file:
defidents	language/parse.y	/^defidents   :	IDENTIFIER$/;"	l
define_color	windows/sources.c	/^static int define_color(XColor *xcol)$/;"	f	file:
define_function	language/function.c	/^FuncRef define_function(char *name, char *description,$/;"	f
define_global_variable	language/variable.c	/^Argument define_global_variable(Type type, char *name)$/;"	f
define_int_constant	language/variable.c	/^Argument define_int_constant(int n)$/;"	f
define_key	keyboard/keyboard.c	/^void define_key(KeyMap *map,  KeyNum key, KeyMode mode, Sequence *func)$/;"	f
define_keyrange	keyboard/keyboard.c	/^void define_keyrange(KeyMap *map, KeyNum keystart, KeyNum keyend,$/;"	f
define_keysequence	keyboard/keyboard.c	/^void define_keysequence(KeyMap *map, int len, KeyNum *keylist,$/;"	f
define_local_variable	language/variable.c	/^Argument define_local_variable(Type type, char *name)$/;"	f
define_operator	language/expression.c	/^void define_operator(Operator op, FuncRef function)$/;"	f
define_program_variable	language/variable.c	/^Argument define_program_variable(Type type, char *name, void *address)$/;"	f
define_prototype	language/prototype.c	/^Prototype *define_prototype(const Type *typelist, const int n,$/;"	f
define_real_constant	language/variable.c	/^Argument define_real_constant(double d)$/;"	f
define_string_constant	language/variable.c	/^Argument define_string_constant(Uchar *s)$/;"	f
define_type	language/types.c	/^Type define_type(char *name, int size,$/;"	f
defpath	util/filefind.c	/^  char *defpath;   \/* default\/built-in path *\/$/;"	m	struct:__anon64	file:
defrange	unicode/unifont.c	/^static int defrange[4]={0,0xffff,-1,-1};$/;"	v	file:
deiconize	include/sources.h	/^    void (*deiconize)(void*);$/;"	m	struct:__anon41
delen_12bit	unicode/uniconv.c	/^static int delen_12bit(Uchar *source, void *data)$/;"	f	file:
delen_16bit	unicode/uniconv.c	/^static int delen_16bit(Uchar *source, void *data)$/;"	f	file:
delen_8bit	unicode/uniconv.c	/^static int delen_8bit(Uchar *source, void *data)$/;"	f	file:
delete	util/debug.c	/^static lfptr delete(lfptr t, void* val)$/;"	f	file:
delete	util/memman.c	/^static lfptr delete(lfptr t, void* val)$/;"	f	file:
delete_char	windows/notadef.c	/^static void delete_char(Index arg)$/;"	f	file:
delete_char_in_name	windows/notadef.c	/^static void delete_char_in_name(Char *name, int n)$/;"	f	file:
delete_check	windows/notadef.c	/^static int delete_check(Char *s, int max)$/;"	f	file:
delete_copied_name	treeedit/node.cc	/^void delete_copied_name(Char* name)$/;"	f
delete_in_version	windows/notadef.c	/^static int delete_in_version(int n)$/;"	f	file:
delete_node	language/leaftree.c	/^static BreanchNode* delete_node(BreanchNode* t, void* val)$/;"	f	file:
delete_node	util/leaftree.c	/^static BreanchNode* delete_node(BreanchNode* t, void* val)$/;"	f	file:
delete_sym	windows/notadef.c	/^static int delete_sym(Char *string, int n)$/;"	f	file:
delta	include/expression.h	/^    signed char delta;  \/* delta on stack (arg -> +1 | op -> 0..-127) *\/$/;"	m	struct:Expression
delta	unicode/drawstring.c	/^    int delta;$/;"	m	struct:__anon95	file:
depth	treeedit/node.cc	/^Index Node::depth() const$/;"	f	class:Node
descent	windows/output.c	/^    short width, ascent, descent, x, y, itemnr,$/;"	m	struct:BOX	file:
descent_dist	tools/pktobdf.c	/^integer ascent_dist[MAXPKCHAR], descent_dist[MAXPKCHAR];$/;"	v
descr	windows/menu.c	/^    char *descr;$/;"	m	struct:ITEMDESC	file:
descript	windows/default.c	/^    Char *descript;$/;"	m	struct:__anon76	file:
description	include/types.h	/^    char *description;$/;"	m	struct:__anon58
description	language/function.c	/^    char *description; \/* UTF8 (easier to write in source files) *\/$/;"	m	struct:__anon1	file:
description	language/userdef.c	/^    char *description;   \/* UTF string *\/$/;"	m	struct:__anon5	file:
description	windows/editlib.c	/^  char *description;$/;"	m	struct:__anon87	file:
description	windows/fileselc.c	/^    Char *description;$/;"	m	struct:__anon71	file:
description	windows/getstring.c	/^  char *description;$/;"	m	struct:__anon78	file:
description	windows/notadef.c	/^  char *description;$/;"	m	struct:__anon90	file:
description	windows/notadef.c	/^struct { char *description;$/;"	m	struct:__anon88	file:
destroy_GCs	windows/sources.c	/^static void destroy_GCs(void)$/;"	f	file:
destroy_keyboard_stack	keyboard/keyboard.c	/^void destroy_keyboard_stack(void *stack)$/;"	f
destroy_local_names	language/variable.c	/^void destroy_local_names(char **local_names)$/;"	f
destroy_notation	templates/notatype.c	/^static void destroy_notation(NOTATION *nota)$/;"	f	file:
destroy_pathinfo	util/filefind.c	/^void destroy_pathinfo(PathInfo pinfo)$/;"	f
destroy_prototype	language/prototype.c	/^void destroy_prototype(Prototype *p)$/;"	f
destroy_rubbish	language/typetest.c	/^static void destroy_rubbish(void *rub)$/;"	f	file:
destroy_version	templates/notatype.c	/^void  destroy_version(VERSION *list, int max)$/;"	f
destroy_window	windows/sources.c	/^void destroy_window(Window win)$/;"	f
destruct	language/types.c	/^    void (*destruct)(void*);       \/* destroy object *\/$/;"	m	struct:__anon2	file:
destruct_selection	treeedit/editor.cc	/^void destruct_selection(void *sel)$/;"	f
destruct_string	language/stringlib.c	/^static void destruct_string(void *object)$/;"	f	file:
detect_attributes	unicode/unifontX11.c	/^static void detect_attributes(FONTREC *frec)$/;"	f	file:
detect_attributes	unicode/unifontsys.c	/^static void detect_attributes(FONTREC *frec)$/;"	f	file:
detect_attributes	unicode/unifontsysstub.c	/^static void detect_attributes(FONTREC *frec)$/;"	f	file:
detect_format_pos	windows/notadef.c	/^static void detect_format_pos(int vnr, int fmnr, int x, int y)$/;"	f	file:
detect_ftype	util/filefind.c	/^static FileType detect_ftype(char *name)$/;"	f	file:
detect_latex_pos	windows/notadef.c	395;"	d	file:
detect_line	windows/notadef.c	/^static int detect_line = -1;$/;"	v	file:
detect_line	windows/remark.c	/^static void detect_line(int xpos, int ypos)$/;"	f	file:
detect_margin	windows/output.c	/^void detect_margin(void)$/;"	f
detect_name_pos	windows/notadef.c	396;"	d	file:
detect_pos	windows/notadef.c	/^static int detect_pos = 0;$/;"	v	file:
dev_t	module/pvsparse.c	/^typedef __dev_t dev_t;$/;"	t	file:
dialog	tools/pktobdf.c	/^static void dialog(gargc, gargv)$/;"	f	file:
dir_select	windows/fileselc.c	/^    Bool dir_select;$/;"	m	struct:__anon71	file:
dirblock	windows/fileselc.c	/^    Char *dirblock;$/;"	m	struct:__anon71	file:
direction	include/markup.h	/^    int direction;\/* direction (left-to-right, right-to-left, level) *\/$/;"	m	struct:_attribs
directory	windows/fileselc.c	/^    Char *directory;$/;"	m	struct:__anon71	file:
dirlist	util/filefind.c	/^  DirInfo *dirlist;$/;"	m	struct:__anon64	file:
dirlist	windows/fileselc.c	/^    Char **dirlist;$/;"	m	struct:__anon71	file:
dirname	include/notatype.h	/^	  Char *dirname;$/;"	m	struct:__anon48
dirnr	windows/fileselc.c	/^    int dirnr, dirsel;$/;"	m	struct:__anon71	file:
dirsel	windows/fileselc.c	/^    int dirnr, dirsel;$/;"	m	struct:__anon71	file:
dirselc_open	windows/fileselc.c	/^void dirselc_open(void (*func)(void*,Char*), void *arg, Char *descript,$/;"	f
dirwin	windows/fileselc.c	/^    Window mainwin, dirwin, filewin;$/;"	m	struct:__anon71	file:
disablecolor	windows/popup.c	/^static Uchar *disablecolor=NULL;$/;"	v	file:
disconnect	windows/notadef.c	/^static Char* disconnect(int vnr, int fmnr, int len)$/;"	f	file:
display	tools/xpipein.c	/^Display *display;$/;"	v
display	tools/xpipeout.c	/^Display *display;$/;"	v
display	unicode/brows.c	/^Display *display;$/;"	v
display	unicode/unifontX11.c	/^static Display *display=0;$/;"	v	file:
display	unicode/unifontsys.c	/^static Display *display=0;$/;"	v	file:
display	windows/sources.c	/^Display *display;$/;"	v
display_delta	treeedit/node.hh	/^    int  display_delta() const { return _display_pos; }$/;"	f	class:Node
display_delta	windows/output.c	/^static int display_delta = 0;$/;"	v	file:
display_height	windows/sources.c	/^unsigned int display_height, display_width;$/;"	v
display_left	treeedit/editor.cc	/^void display_left(Index n)$/;"	f
display_left	treeedit/node.cc	/^void Node::display_left(Index n)$/;"	f	class:Node
display_left	treeedit/select.cc	/^void Select::display_left(Index n)$/;"	f	class:Select
display_right	treeedit/editor.cc	/^void display_right(Index n)$/;"	f
display_right	treeedit/node.cc	/^void Node::display_right(Index n)$/;"	f	class:Node
display_right	treeedit/select.cc	/^void Select::display_right(Index n)$/;"	f	class:Select
display_tab	windows/output.c	/^Bool display_tab(Char data)$/;"	f
display_width	windows/sources.c	/^unsigned int display_height, display_width;$/;"	v
displayname	tools/xpipein.c	/^char *displayname="";$/;"	v
displayname	tools/xpipeout.c	/^char *displayname="";$/;"	v
displayname	windows/sources.c	/^static char *displayname = NULL;$/;"	v	file:
distribute	treeedit/editor.cc	/^void distribute(void)$/;"	f
distribute	treeedit/node.cc	/^Bool Node::distribute(Index begin, Index end, Node* fn, Node* fa,$/;"	f	class:Node
distribute	treeedit/select.cc	/^Bool Select::distribute(Select& f, Select& a)$/;"	f	class:Select
div_t	module/pvsparse.c	/^  } div_t;$/;"	t	typeref:struct:__anon16	file:
divby	unicode/unifont.c	/^    int divby;  \/* multby\/max *\/$/;"	m	struct:__anon97	file:
divby	unicode/virtread.c	/^    int divby;  \/* multby\/max *\/$/;"	m	struct:__anon92	file:
do_auto_save	windows/sources.c	/^static void do_auto_save(void)$/;"	f	file:
do_backspace	windows/getstring.c	/^static void do_backspace(int delta)$/;"	f	file:
do_find	windows/menu.c	/^static void do_find(void)$/;"	f	file:
do_find_backward	windows/menu.c	/^static void do_find_backward(void)$/;"	f	file:
do_full_test	treeedit/editwindow.cc	/^void EditWindow::do_full_test()$/;"	f	class:EditWindow
do_key_press	windows/events.c	/^static void do_key_press(XKeyEvent *event)$/;"	f	file:
do_motion_notify	windows/events.c	/^static void do_motion_notify(int x, int y)$/;"	f	file:
do_nothing	treeedit/editwindow.cc	/^void EditWindow::do_nothing()$/;"	f	class:EditWindow
do_one_line	treeedit/editwindow.cc	/^void EditWindow::do_one_line()$/;"	f	class:EditWindow
do_search	treeedit/editwindow.cc	/^void EditWindow::do_search()$/;"	f	class:EditWindow
do_shades	treeedit/editwindow.cc	/^void EditWindow::do_shades()$/;"	f	class:EditWindow
do_shades_noxor	treeedit/editwindow.cc	/^void EditWindow::do_shades_noxor()$/;"	f	class:EditWindow
do_test	treeedit/editwindow.cc	/^void EditWindow::do_test()$/;"	f	class:EditWindow
do_test_noxor	treeedit/editwindow.cc	/^void EditWindow::do_test_noxor()$/;"	f	class:EditWindow
do_visible	treeedit/editwindow.cc	/^void EditWindow::do_visible()$/;"	f	class:EditWindow
donesave	windows/edit.c	/^static Char *donesave[] = {0,0,0,0};$/;"	v	file:
donesave8	windows/edit.c	/^static char *donesave8[] = { " Yes ", " No ", " Cancel ", 0 };$/;"	v	file:
double_click	windows/sources.c	/^Bool   double_click = MP_False;$/;"	v
double_click_func	windows/buffer.c	/^static void double_click_func(void *data __attribute__((unused)))$/;"	f	file:
double_click_func	windows/edit.c	/^static void double_click_func(void *data)$/;"	f	file:
double_click_func	windows/find.c	/^static void double_click_func(void *data)$/;"	f	file:
doubleadd	language/reallib.c	/^static double doubleadd(double i, double j)$/;"	f	file:
doublediff	keyboard/keyboard.c	/^static unsigned long doublediff=300;$/;"	v	file:
doubledivide	language/reallib.c	/^static double doubledivide(double i, double j)$/;"	f	file:
doubleequal	language/reallib.c	/^static double doubleequal(double i, double j)$/;"	f	file:
doublegreater	language/reallib.c	/^static double doublegreater(double i, double j)$/;"	f	file:
doublegreaterequal	language/reallib.c	/^static double doublegreaterequal(double i, double j)$/;"	f	file:
doubleland	language/reallib.c	/^static double doubleland(double i, double j)$/;"	f	file:
doubleless	language/reallib.c	/^static double doubleless(double i, double j)$/;"	f	file:
doublelessequal	language/reallib.c	/^static double doublelessequal(double i, double j)$/;"	f	file:
doublelnot	language/reallib.c	/^static double doublelnot(double i)$/;"	f	file:
doublelor	language/reallib.c	/^static double doublelor(double i, double j)$/;"	f	file:
doublelxor	language/reallib.c	/^static double doublelxor(double i, double j)$/;"	f	file:
doubleminus	language/reallib.c	/^static double doubleminus(double i, double j)$/;"	f	file:
doublemult	language/reallib.c	/^static double doublemult(double i, double j)$/;"	f	file:
doublenot	language/reallib.c	/^static double doublenot(double i)$/;"	f	file:
doublenotequal	language/reallib.c	/^static double doublenotequal(double i, double j)$/;"	f	file:
doubleremain	language/reallib.c	/^static double doubleremain(double i, double j)$/;"	f	file:
doubleshiftleft	language/reallib.c	/^static double doubleshiftleft(double i, double j)$/;"	f	file:
doubleshiftright	language/reallib.c	/^static double doubleshiftright(double i, double j)$/;"	f	file:
doublexor	language/reallib.c	/^static double doublexor(double i, double j)$/;"	f	file:
down	treeedit/editor.cc	/^void down(Index)$/;"	f
down	treeedit/select.cc	/^void Select::down()$/;"	f	class:Select
downcase_word	treeedit/editor.cc	/^void downcase_word(void)$/;"	f
downrightcursor	windows/scrollbar.c	64;"	d	file:
drag_time	windows/sources.c	/^unsigned long press_time = 0, drag_time = 0, release_time = 0;$/;"	v
dragdiff	keyboard/keyboard.c	/^static unsigned long dragdiff=300;$/;"	v	file:
dragged	windows/popup.c	/^static int dragged;$/;"	v	file:
drand48_data	module/pvsparse.c	/^struct drand48_data$/;"	s	file:
draw	include/sources.h	/^    void (*draw)(void*);$/;"	m	struct:__anon41
draw	treeedit/editwindow.cc	/^void EditWindow::draw(Pfv run, Pfv body, Pfm tb, Pfm te, Pfm br,$/;"	f	class:EditWindow
draw_accents	unicode/drawstring.c	/^static void draw_accents(int x, int y)$/;"	f	file:
draw_all	windows/notadef.c	/^static void draw_all(void)$/;"	f	file:
draw_all	windows/notation.c	/^static void draw_all(NOTATIONINFO *ninf)$/;"	f	file:
draw_box	windows/output.c	/^static int draw_box(BOX *b, int x, int y, int ascent, int descent,int code)$/;"	f	file:
draw_char	windows/symbol.c	/^static void draw_char(SYMBOLINFO *sinfo, int i, int j, TextMode gcnr)$/;"	f	file:
draw_cursor	windows/notadef.c	/^static void draw_cursor(int vnr, int fmnr)$/;"	f	file:
draw_cursors	windows/output.c	/^static void draw_cursors(void)$/;"	f	file:
draw_data	windows/notadef.c	/^static void draw_data(void)$/;"	f	file:
draw_format	windows/notadef.c	/^static void draw_format(int vnr, int fmnr, char *desc,$/;"	f	file:
draw_format_args	windows/notadef.c	/^static void draw_format_args(int vnr, int fmnr)$/;"	f	file:
draw_itemlist	windows/notadef.c	/^static void draw_itemlist(void)$/;"	f	file:
draw_latex	windows/notadef.c	284;"	d	file:
draw_line	windows/notadef.c	495;"	d	file:
draw_line	windows/popup.c	/^static void draw_line(PopupLine *ml, Window win_id, int ww, int reverse)$/;"	f	file:
draw_message	windows/output.c	/^void draw_message(void)$/;"	f
draw_name	windows/notadef.c	285;"	d	file:
draw_nameline	windows/fileselc.c	/^static void draw_nameline(Char *s, int i, int start, int end, int sel)$/;"	f	file:
draw_notahelpname	windows/notadef.c	311;"	d	file:
draw_notaname	windows/notadef.c	310;"	d	file:
draw_notaname_args	windows/notadef.c	/^static void draw_notaname_args(int y, Char *desc,$/;"	f	file:
draw_notation_line	windows/notation.c	/^static void draw_notation_line(NOTATIONINFO *ninf, int line, int col)$/;"	f	file:
draw_pos	windows/remark.c	/^static int draw_pos = 0, nr_visible = 0;$/;"	v	file:
draw_rectangle	windows/scrollbar.c	/^static void draw_rectangle(Window win, int x, int xs, int kind, TextMode col)$/;"	f	file:
draw_screen	windows/notadef.c	283;"	d	file:
draw_search	windows/menu.c	/^static void draw_search(void)$/;"	f	file:
draw_string	unicode/drawstring.c	/^void draw_string(Uchar *string, short fontattrib,$/;"	f
draw_text	unicode/brows.c	/^int draw_text(void)$/;"	f
draw_title	windows/popup.c	/^static void draw_title(MENU *m, Bool inverse)$/;"	f	file:
draw_version	windows/notadef.c	/^static void draw_version(int nr)$/;"	f	file:
draw_words	unicode/brows.c	/^int draw_words(int x, int y, XTextItem16 *txt, int len)$/;"	f
drawitem	unicode/drawstring.c	/^static WordItem drawitem[5000];$/;"	v	file:
drawstring	unicode/drawstring.c	/^static FontChar drawstring[5000];$/;"	v	file:
drawstyle	windows/notadef.c	/^static int drawstyle=VISIBLE;$/;"	v	file:
drawwin_id	windows/edit.c	/^typedef struct { Window win_id, drawwin_id;$/;"	m	struct:__anon69	file:
drindex	windows/output.c	/^static Bool drindex = MP_False;$/;"	v	file:
dummy	module/hugsparse.c	/^static Char dummy[2];$/;"	v	file:
dummy	tools/xpipein.c	/^Atom dummy,testend,textprop;$/;"	v
dummy	tools/xpipeout.c	/^Atom dummy,textprop, testend;$/;"	v
dummy_function	windows/notation.c	/^static void dummy_function(void *data __attribute__((unused)),$/;"	f	file:
dummyval	language/expression.c	/^static Value dummyval;$/;"	v	file:
dummyval	language/userdef.c	/^static Value dummyval;$/;"	v	file:
dump_translation	util/translate.c	/^void dump_translation(char *name, TransLang *lang)$/;"	f
dx	windows/symbol.c	/^	 int dx, dy;$/;"	m	struct:__anon85	file:
dy	windows/symbol.c	/^	 int dx, dy;$/;"	m	struct:__anon85	file:
dynf	tools/pktobdf.c	/^integer dynf ;$/;"	v
e	treeedit/editwindow.cc	/^Mark& EditWindow::e()$/;"	f	class:EditWindow
echo_string	module/SEJ.c	/^static void echo_string(void *string, int n)$/;"	f	file:
edit_attr	windows/edit.c	/^static XSetWindowAttributes edit_attr;$/;"	v	file:
edit_auto_save	windows/edit.c	/^static void edit_auto_save(void *data, int dump)$/;"	f	file:
edit_bad_end	windows/edit.c	/^void edit_bad_end(void *data)$/;"	f
edit_close	windows/edit.c	/^void edit_close(void *data)$/;"	f
edit_deiconize	windows/edit.c	/^static void edit_deiconize(void *data)$/;"	f	file:
edit_draw	windows/edit.c	/^static void edit_draw(void *data)$/;"	f	file:
edit_fnr	templates/notatype.c	/^int edit_fnr=-1;$/;"	v
edit_handle_button	windows/edit.c	/^static void edit_handle_button(void *data, int b_num)$/;"	f	file:
edit_handle_fileselc_output	windows/edit.c	/^static void edit_handle_fileselc_output(void *data, Char *name)$/;"	f	file:
edit_handle_fileselc_rename	windows/edit.c	/^static void edit_handle_fileselc_rename(void *data, Char *name)$/;"	f	file:
edit_handle_fileselc_save	windows/edit.c	/^static void edit_handle_fileselc_save(void *data, Char *name)$/;"	f	file:
edit_handle_remark_done	windows/edit.c	/^static void edit_handle_remark_done(void *data, int bnr)$/;"	f	file:
edit_iconize	windows/edit.c	/^static void edit_iconize(void *data)$/;"	f	file:
edit_iconized	documents/system.c	/^    edit_iconized = 0,$/;"	v
edit_init	windows/edit.c	/^void edit_init(void)$/;"	f
edit_is_open	documents/system.c	/^    edit_is_open = 0,$/;"	v
edit_last_pos	windows/edit.c	/^static int edit_last_pos(int *x, int *y, int *w, int *h)$/;"	f	file:
edit_layout_change	windows/edit.c	/^static void edit_layout_change(void *data)$/;"	f	file:
edit_margin	windows/edit.c	/^static int edit_margin(void *data)$/;"	f	file:
edit_mask	windows/edit.c	/^static unsigned long edit_mask;$/;"	v	file:
edit_motion	windows/edit.c	/^static void edit_motion(void *data, int x, int y)$/;"	f	file:
edit_open	windows/edit.c	/^void edit_open(void)$/;"	f
edit_press	windows/edit.c	/^static void edit_press(void *data, XButtonEvent *event)$/;"	f	file:
edit_property_handle	windows/edit.c	/^static void edit_property_handle(void *data, XPropertyEvent *event)$/;"	f	file:
edit_release	windows/edit.c	/^static void edit_release(void *data, XButtonEvent *event)$/;"	f	file:
edit_resize	windows/edit.c	/^static void edit_resize(void *data, XConfigureEvent *event)$/;"	f	file:
edit_saved	windows/edit.c	/^Bool edit_saved(void *data)$/;"	f
edit_scrollto	windows/edit.c	/^static void edit_scrollto(void *data, int kind)$/;"	f	file:
edit_send_to_proces	windows/edit.c	/^static void edit_send_to_proces(void *data, unsigned char *txt, int len)$/;"	f	file:
edit_set_last_pos	windows/edit.c	/^static void edit_set_last_pos(int x, int y, int w, int h)$/;"	f	file:
edit_set_number_of_lines	windows/edit.c	/^void edit_set_number_of_lines(void *window, int numlin)$/;"	f
edit_signal_to_proces	windows/edit.c	/^void edit_signal_to_proces(int signl, Char *shname)$/;"	f
edit_state	windows/edit.c	/^static void edit_state(void *data, int *x, int*y, int *w, int *h,$/;"	f	file:
edit_string_to_proces	windows/edit.c	/^void edit_string_to_proces(Char *txt, Char *shname)$/;"	f
edit_use_state	windows/edit.c	/^static void edit_use_state(int x, int y, int w, int h,$/;"	f	file:
editbutton	windows/edit.c	/^char *editbutton[NR_BUTTON+1] = { "Load",  "Save", "Rename",$/;"	v	file:
editfuncs	windows/edit.c	/^FUNCTIONS editfuncs = {$/;"	v
edithelp	windows/edit.c	/^int edithelp[NR_BUTTON+1] =$/;"	v	file:
editnotation	windows/notadef.c	/^static int editnotation=-1, afternotation=-1;$/;"	v	file:
editnr	windows/notadef.c	/^static int editnr = 0;$/;"	v	file:
editversion	windows/notadef.c	/^static VERSION *editversion = NULL;$/;"	v	file:
editwindow_line	treeedit/editor.cc	/^void editwindow_line(void* w, int ln)$/;"	f
editwindow_topto	treeedit/editor.cc	/^void editwindow_topto(void *w, Char *str)$/;"	f
eightbits	tools/pktobdf.c	/^typedef quarterword eightbits ;$/;"	t	file:
elsedolist	language/parse.y	/^elsedolist  :	\/* empty *\/$/;"	l
elseiflist	language/parse.y	/^elseiflist  :	\/* empty *\/$/;"	l
elval	language/parse.c	/^	ExprList elval;$/;"	m	union:__anon14	file:
empcall	language/prototype.c	/^static int empcall(int (*fcal)(), void **args __attribute__((unused)))$/;"	f	file:
empty	documents/fileread.c	/^static READSTACK empty = { NULL,NULL,0,0,0};$/;"	v	file:
empty	treeedit/editwindow.hh	/^    Bool empty() { return (root->size()==0); }$/;"	f	class:EditWindow
empty	windows/edit.c	/^                 Bool saved, iconized, auto_saved, view_mode, empty,$/;"	m	struct:__anon69	file:
emptyUchar	unicode/unicode.c	/^static Uchar emptyUchar[256] = { 0 };$/;"	v	file:
empty_charmap	unicode/unifont.c	/^static MapInt empty_charmap=0;$/;"	v	file:
empty_submap	unicode/unimap.c	/^int empty_submap(void *ref)$/;"	f
empty_val	language/variable.c	/^static Value empty_val= {0};$/;"	v	file:
emptybool	unicode/unicode.c	/^static Bool emptybool[256] = { 0 };$/;"	v	file:
emptychar	unicode/unicode.c	/^static char emptychar[256] = { 0 };$/;"	v	file:
emptysubmap	unicode/unimap.c	/^} emptysubmap;$/;"	v	typeref:union:__anon93	file:
enabled	documents/fileread.c	/^static char enabled[128];$/;"	v	file:
enabled	include/popupmenu.h	/^  int enabled;$/;"	m	struct:PopupLine
enabled_range	unicode/unifontX11.c	/^static int enabled_range=0;$/;"	v	file:
enabled_range	unicode/unifontsys.c	/^static int enabled_range=0;$/;"	v	file:
encmap	unicode/unifont.c	/^    MapUchar encmap;$/;"	m	struct:ENCODINGREC	file:
encmap	unicode/virtread.c	/^    MapUchar encmap;$/;"	m	struct:ENCODINGREC	file:
encode	documents/fileread.c	/^static char *encode = "0123456789abcdef";$/;"	v	file:
encode	include/uniconv.h	/^    Uchar *(*encode)(unsigned char *, Uchar *, void *);$/;"	m	struct:__anon42
encode_12bit	unicode/uniconv.c	/^static Uchar *encode_12bit(unsigned char *source, Uchar *target, void *data)$/;"	f	file:
encode_16bit	unicode/uniconv.c	/^static Uchar *encode_16bit(unsigned char *source, Uchar *target, void *data)$/;"	f	file:
encode_8bit	unicode/uniconv.c	/^static Uchar *encode_8bit(unsigned char *source, Uchar *target, void *data)$/;"	f	file:
encode_pos	windows/notation.c	270;"	d	file:
encoding	unicode/unifont.c	/^    ENCODINGREC *encoding;$/;"	m	struct:FONTREC	file:
encoding	unicode/virtread.c	/^    ENCODINGREC *encoding;$/;"	m	struct:FONTREC	file:
encodinglist	unicode/unifont.c	/^static ENCODINGREC *encodinglist=NULL;$/;"	v	file:
encodinglist	unicode/virtread.c	/^static ENCODINGREC *encodinglist=NULL;$/;"	v	file:
end	treeedit/select.hh	/^    Marker end;$/;"	m	class:Select
end_kill_sequence	treeedit/editor.cc	/^static void end_kill_sequence()$/;"	f	file:
end_of_buffer	treeedit/editor.cc	/^void end_of_buffer(void)$/;"	f
end_of_buffer	treeedit/select.cc	/^void Select::end_of_buffer()$/;"	f	class:Select
end_of_line	treeedit/editor.cc	/^void end_of_line(void)$/;"	f
end_of_line	treeedit/select.cc	/^void Select::end_of_line()$/;"	f	class:Select
end_pixel	windows/scrollbar.c	/^static int end_pixel(SCROLLBARINFO *sbi)$/;"	f	file:
end_ptr	module/pvsparse.c	/^    int32_t *end_ptr;$/;"	m	struct:random_data	file:
end_search	windows/menu.c	/^static void end_search(void)$/;"	f	file:
end_search_oldpos	windows/menu.c	/^static void end_search_oldpos(void)$/;"	f	file:
end_stack	treeedit/node.cc	/^static Node* end_stack=Empty;$/;"	v	file:
enddata	include/popup.h	/^  void *enddata;$/;"	m	struct:MENU
endfunc	include/popup.h	/^  void (*endfunc)(void*);$/;"	m	struct:MENU
endlen	module/pvs.c	/^  int endlen;$/;"	m	struct:__anon15	file:
endline	windows/output.c	/^static void endline(void)$/;"	f	file:
endname	tools/xpipein.c	/^char *endname="MPINTEST";$/;"	v
endname	tools/xpipeout.c	/^char *endname="MPOUTTEST";$/;"	v
endstack	tools/xpipein.c	/^STRSTACK *endstack = NULL;$/;"	v
endstack	tools/xpipeout.c	/^STRSTACK *endstack = NULL;$/;"	v
endstr	module/pvs.c	/^  char *endstr;$/;"	m	struct:__anon15	file:
enfail	include/uniconv.h	/^    unsigned char *(*enfail)(unsigned char *, void*);$/;"	m	struct:__anon42
enfail_12bit	unicode/uniconv.c	/^static unsigned char *enfail_12bit(unsigned char *source, void *data)$/;"	f	file:
enfail_16bit	unicode/uniconv.c	/^static unsigned char *enfail_16bit(unsigned char *source, void *data)$/;"	f	file:
enfail_8bit	unicode/uniconv.c	/^static unsigned char *enfail_8bit(unsigned char *source, void *data)$/;"	f	file:
enlen	unicode/convert.c	/^int enlen;$/;"	v
enlen_12bit	unicode/uniconv.c	/^static int enlen_12bit(unsigned char *source, void *data)$/;"	f	file:
enlen_16bit	unicode/uniconv.c	/^static int enlen_16bit(unsigned char *source, void *data)$/;"	f	file:
enlen_8bit	unicode/uniconv.c	/^static int enlen_8bit(unsigned char *source, void *data)$/;"	f	file:
enter	include/sources.h	/^    void (*enter)(void*);$/;"	m	struct:__anon41
entries	util/translate.c	/^  int entries;             \/* how many entries are there *\/$/;"	m	struct:__anon67	file:
envbuf	windows/edit.c	/^static char envbuf[3000];$/;"	v	file:
envname	util/filefind.c	/^  char *envname;   \/* environment variable  *\/$/;"	m	struct:__anon64	file:
epsclosure	util/fstate.c	180;"	d	file:
epval	language/parse.c	/^	ExprPair epval;$/;"	m	union:__anon14	file:
equal	util/fstate.c	/^static int equal(BITSET *a, BITSET *b)$/;"	f	file:
equal_diff	treeedit/node.cc	/^Bool Node::equal_diff(Node *compare_with, Node **leftres, Node **rightres)$/;"	f	class:Node
equal_uid	module/pvsparse.c	/^  equal_uid=3383944400UL,$/;"	v	file:
equalhint_uid	module/pvs.c	/^static unsigned long  equalhint_uid = 2946556487ul;$/;"	v	file:
error_func	util/debug.c	/^static void error_func(void)$/;"	f	file:
error_func	util/memman.c	/^static void error_func(void)$/;"	f	file:
error_handler	tools/xpipein.c	/^static int error_handler(Display *d __attribute__((unused)), XErrorEvent *err __attribute__((unused)))$/;"	f	file:
error_handler	tools/xpipeout.c	/^static int error_handler(Display *d __attribute__((unused)), XErrorEvent *err __attribute__((unused)))$/;"	f	file:
error_handler	windows/sources.c	/^static int error_handler(Display *d, XErrorEvent *err)$/;"	f	file:
error_node	treeedit/node.cc	/^void * Node::error_node(Char *errtext, int len)$/;"	f	class:Node
error_status	language/function.c	/^int error_status=0;$/;"	v
esrevart	treeedit/mark.cc	/^Char Mark::esrevart()$/;"	f	class:Mark
eval	language/parse.c	/^	Expression *eval;$/;"	m	union:__anon14	file:
eval_sequence	language/sequence.c	/^int eval_sequence(Sequence *seq)$/;"	f
event	tools/xpipein.c	/^XEvent event;$/;"	v
event	tools/xpipeout.c	/^XEvent event;$/;"	v
eventfunc	windows/sources.c	/^FUNCTIONS *eventfunc[MAXWINDOWTYPE] =$/;"	v
ewlist	treeedit/editwindow.cc	/^EditWindow* EditWindow::ewlist = 0;$/;"	m	class:EditWindow	file:
ewlist	treeedit/editwindow.hh	/^    static EditWindow* ewlist;$/;"	m	class:EditWindow
exec_prefix	documents/Makefile	/^exec_prefix     = ${prefix}$/;"	m
exec_prefix	include/Makefile	/^exec_prefix     = ${prefix}$/;"	m
exec_prefix	keyboard/Makefile	/^exec_prefix     = ${prefix}$/;"	m
exec_prefix	language/Makefile	/^exec_prefix     = ${prefix}$/;"	m
exec_prefix	markup/Makefile	/^exec_prefix     = ${prefix}$/;"	m
exec_prefix	module/Makefile	/^exec_prefix     = ${prefix}$/;"	m
exec_prefix	output/Makefile	/^exec_prefix     = ${prefix}$/;"	m
exec_prefix	templates/Makefile	/^exec_prefix     = ${prefix}$/;"	m
exec_prefix	tools/Makefile	/^exec_prefix     = ${prefix}$/;"	m
exec_prefix	treeedit/Makefile	/^exec_prefix     = ${prefix}$/;"	m
exec_prefix	unicode/Makefile	/^exec_prefix     = ${prefix}$/;"	m
exec_prefix	util/Makefile	/^exec_prefix     = ${prefix}$/;"	m
exec_prefix	windows/Makefile	/^exec_prefix     = ${prefix}$/;"	m
exist_window	windows/sources.c	/^Bool exist_window(Window win)$/;"	f
expand_environment	util/funcs.c	/^static Char *expand_environment(Char *name)$/;"	f	file:
expand_flex	util/flexarray.c	/^static int expand_flex(FlexArray *fl, int sz)$/;"	f	file:
expand_gap	windows/output.c	/^static void expand_gap(BOX *gap, int width)$/;"	f	file:
expand_user	util/funcs.c	/^static void expand_user(Char *name, Char *result)$/;"	f	file:
expand_windows	windows/sources.c	/^static int expand_windows(int nr)$/;"	f	file:
expr	include/expression.h	/^    Expression *expr;$/;"	m	struct:__anon51
expr	treeedit/node.hh	/^    Bool  expr() const { return IsDispOrExpr(_kind) && !stencil &&$/;"	f	class:Node
expr_stack	language/expression.c	/^static void expr_stack(void)$/;"	f	file:
expression	language/parse.y	/^expression  :	INTEGER$/;"	l
expression	module/pvsparse.y	/^expression  : expression PLUS$/;"	l
exprlist	language/parse.y	/^exprlist    :	\/* empty *\/$/;"	l
ext	util/filefind.c	/^  char *ext;      \/* extension *\/$/;"	m	struct:__anon63	file:
ext	util/filefind.c	/^  char *ext;$/;"	m	struct:__anon64	file:
extension	util/filefind.c	/^  char *extension;$/;"	m	struct:ExtenInfo	file:
extension	windows/edit.c	/^	 char *extension;$/;"	m	struct:__anon68	file:
extlen	util/filefind.c	/^  int extlen;     \/* length of extension *\/$/;"	m	struct:__anon63	file:
extlen	util/filefind.c	/^  int extlen;$/;"	m	struct:ExtenInfo	file:
extlist	util/filefind.c	/^  ExtenInfo *extlist;$/;"	m	struct:__anon64	file:
extrabyte	unicode/unistring.c	/^static char extrabyte[128] = {$/;"	v	file:
extract_filename	templates/notatype.c	/^static void extract_filename(Char *fullname, Char ** dirname, Char **filename)$/;"	f	file:
f	tools/xpipein.c	/^FILE *f;$/;"	v
f	util/filefind.c	/^  FILE *f;$/;"	m	struct:ExtFileInfo	file:
fac	language/example.c	/^void fac(int *r, int a)$/;"	f
factorise	treeedit/editor.cc	/^void factorise(void)$/;"	f
factorise	treeedit/node.cc	/^Bool Node::factorise(Index begin, Index end, Node* fn, Node* fa)$/;"	f	class:Node
factorise	treeedit/select.cc	/^Bool Select::factorise(Select& f, Select& a)$/;"	f	class:Select
failed	module/pvs.c	/^  int failed;            \/* did the step fail *\/$/;"	m	struct:ProofStep	file:
failure	util/funcs.c	/^Bool failure=MP_False;$/;"	v
familyname	tools/pktobdf.c	/^char *familyname=NULL;$/;"	v
father	treeedit/node.hh	/^    Marker father;   \/\/ Pointer to father + position in father's string.$/;"	m	class:Node
fattrib	windows/output.c	/^          special,fattrib,cattrib;$/;"	m	struct:BOX	file:
fbox	windows/output.c	/^    BOX *fbox, *lbox, *nbox;$/;"	m	struct:BOX	file:
fcopy	treeedit/node.cc	/^Node* Node::fcopy(Index begin,Index end,Node* an,Index ab,Index ae,Node*& fa)$/;"	f	class:Node
fd_mask	module/pvsparse.c	/^typedef __fd_mask fd_mask;$/;"	t	file:
fd_set	module/pvsparse.c	/^  } fd_set;$/;"	t	typeref:struct:__anon20	file:
fgcolor	include/markup.h	/^    int fgcolor;  \/* foreground color (0x00rrggbb) *\/$/;"	m	struct:_attribs
fgetBool	treeedit/node.cc	/^Bool fgetBool(FILE* f)$/;"	f
fgetChar	treeedit/node.cc	/^Char fgetChar(FILE* f)$/;"	f
fgetIndex	treeedit/node.cc	/^Index fgetIndex(FILE* f)$/;"	f
fgetRune	treeedit/node.cc	/^Char fgetRune(FILE* f)$/;"	f
fi	windows/menu.c	/^static int argnr=0,bi=0,fi=0, cpos=-1;$/;"	v	file:
field	module/pvs.c	/^static char *field[40];$/;"	v	file:
field	windows/default.c	/^} field[NR_FIELD] = {$/;"	v	typeref:struct:__anon76	file:
fields	module/pvs.c	/^static int fields(unsigned char *buffer)$/;"	f	file:
file	language/parse.y	/^file	    :	\/* empty *\/$/;"	l
file	module/pvs.c	/^  char *file;$/;"	m	struct:PVSProof	file:
file_loaded	templates/notatype.c	/^static int file_loaded(Char *filename)$/;"	f	file:
file_size	util/filefind.c	/^int file_size(PathInfo p, char *name)$/;"	f
file_size	util/funcs.c	/^static int file_size(Char *name)$/;"	f	file:
file_type_use	documents/fileread.c	/^static char *file_type_use[MAXFILE] = { "",$/;"	v	file:
fileblock	windows/fileselc.c	/^    Char *fileblock;$/;"	m	struct:__anon71	file:
filebutton	windows/fileselc.c	/^static char *filebutton[NR_BUTTON] = { " OK ", " Rescan ", " Cancel " };$/;"	v	file:
filechar	windows/sources.c	/^static Char **filechar[NR_FILEDESC_OLD] =$/;"	v	file:
filecom	util/filefind.c	/^} filecom[FileMaxType] = {$/;"	v	typeref:struct:__anon63	file:
filedesc	windows/sources.c	/^static char *filedesc[NR_FILEDESC_OLD] =$/;"	v	file:
filehelp	windows/fileselc.c	/^static int filehelp[NR_BUTTON] =$/;"	v	file:
fileint	windows/sources.c	/^static int *fileint[NR_FILEDESC_OLD] =$/;"	v	file:
filelist	windows/fileselc.c	/^    Char **filelist;$/;"	m	struct:__anon71	file:
filelist	windows/sources.c	/^static FileList *filelist=NULL;$/;"	v	file:
filelocks	templates/notatype.c	/^static INTSTACK *filelocks=0;$/;"	v	file:
filename	tools/pktobdf.c	/^char *filename ;$/;"	v
filename	windows/edit.c	/^                 Char *headername, *filename, *pathname, *outputname;$/;"	m	struct:__anon69	file:
filename	windows/sources.c	/^  Char *filename;$/;"	m	struct:FileList	file:
filenof	tools/xpipein.c	/^int filenof=0;$/;"	v
filenr	windows/fileselc.c	/^    int filenr, filesel;$/;"	m	struct:__anon71	file:
filesel	windows/fileselc.c	/^    int filenr, filesel;$/;"	m	struct:__anon71	file:
fileselc	windows/default.c	/^    int fileselc;$/;"	m	struct:__anon76	file:
fileselc_OK_action	windows/fileselc.c	/^static void fileselc_OK_action(void)$/;"	f	file:
fileselc_bad_end	windows/fileselc.c	/^static void fileselc_bad_end(void *data)$/;"	f	file:
fileselc_completion	windows/fileselc.c	/^static void fileselc_completion(void)$/;"	f	file:
fileselc_deiconize	windows/fileselc.c	/^static void fileselc_deiconize(void *data __attribute__((unused)))$/;"	f	file:
fileselc_double_click	windows/fileselc.c	/^static void fileselc_double_click(void *data)$/;"	f	file:
fileselc_draw	windows/fileselc.c	/^static void fileselc_draw(void *data)$/;"	f	file:
fileselc_handle_button	windows/fileselc.c	/^static void fileselc_handle_button(void *data __attribute__((unused)), int b_num)$/;"	f	file:
fileselc_icon	windows/fileselc.c	/^static XTextProperty fileselc_name, fileselc_icon;$/;"	v	file:
fileselc_iconize	windows/fileselc.c	/^static void fileselc_iconize(void *data __attribute__((unused)))$/;"	f	file:
fileselc_init	windows/fileselc.c	/^void fileselc_init(void)$/;"	f
fileselc_last_pos	windows/fileselc.c	/^static int fileselc_last_pos(int *x, int *y, int *w, int *h)$/;"	f	file:
fileselc_layout_change	windows/fileselc.c	/^static void fileselc_layout_change(void *data __attribute__((unused)))$/;"	f	file:
fileselc_motion	windows/fileselc.c	/^static void fileselc_motion(void *data, int x __attribute__((unused)), int y)$/;"	f	file:
fileselc_name	windows/fileselc.c	/^static XTextProperty fileselc_name, fileselc_icon;$/;"	v	file:
fileselc_open	windows/fileselc.c	/^void fileselc_open(void (*func)(void*,Char*), void *arg, Char *descript,$/;"	f
fileselc_press	windows/fileselc.c	/^static void fileselc_press(void *data, XButtonEvent *event)$/;"	f	file:
fileselc_release	windows/fileselc.c	/^static void fileselc_release(void *data, XButtonEvent *event __attribute__((unused)))$/;"	f	file:
fileselc_rescan	windows/fileselc.c	/^static void fileselc_rescan(int completion)$/;"	f	file:
fileselc_rescan_action	windows/fileselc.c	/^static void fileselc_rescan_action(void)$/;"	f	file:
fileselc_resize	windows/fileselc.c	/^static void fileselc_resize(void *data __attribute__((unused)), XConfigureEvent *event)$/;"	f	file:
fileselc_scrollto	windows/fileselc.c	/^static void fileselc_scrollto(void *data, int kind __attribute__((unused)))$/;"	f	file:
fileselc_set_last_pos	windows/fileselc.c	/^static void fileselc_set_last_pos(int x, int y, int w, int h)$/;"	f	file:
fileselc_update_window	windows/fileselc.c	/^void fileselc_update_window(void)$/;"	f
fileselcfuncs	windows/fileselc.c	/^FUNCTIONS fileselcfuncs = {$/;"	v
fileselcname	windows/fileselc.c	/^static char *fileselcname=FILESELNAME, *iconname=ICONNAME;$/;"	v	file:
filewin	windows/fileselc.c	/^    Window mainwin, dirwin, filewin;$/;"	m	struct:__anon71	file:
fill_column	treeedit/editwindow.cc	/^Offset EditWindow::fill_column;$/;"	m	class:EditWindow	file:
fill_column	treeedit/editwindow.hh	/^    static Offset fill_column;$/;"	m	class:EditWindow
fill_find_nr	treeedit/node.cc	/^void Node::fill_find_nr(Char* nlist, Char &n)$/;"	f	class:Node
fillocks	include/notatype.h	/^	  int locks,fillocks;$/;"	m	struct:__anon47
filter_linenr	windows/menu.c	/^static void filter_linenr(Char *name)$/;"	f	file:
filter_savetime	windows/menu.c	/^static void filter_savetime(Char *name)$/;"	f	file:
filter_selection	treeedit/editor.cc	/^void filter_selection(void *selection, Char *string)$/;"	f
filter_template_selection	treeedit/editor.cc	/^void filter_template_selection(void *selection, Index *templatenr)$/;"	f
final	util/fstate.c	/^    int final;$/;"	m	struct:__anon60	file:
find	treeedit/mark.cc	/^Bool Mark::find(Char *str, int n)$/;"	f	class:Mark
find	treeedit/select.cc	/^Bool Select::find(Char *str)$/;"	f	class:Select
find_accent_line	unicode/drawstring.c	/^static int find_accent_line(int voffset)$/;"	f	file:
find_alias	unicode/unifont.c	/^static void *find_alias(char *name, int aliastype)$/;"	f	file:
find_alias	unicode/virtread.c	/^static void *find_alias(char *name, int aliastype)$/;"	f	file:
find_aliasname	unicode/unifont.c	/^static void *find_aliasname(char *name, int *aliastype)$/;"	f	file:
find_aliasname	unicode/virtread.c	/^static void *find_aliasname(char *name, int *aliastype)$/;"	f	file:
find_backward_stencil	treeedit/editor.cc	/^Bool find_backward_stencil(Index nnr)$/;"	f
find_backward_string	treeedit/editor.cc	/^Bool find_backward_string(Char *str)$/;"	f
find_bad_end	windows/find.c	/^static void find_bad_end(void *data __attribute__((unused)))$/;"	f	file:
find_close	windows/find.c	/^void find_close(void)$/;"	f
find_color	windows/sources.c	/^static int find_color(XColor *xcol)$/;"	f	file:
find_deiconize	windows/find.c	/^static void find_deiconize(void *data __attribute__((unused)))$/;"	f	file:
find_draw	windows/find.c	/^static void find_draw(void *data)$/;"	f	file:
find_handle_button	windows/find.c	/^static void find_handle_button(void *data __attribute__((unused)), int b_num)$/;"	f	file:
find_iconize	windows/find.c	/^static void find_iconize(void *data __attribute__((unused)))$/;"	f	file:
find_iconized	documents/system.c	/^    find_iconized = 0,$/;"	v
find_info	windows/find.c	/^static void *scrollfind, *scrollrep, *find_info, *rep_info;$/;"	v	file:
find_init	windows/find.c	/^void find_init(void)$/;"	f
find_is_open	documents/system.c	/^    find_is_open = 0,$/;"	v
find_last_pos	windows/find.c	/^static int find_last_pos(int *x, int *y, int *w, int *h)$/;"	f	file:
find_layout_change	windows/find.c	/^static void find_layout_change(void *data __attribute__((unused)))$/;"	f	file:
find_load_items	windows/menu.c	/^static void find_load_items(Char *name)$/;"	f	file:
find_margin	windows/find.c	/^static int find_margin(void *data __attribute__((unused)))$/;"	f	file:
find_motion	windows/find.c	/^static void find_motion(void *data __attribute__((unused)), int x, int y)$/;"	f	file:
find_name	windows/find.c	/^static XTextProperty find_name, icon_name;$/;"	v	file:
find_new_on_stack	treeedit/editor.cc	/^void find_new_on_stack(void)$/;"	f
find_next_on_stack	treeedit/editor.cc	/^void find_next_on_stack(void)$/;"	f
find_nextname	unicode/unifont.c	/^static void *find_nextname(int *aliastype)$/;"	f	file:
find_nextname	unicode/virtread.c	/^static void *find_nextname(int *aliastype)$/;"	f	file:
find_notation	windows/menu.c	/^static Bool find_notation = MP_False;$/;"	v	file:
find_nr	treeedit/node.hh	/^    Char find_nr() const { return _findnr; }$/;"	f	class:Node
find_open	windows/find.c	/^void find_open(void)$/;"	f
find_press	windows/find.c	/^static void find_press(void *data __attribute__((unused)), XButtonEvent *event)$/;"	f	file:
find_prev_on_stack	treeedit/editor.cc	/^void find_prev_on_stack(void)$/;"	f
find_release	windows/find.c	/^static void find_release(void *data __attribute__((unused)), XButtonEvent *event)$/;"	f	file:
find_replace	treeedit/editor.cc	/^Bool find_replace(Char *str)$/;"	f
find_replace	treeedit/select.cc	/^Bool Select::find_replace(const Select& s, Char *str)$/;"	f	class:Select
find_replace_stencil	treeedit/editor.cc	/^Bool find_replace_stencil(Index nnr)$/;"	f
find_replace_stencil	treeedit/select.cc	/^Bool Select::find_replace_stencil(const Select& s, Index nnr)$/;"	f	class:Select
find_resize	windows/find.c	/^static void find_resize(void *data __attribute__((unused)), XConfigureEvent *event)$/;"	f	file:
find_save_items	windows/menu.c	/^static void find_save_items(Char *name)$/;"	f	file:
find_scrollto	windows/find.c	/^static void find_scrollto(void *data, int kind __attribute__((unused)))$/;"	f	file:
find_set_last_pos	windows/find.c	/^static void find_set_last_pos(int x, int y, int w, int h)$/;"	f	file:
find_set_number_of_lines	windows/find.c	/^void find_set_number_of_lines(void *window, int numlin)$/;"	f
find_spaces	unicode/unifont.c	352;"	d	file:
find_spaces	unicode/virtread.c	177;"	d	file:
find_stencil	treeedit/editor.cc	/^Bool find_stencil(Index nnr)$/;"	f
find_stencil	treeedit/mark.cc	/^Bool Mark::find_stencil(Index nnr)$/;"	f	class:Mark
find_stencil	treeedit/select.cc	/^Bool Select::find_stencil(Index nnr)$/;"	f	class:Select
find_string	treeedit/editor.cc	/^Bool find_string(Char *str)$/;"	f
find_tree	treeedit/editor.cc	/^Bool find_tree()$/;"	f
find_tree	treeedit/mark.cc	/^Bool Mark::find_tree(Node *n)$/;"	f	class:Mark
find_tree	treeedit/select.cc	/^Bool Select::find_tree(Node *n)$/;"	f	class:Select
find_type	unicode/unifont.c	/^static char *find_type(int aliastype)$/;"	f	file:
find_type	unicode/virtread.c	/^static char *find_type(int aliastype)$/;"	f	file:
find_type_next	unicode/unifont.c	/^static char *find_type_next(void)$/;"	f	file:
find_type_next	unicode/virtread.c	/^static char *find_type_next(void)$/;"	f	file:
findback	treeedit/mark.cc	/^Bool Mark::findback(Char *str, int n)$/;"	f	class:Mark
findback	treeedit/select.cc	/^Bool Select::findback(Char *str)$/;"	f	class:Select
findback_stencil	treeedit/mark.cc	/^Bool Mark::findback_stencil(Index nnr)$/;"	f	class:Mark
findback_stencil	treeedit/select.cc	/^Bool Select::findback_stencil(Index nnr)$/;"	f	class:Select
findbutton	windows/find.c	/^char *findbutton[NR_BUTTON] = { "Find", "Stack", "Done" };$/;"	v	file:
finddrawwin	windows/find.c	/^static Window findwin, finddrawwin, repdrawwin;$/;"	v	file:
findfuncs	windows/find.c	/^FUNCTIONS findfuncs = {$/;"	v
findhelp	windows/find.c	/^int findhelp[NR_BUTTON] = { FINDFINDHELP, FINDSTACKHELP, FINDDONEHELP };$/;"	v	file:
findname	windows/find.c	/^static char *findname = FINDNAME, *iconname = ICONNAME;$/;"	v	file:
findnext	treeedit/select.cc	/^Bool Select::findnext(Char *str)$/;"	f	class:Select
findnext_replace	treeedit/editor.cc	/^Bool findnext_replace(Char *str)$/;"	f
findnext_replace	treeedit/select.cc	/^Bool Select::findnext_replace(const Select& s, Char *str)$/;"	f	class:Select
findnext_replace_stencil	treeedit/editor.cc	/^Bool findnext_replace_stencil(Index nnr)$/;"	f
findnext_replace_stencil	treeedit/select.cc	/^Bool Select::findnext_replace_stencil(const Select& s, Index nnr)$/;"	f	class:Select
findnext_stencil	treeedit/editor.cc	/^Bool findnext_stencil(Index nnr)$/;"	f
findnext_stencil	treeedit/select.cc	/^Bool Select::findnext_stencil(Index nnr)$/;"	f	class:Select
findnext_string	treeedit/editor.cc	/^Bool findnext_string(Char *str)$/;"	f
findpos	treeedit/editwindow.cc	/^const Mark& EditWindow::findpos(int tx, int ty)$/;"	f	class:EditWindow
findprev	treeedit/select.cc	/^Bool Select::findprev(Char *str)$/;"	f	class:Select
findprev_stencil	treeedit/editor.cc	/^Bool findprev_stencil(Index nnr)$/;"	f
findprev_stencil	treeedit/select.cc	/^Bool Select::findprev_stencil(Index nnr)$/;"	f	class:Select
findprev_string	treeedit/editor.cc	/^Bool findprev_string(Char *str)$/;"	f
findwin	windows/find.c	/^static Window findwin, finddrawwin, repdrawwin;$/;"	v	file:
findwindow	treeedit/editor.cc	/^EditWindow& findwindow()$/;"	f
findwrap	treeedit/select.cc	/^Bool Select::findwrap(Char *str)$/;"	f	class:Select
findwrap_backward_stencil	treeedit/editor.cc	/^Bool findwrap_backward_stencil(Index nnr)$/;"	f
findwrap_backward_string	treeedit/editor.cc	/^Bool findwrap_backward_string(Char *str)$/;"	f
findwrap_stencil	treeedit/editor.cc	/^Bool findwrap_stencil(Index nnr)$/;"	f
findwrap_stencil	treeedit/select.cc	/^Bool Select::findwrap_stencil(Index nnr)$/;"	f	class:Select
findwrap_string	treeedit/editor.cc	/^Bool findwrap_string(Char *str)$/;"	f
findwrapback	treeedit/select.cc	/^Bool Select::findwrapback(Char *str)$/;"	f	class:Select
findwrapback_stencil	treeedit/select.cc	/^Bool Select::findwrapback_stencil(Index nnr)$/;"	f	class:Select
fini	windows/edit.c	/^		 shell,fini,strt;$/;"	m	struct:__anon69	file:
finifunc	windows/notadef.c	/^static void (*finifunc[MAXFORMAT])(void) =$/;"	v	file:
finish_current_proof	module/pvs.c	/^static void finish_current_proof(int pvs_proof_still_open)$/;"	f	file:
finput	language/parse.c	/^    FILE *finput;  \/* the file *\/$/;"	m	struct:FILESTACK	file:
first	include/fifolist.h	/^  void *first;$/;"	m	struct:_FifoList
first	language/parse.c	/^    Expression *first;$/;"	m	struct:__anon10	file:
first	language/parse.c	/^    Expression *first;$/;"	m	struct:__anon9	file:
first	language/parse.c	/^    Sequence *first;$/;"	m	struct:__anon7	file:
first	treeedit/editwindow.hh	/^    Return* first;$/;"	m	class:EditWindow
first	treeedit/node.cc	/^Node * Node::first()$/;"	f	class:Node
first	util/debug.c	/^    char first;$/;"	m	struct:__anon65	file:
first	util/fifolist.c	/^  ObjectList *first;$/;"	m	struct:_FIFOList	file:
first	util/memman.c	/^    char first;$/;"	m	struct:__anon66	file:
first_click	windows/events.c	/^static Window iwin = 0, parent=0, parentspar=0, first_click=0;$/;"	v	file:
first_error	windows/sources.c	/^static Bool first_error = MP_True;$/;"	v	file:
first_line	windows/scrollbar.c	/^	       first_line, line_size;$/;"	m	struct:__anon91	file:
first_node	treeedit/editor.cc	/^void *first_node(void *selection)$/;"	f
first_unused_find_nr	treeedit/node.cc	/^Char Node::first_unused_find_nr()$/;"	f	class:Node
first_wish_call	module/pvs.c	/^int first_wish_call=1;$/;"	v
firsthintnr	module/pvs.c	/^static unsigned long firsthintnr=2946556486UL;$/;"	v	file:
firstline	include/popupmenu.h	/^  PopupLine *firstline, *lastline;$/;"	m	struct:PopupMenu
firstpix	windows/getstring.c	/^           int maxpix, firstpix;$/;"	m	struct:STRINGINFO	file:
flagbyte	tools/pktobdf.c	/^integer flagbyte ;$/;"	v
flush	windows/output.c	/^void flush(void)$/;"	f
fnname	tools/pktobdf.c	/^char *fnname ;$/;"	v
fnr	windows/fonts.c	/^    short fnr, lnr, fsnr, number, page[2], nrml, max;$/;"	m	struct:__anon70	file:
fnr	windows/notation.c	/^    int fnr;$/;"	m	struct:__anon74	file:
fnr	windows/output.c	/^  int fnr;$/;"	m	struct:__anon79	file:
font	include/markup.h	/^    int font;     \/* font selection *\/$/;"	m	struct:_attribs
font	include/unifont.h	/^    Font font;           \/* font number *\/$/;"	m	struct:__anon43
font	unicode/unifont.c	/^    unsigned long font; \/* for X: Font *\/$/;"	m	struct:FONTREC	file:
font	unicode/virtread.c	/^    Font font;$/;"	m	struct:FONTREC	file:
font_ID	include/fonts.h	24;"	d
font_ascent	windows/fonts.c	/^int font_ascent(void)$/;"	f
font_ascent_ar	windows/fonts.c	/^int font_height_ar[NR_SIZE], font_ascent_ar[NR_SIZE], font_descent_ar[NR_SIZE];$/;"	v
font_ascent_max	windows/fonts.c	/^int font_height_max, font_ascent_max, font_descent_max;$/;"	v
font_change_attribute	unicode/unifont.c	/^int font_change_attribute(int attribcombo,  int attrnr, int value)$/;"	f
font_closetex	output/latexout.c	/^char *font_closetex(int attribute)$/;"	f
font_descent	windows/fonts.c	/^int font_descent(void)$/;"	f
font_descent_ar	windows/fonts.c	/^int font_height_ar[NR_SIZE], font_ascent_ar[NR_SIZE], font_descent_ar[NR_SIZE];$/;"	v
font_descent_max	windows/fonts.c	/^int font_height_max, font_ascent_max, font_descent_max;$/;"	v
font_get_attribute	unicode/unifont.c	/^int font_get_attribute(int attrnr)$/;"	f
font_get_attributes	unicode/unifont.c	/^int font_get_attributes(void)$/;"	f
font_get_name	unicode/unifont.c	/^char *font_get_name(int attrnr, int attrval)$/;"	f
font_handle	markup/font_markup.c	/^static Uchar *font_handle(int lowvalue, Attribute *attr, RedirectFunc *func)$/;"	f	file:
font_height	windows/fonts.c	/^int font_height(void)$/;"	f
font_height_ar	windows/fonts.c	/^int font_height_ar[NR_SIZE], font_ascent_ar[NR_SIZE], font_descent_ar[NR_SIZE];$/;"	v
font_height_max	windows/fonts.c	/^int font_height_max, font_ascent_max, font_descent_max;$/;"	v
font_load_config	unicode/unifont.c	/^int font_load_config(char *confname)$/;"	f
font_markup_init	markup/font_markup.c	/^void font_markup_init(void)$/;"	f
font_openmathtex	output/latexout.c	/^char *font_openmathtex(int attribute)$/;"	f
font_opentexttex	output/latexout.c	/^char *font_opentexttex(int attribute)$/;"	f
font_print	markup/font_markup.c	/^static Uchar *font_print(int lowvalue, Attribute *attr, RedirectFunc *func)$/;"	f	file:
font_set_attribute	unicode/unifont.c	/^void font_set_attribute(int attrnr, int value)$/;"	f
font_set_attributes	unicode/unifont.c	/^void font_set_attributes(int attribcombo)$/;"	f
font_set_system_data	unicode/unifont.c	/^void font_set_system_data(void *data)$/;"	f
font_stack	windows/fonts.c	/^static INTSTACK *font_stack = NULL;$/;"	v	file:
font_system_data	unicode/unifontX11.c	/^static void font_system_data(void *data)$/;"	f	file:
font_system_data	unicode/unifontsys.c	/^static void font_system_data(void *data)$/;"	f	file:
font_system_data	unicode/unifontsysstub.c	/^static void font_system_data(void *data)$/;"	f	file:
font_width	windows/fonts.c	/^short font_width(void)$/;"	f
font_width_ar	windows/fonts.c	/^short font_width_ar[NR_SIZE];$/;"	v
font_width_max	windows/fonts.c	/^short font_width_max;$/;"	v
fontarr	unicode/unifont.c	/^static FONTREC **fontarr=NULL;$/;"	v	file:
fontarrmax	unicode/unifont.c	/^static int fontarrmax=0;$/;"	v	file:
fontattributes	windows/fonts.c	/^int fontattributes[NR_SIZE];$/;"	v
fontbuf	markup/font_markup.c	/^static Uchar fontbuf[256];$/;"	v	file:
fontfile	documents/system.c	/^     *fontfile[NR_SIZE] = { NULL },$/;"	v
fontfilemenu	windows/default.c	/^static MENU fontfilemenu;$/;"	v	file:
fontgroupname	windows/menu.c	/^static char *fontgroupname[NR_SIZE] =$/;"	v	file:
fontid	unicode/drawstring.c	/^    Font fontid;$/;"	m	struct:__anon95	file:
fontlist	unicode/unifont.c	/^static FONTREC *fontlist=NULL;$/;"	v	file:
fontlist	unicode/virtread.c	/^static FONTREC *fontlist=NULL;$/;"	v	file:
fontname	unicode/unifont.c	/^    char *fontname;$/;"	m	struct:FONTREC	file:
fontname	unicode/virtread.c	/^    char *fontname;$/;"	m	struct:FONTREC	file:
fonttype	unicode/unifont.c	/^    int fonttype;$/;"	m	struct:FONTREC	file:
fonttype	unicode/virtread.c	/^    int fonttype;$/;"	m	struct:FONTREC	file:
format	include/notatype.h	/^	  Char *format[MAXFORMAT];$/;"	m	struct:__anon46
format	windows/menu.c	/^static Char *format=NULL;$/;"	v	file:
formatcurs	windows/notadef.c	/^static int verscurs=-1, formatcurs=0, poscurs = 0;$/;"	v	file:
formatnr	templates/notatype.c	/^static int formatnr = 0;$/;"	v	file:
formattag	unicode/datatotable.c	/^static struct { char *str; int len; } formattag[]= {$/;"	v	typeref:struct:__anon99	file:
forward	treeedit/select.cc	/^void Select::forward(Index n)$/;"	f	class:Select
forward_char	treeedit/editor.cc	/^void forward_char(Index n)$/;"	f
forward_line	treeedit/editor.cc	/^void forward_line(Index n)$/;"	f
forward_line	treeedit/select.cc	/^void Select::forward_line(Index n)$/;"	f	class:Select
forward_remove_char	treeedit/editor.cc	/^void forward_remove_char(Index count)$/;"	f
forward_word	treeedit/editor.cc	/^void forward_word(Index n)$/;"	f
forward_word	treeedit/select.cc	/^void Select::forward_word(Offset n)$/;"	f	class:Select
foundry	tools/pktobdf.c	/^char *foundry="metafont";$/;"	v
fpos_t	module/pvsparse.c	/^typedef _G_fpos_t fpos_t;$/;"	t	file:
fptr	module/pvsparse.c	/^    int32_t *fptr;$/;"	m	struct:random_data	file:
fr_stack	treeedit/editor.cc	/^Node& fr_stack() { static Node *frval = new Node(MP_Text); return *frval; }$/;"	f
fragmented	util/memman.c	/^static int fragmented=0;$/;"	v	file:
free	include/memman.h	29;"	d
free	include/memman.h	44;"	d
free_alt	include/sequence.h	/^    char free_alt;$/;"	m	struct:FuncSequence
free_box	windows/output.c	/^static void free_box(BOX *b)$/;"	f	file:
free_breanchnode	language/leaftree.c	/^static void free_breanchnode(BreanchNode* t)$/;"	f	file:
free_breanchnode	util/leaftree.c	/^static void free_breanchnode(BreanchNode* t)$/;"	f	file:
free_colorcells	windows/sources.c	/^static int free_colorcells(void)$/;"	f	file:
free_dirlist	util/filefind.c	/^static void free_dirlist(DirInfo *dlist)$/;"	f	file:
free_expression	language/expression.c	/^void free_expression(Expression *e)$/;"	f
free_extlist	util/filefind.c	/^static void free_extlist(ExtenInfo *elist)$/;"	f	file:
free_fstate	util/fstate.c	/^void free_fstate(FSTATE *fs)$/;"	f
free_int	util/intstack.c	/^void free_int(INTSTACK *s)$/;"	f
free_leaf	language/leaftree.c	/^static void (*free_leaf)(void*);$/;"	v	file:
free_leaf	util/leaftree.c	/^static void (*free_leaf)(void*);$/;"	v	file:
free_lexleaf	templates/match.c	/^static void free_lexleaf(void *ptr)$/;"	f	file:
free_next	include/sequence.h	/^    char free_next; \/* needed for freeing sequences *\/$/;"	m	struct:FuncSequence
free_notation_window	templates/notatype.c	/^void free_notation_window(int fnr)$/;"	f
free_parser	templates/match.c	/^static void free_parser(void)$/;"	f	file:
free_rules	templates/match.c	/^static void free_rules(void *rule)$/;"	f	file:
free_sequence	language/sequence.c	/^void free_sequence(Sequence *s)$/;"	f
freebox	windows/output.c	/^static BOX *freebox = NULL;$/;"	v	file:
freefunc	util/refcounting.c	/^  void (*freefunc)(void*);$/;"	m	struct:RefElem	file:
freeint	util/intstack.c	/^static INTSTACK *freeint = 0;$/;"	v	file:
freel	documents/fileread.c	/^static READSTACK *freel=NULL;$/;"	v	file:
freel	windows/output.c	/^static int freel=0;$/;"	v	file:
freeleaf	include/leaftree.h	/^    void (*freeleaf)(void*);$/;"	m	struct:ltree
freelist	windows/output.c	/^static TABBING *stacktop = 0, *freelist = 0;$/;"	v	file:
freeobjects	util/fifolist.c	/^FreeList freeobjects = FreeListWithBlockSize(sizeof(ObjectList));$/;"	v
freesub	include/popup.h	/^  int freesub;$/;"	m	struct:MENU
fref	language/parse.c	/^	FuncDesc fref;$/;"	m	union:__anon14	file:
fsblkcnt_t	module/pvsparse.c	/^typedef __fsblkcnt_t fsblkcnt_t;$/;"	t	file:
fsel	windows/fileselc.c	/^static FILESELECTOR fsel;$/;"	v	file:
fsfilcnt_t	module/pvsparse.c	/^typedef __fsfilcnt_t fsfilcnt_t;$/;"	t	file:
fsid_t	module/pvsparse.c	/^typedef __fsid_t fsid_t;$/;"	t	file:
fsize	util/filefind.c	/^  int (*fsize)(); \/* detect size of file *\/$/;"	m	struct:__anon63	file:
fsnr	windows/fonts.c	/^    short fnr, lnr, fsnr, number, page[2], nrml, max;$/;"	m	struct:__anon70	file:
fstate_check	util/fstate.c	/^int fstate_check(FSTATE *fs, Uchar *c)$/;"	f
fstruct	unicode/virtread.c	/^    XFontStruct *fstruct;$/;"	m	struct:FONTREC	file:
ftype	util/filefind.c	/^  FileType ftype;  \/* file type *\/$/;"	m	struct:CacheInfo	file:
ftype	util/filefind.c	/^  FileType ftype;$/;"	m	struct:ExtFileInfo	file:
fullname	markup/lang_markup.c	/^    char *fullname;     \/* full language name in UTF *\/$/;"	m	struct:ISOLANG	file:
fullname	markup/lang_markup.c	/^    char *fullname;  \/* language description *\/$/;"	m	struct:UNOFLANG	file:
fullname	tools/pktobdf.c	/^char *fullname=NULL;$/;"	v
fullname	util/filefind.c	/^  char *fullname;  \/* full name (including extension) *\/$/;"	m	struct:CacheInfo	file:
fullname	util/filefind.c	/^  char *fullname;$/;"	m	struct:DirInfo	file:
fullname	util/filefind.c	/^  char *fullname;$/;"	m	struct:ExtFileInfo	file:
func	include/keyboard.h	/^    Sequence *func;  \/* function to call when this key is pressed *\/$/;"	m	struct:__anon49
func	include/popupmenu.h	/^    Sequence *func;$/;"	m	union:PopupLine::__anon55
func	language/parse.c	/^    FuncRef func;$/;"	m	struct:__anon11	file:
func	module/pvs.c	/^  void (*func)();$/;"	m	struct:__anon15	file:
func	windows/editlib.c	/^  void (*func)();$/;"	m	struct:__anon87	file:
func	windows/getstring.c	/^  void (*func)();$/;"	m	struct:__anon78	file:
func	windows/menu.c	/^    BTFUNC func;$/;"	m	struct:ITEMDESC	file:
func	windows/notadef.c	/^  void (*func)();$/;"	m	struct:__anon90	file:
func	windows/scrollbar.c	/^	   void (*func)(void*,int);$/;"	m	struct:__anon91	file:
func_arg	windows/fileselc.c	/^    void *func_arg;$/;"	m	struct:__anon71	file:
func_cmp	language/function.c	/^static int func_cmp(const void *func1, const void *func2)$/;"	f	file:
func_expression	language/expression.c	/^Expression *func_expression(Expression *argexp,$/;"	f
func_free	language/function.c	/^static void func_free(void *var __attribute__((unused)))$/;"	f	file:
func_selected	treeedit/select.cc	/^Bool Select::func_selected(Select &f, Select& a)$/;"	f	class:Select
funcarg	windows/output.c	/^    void *funcarg;$/;"	m	struct:BOX	file:
funcargs	windows/output.c	/^static void *funcargs[1000];$/;"	v	file:
funcnr	documents/fileread.c	/^    int funcnr;$/;"	m	struct:READSTACK	file:
funcpool	language/function.c	/^static LeafTree funcpool = { 0, func_cmp, func_free, sizeof(FunctionDef) };$/;"	v	file:
funcpool_add	language/function.c	38;"	d	file:
funcpool_found	language/function.c	40;"	d	file:
funcpool_member	language/function.c	39;"	d	file:
funcpress	windows/button.c	/^	    void (*funcpress[3])(void *,int);$/;"	m	struct:__anon75	file:
funcptr	language/function.c	/^    void (*funcptr)();    \/* function that performs the action *\/$/;"	m	struct:__anon1	file:
funcrelease	windows/button.c	/^	    void (*funcrelease[3])(void *,int);$/;"	m	struct:__anon75	file:
funcseq	language/parse.y	/^funcseq	    :	assignment$/;"	l
function	util/memman.c	/^  void (*function)(void);$/;"	m	struct:_PaybackFunc	file:
functioncall	language/parse.y	/^functioncall:	IDENTIFIER '(' $/;"	l
functiondef	language/parse.y	/^functiondef :	FUNCTION IDENTIFIER '(' $/;"	l
functype	include/types.h	/^    char functype;   \/* internal or user defined *\/$/;"	m	struct:__anon58
functype	language/function.c	/^    char functype;$/;"	m	struct:__anon1	file:
functype	language/userdef.c	/^    char functype;$/;"	m	struct:__anon5	file:
fx_add	util/flexarray.c	/^void fx_add(FlexArray *fl, void *item)$/;"	f
fx_clear	util/flexarray.c	/^void fx_clear(FlexArray *fl)$/;"	f
fx_contains	util/flexarray.c	/^int fx_contains(FlexArray *fl, void *item)$/;"	f
fx_copy	util/flexarray.c	/^void *fx_copy(FlexArray *fl)$/;"	f
fx_init	util/flexarray.c	/^void fx_init(FlexArray *fl, int sz, int (*cmp)(const void*,const void*))$/;"	f
fx_item	include/flexarray.h	28;"	d
fx_max	include/flexarray.h	30;"	d
fx_remove	util/flexarray.c	/^void fx_remove(FlexArray *fl, void *item)$/;"	f
fx_set	util/flexarray.c	/^int fx_set(FlexArray *fl, int pos, void *item)$/;"	f
fx_switch	util/flexarray.c	/^int fx_switch(FlexArray *fl, void *olditem, void *newitem)$/;"	f
gap	treeedit/node.hh	/^    Index gap;      \/\/ Size of the gap in Chars.$/;"	m	class:Node
gc	unicode/brows.c	/^static GC gc;$/;"	v	file:
gca	windows/sources.c	/^static GC gca[MAXGCS];$/;"	v	file:
gccolor	windows/sources.c	/^static int gccolor[MAXGCS];$/;"	v	file:
gcd	language/example.c	/^void gcd(int *r, int a, int b)$/;"	f
gcfont	windows/sources.c	/^static FontID gcfont[MAXGCS];$/;"	v	file:
generalinfofile	windows/fonts.c	/^Char * generalinfofile=NULL;$/;"	v
get16	tools/pktobdf.c	/^static integer get16()$/;"	f	file:
get32	tools/pktobdf.c	/^static integer get32()$/;"	f	file:
get_GC	windows/sources.c	/^GC get_GC(TextMode gcnr, int colortype,int colorpos)$/;"	f
get_GCXor	windows/sources.c	/^GC get_GCXor(int colortype)$/;"	f
get_GC_font	windows/sources.c	/^GC get_GC_font(TextMode gcnr, int colortype, int colorpos,$/;"	f
get_Str	documents/fileread.c	/^static int get_Str(Char *s, int *len, int max)$/;"	f	file:
get_String	documents/fileread.c	/^int get_String(Char **s, int *len, int *max)$/;"	f
get_and_set	tools/xpipein.c	/^static void get_and_set(void)$/;"	f	file:
get_ascii_node	treeedit/editor.cc	/^int get_ascii_node(Char* str, int *len, int max)$/;"	f
get_color	windows/sources.c	/^int get_color(Char *name)$/;"	f
get_colorcell	windows/sources.c	/^static int get_colorcell(void)$/;"	f	file:
get_current_line	windows/notadef.c	/^static int get_current_line(int vnr, int fmnr, int ypos)$/;"	f	file:
get_currentwd	util/funcs.c	/^void get_currentwd(void)$/;"	f
get_default_thinspace	windows/output.c	/^int  get_default_thinspace(void)$/;"	f
get_defaults	documents/fileread.c	/^int get_defaults(Char* str __attribute__((unused)),$/;"	f
get_dirs	util/filefind.c	/^static DirInfo *get_dirs(char *path, char *defpath)$/;"	f	file:
get_display_delta	windows/output.c	/^int get_display_delta(void)$/;"	f
get_document	documents/fileread.c	/^int get_document(Char* str, int* len, int max)$/;"	f
get_dtc	documents/fileread.c	/^static int get_dtc(Char *c,$/;"	f	file:
get_events	windows/events.c	/^void get_events(void)$/;"	f
get_extensions	util/filefind.c	/^static ExtenInfo *get_extensions(char *elist)$/;"	f	file:
get_findrep	treeedit/editor.cc	/^int get_findrep(Char *, int*, int)$/;"	f
get_fonts	documents/fileread.c	/^int get_fonts(Char* str __attribute__((unused)),$/;"	f
get_full_file	unicode/unimap.c	/^static void *get_full_file(char *name)$/;"	f	file:
get_helpname	windows/notadef.c	493;"	d	file:
get_input_string	keyboard/keyboard.c	/^Uchar *get_input_string(int *len)$/;"	f
get_integer	unicode/unifont.c	/^static char *get_integer(char *c, int *result)$/;"	f	file:
get_integer	unicode/virtread.c	/^static char *get_integer(char *c, int *result)$/;"	f	file:
get_keyboard	documents/fileread.c	/^int get_keyboard(Char* str __attribute__((unused)),$/;"	f
get_keyboard_stack	keyboard/keyboard.c	/^void *get_keyboard_stack(Uchar *stackpath)$/;"	f
get_line_number	treeedit/editwindow.hh	/^    Index get_line_number() { return at_line; }$/;"	f	class:EditWindow
get_local_names	language/variable.c	/^char **get_local_names(void)$/;"	f
get_local_values	language/variable.c	/^Value *get_local_values(int *len)$/;"	f
get_local_variables	language/variable.c	/^Value *get_local_variables(int *nrargs)$/;"	f
get_locale	unicode/unistring.c	/^void get_locale(void)$/;"	f
get_map	keyboard/keyboard.c	/^KeyMap *get_map(Uchar *name)$/;"	f
get_motion_hints	windows/sources.c	/^void get_motion_hints(Window win, int ms)$/;"	f
get_name	windows/notadef.c	492;"	d	file:
get_name_args	windows/notadef.c	/^static void get_name_args(int x, int y, int yp, Char *name, int fmnr)$/;"	f	file:
get_new_string	util/funcs.c	563;"	d	file:
get_new_string	windows/fonts.c	107;"	d	file:
get_next_buffer	unicode/unistring.c	/^void *get_next_buffer(int size)$/;"	f
get_next_filename	templates/notatype.c	/^int get_next_filename(int fnr, Char **name, Bool *opened)$/;"	f
get_node	treeedit/editor.cc	/^int get_node(Char* str, int *len, int max)$/;"	f
get_nota	windows/notadef.c	/^static void get_nota(NOTATION *nota)$/;"	f	file:
get_notation	windows/notation.c	/^static void get_notation(NOTATIONINFO *ninf, int x, int y)$/;"	f	file:
get_notation_dirname	templates/notatype.c	/^Char *get_notation_dirname(int fnr)$/;"	f
get_notation_filename	templates/notatype.c	/^Char *get_notation_filename(int fnr)$/;"	f
get_notation_kind	templates/notatype.c	/^NOTATION *get_notation_kind(int fnr, int kind, int nr)$/;"	f
get_notation_nr	templates/notatype.c	/^int get_notation_nr(int fnr, int kind, int nr)$/;"	f
get_notation_number	templates/notatype.c	/^int get_notation_number(int fnr)$/;"	f
get_number_of_lines	treeedit/editwindow.hh	/^    Index get_number_of_lines() { return root->lines(); }$/;"	f	class:EditWindow
get_operator	language/expression.c	/^static OpStruct *get_operator(Type t1, Operator op, Type t2)$/;"	f	file:
get_pos	windows/getstring.c	/^static void get_pos(STRINGINFO *sinfo, int x)$/;"	f	file:
get_pos	windows/sources.c	/^static int get_pos(Window win)$/;"	f	file:
get_position	windows/notation.c	/^static void get_position(NOTATIONINFO *ninf, int kind, int anr,$/;"	f	file:
get_pvskeyword	module/pvs.c	/^static KeywordItem *get_pvskeyword(Char *hintstr)$/;"	f	file:
get_save_entry	windows/sources.c	/^Bool get_save_entry(WINDOWTYPE *type, int *xpos, int *ypos, int *width,$/;"	f
get_save_state_file	windows/sources.c	/^Bool get_save_state_file(Char *name)$/;"	f
get_selection	treeedit/editor.cc	/^void *get_selection(int nr)$/;"	f
get_selection_path	treeedit/editor.cc	/^int get_selection_path(void *full_sel, void *sub_sel, int *list, int max)$/;"	f
get_smacro	documents/fileread.c	/^int get_smacro(Char* str __attribute__((unused)),$/;"	f
get_stack	treeedit/node.cc	/^void Node::get_stack()$/;"	f	class:Node
get_stencil	templates/notatype.c	/^int get_stencil(Char *s,$/;"	f
get_str	documents/fileread.c	/^static int get_str(Char *s, int *len, int max __attribute__((unused)))$/;"	f	file:
get_string	documents/fileread.c	/^int get_string(Char **s, int *len, int *max)$/;"	f
get_string	unicode/unifont.c	/^static char *get_string(char **c, char *bufres)$/;"	f	file:
get_string	unicode/virtread.c	/^static char *get_string(char **c, char *bufres)$/;"	f	file:
get_subnode	treeedit/editor.cc	/^void *get_subnode(int selnr, int *posi, int len)$/;"	f
get_subnode_string	treeedit/editor.cc	/^Char *get_subnode_string(int selnr, int *posi, int len)$/;"	f
get_symbol	documents/fileread.c	/^int get_symbol(Char* str __attribute__((unused)),$/;"	f
get_type	language/variable.c	/^Type get_type(Argument arg)$/;"	f
get_value	language/variable.c	/^Value *get_value(Argument arg)$/;"	f
get_version	templates/notatype.c	/^int get_version(Char *s, int *len __attribute__((unused)), int max)$/;"	f
get_window_type	windows/sources.c	/^WINDOWTYPE get_window_type(Window win, Window *pwin, void **wdata)$/;"	f
get_wm_selection	windows/sources.c	/^void get_wm_selection(void)$/;"	f
get_x	treeedit/editwindow.hh	/^    int get_x() {return xp;}$/;"	f	class:EditWindow
get_y	treeedit/editwindow.hh	/^    int get_y() {return yp;}$/;"	f	class:EditWindow
getbit	tools/pktobdf.c	/^static boolean getbit()$/;"	f	file:
getfile	windows/fileselc.c	/^    void *getfile;$/;"	m	struct:__anon71	file:
getfunc	documents/fileread.c	/^static GETFUNC getfunc[128] = {$/;"	v	file:
getmask	windows/fileselc.c	/^    void *getmask;$/;"	m	struct:__anon71	file:
getnyb	tools/pktobdf.c	/^static integer getnyb()$/;"	f	file:
getpowfunc	language/powfix.c	/^void *getpowfunc(void)$/;"	f
getsimpletabsize	windows/output.c	/^int getsimpletabsize(void)$/;"	f
gid_t	module/pvsparse.c	/^typedef __gid_t gid_t;$/;"	t	file:
globfilelist	util/filefind.c	/^static ExtFileInfo *globfilelist=0;$/;"	v	file:
gnu_dev_major	module/pvsparse.c	/^__attribute__ ((__nothrow__)) gnu_dev_major (unsigned long long int __dev)$/;"	f
gnu_dev_makedev	module/pvsparse.c	/^__attribute__ ((__nothrow__)) gnu_dev_makedev (unsigned int __major, unsigned int __minor)$/;"	f
gnu_dev_minor	module/pvsparse.c	/^__attribute__ ((__nothrow__)) gnu_dev_minor (unsigned long long int __dev)$/;"	f
go_down	windows/notadef.c	/^static void go_down(void)$/;"	f	file:
go_end	windows/notadef.c	/^static void go_end(void)$/;"	f	file:
go_home	windows/notadef.c	/^static void go_home(void)$/;"	f	file:
go_left	windows/notadef.c	/^static void go_left(void)$/;"	f	file:
go_right	windows/notadef.c	/^static void go_right(void)$/;"	f	file:
go_up	windows/notadef.c	/^static void go_up(void)$/;"	f	file:
good_mark	module/pvs.c	/^  good_mark=0x2713;$/;"	v	file:
good_template	module/pvs.c	/^  good_template;$/;"	v	file:
good_uid	module/pvs.c	/^  good_uid = 2439819443ul;$/;"	v	file:
goto_latex_line	treeedit/editor.cc	/^void goto_latex_line(Index n)$/;"	f
grayname	windows/sources.c	/^static char *grayname[MAX_CELLS] = {$/;"	v	file:
group	windows/output.c	/^    int group;$/;"	m	struct:__anon79::__anon80	file:
group_id	util/funcs.c	/^int user_id=0, group_id=0;$/;"	v
grpname	windows/output.c	/^    char *grpname;$/;"	m	struct:__anon79::__anon80	file:
gzip_filesize	util/filefind.c	/^static int gzip_filesize(char *name)$/;"	f	file:
h	windows/fileselc.c	/^    int x,y,w,h;$/;"	m	struct:__anon71	file:
handle	language/loadlib.c	/^    void *handle;$/;"	m	struct:Library	file:
handle	markup/markup.c	/^    HandleFunc handle;$/;"	m	struct:SurroHandler	file:
handle	tools/xpipein.c	/^static void handle(int sig __attribute__((unused)))$/;"	f	file:
handle	tools/xpipeout.c	/^static void handle(int sig)$/;"	f	file:
handle	windows/sources.c	/^static void handle(int sig)$/;"	f	file:
handle_confirm	windows/notation.c	/^static void handle_confirm(void *data __attribute__((unused)), int i)$/;"	f	file:
handle_directory_creation	windows/sources.c	/^static void handle_directory_creation(void *data, int bnr)$/;"	f	file:
handle_done	windows/notation.c	/^static void handle_done(void *data, int bnr)$/;"	f	file:
handle_filename	windows/edit.c	/^static void handle_filename(void *data, Char *name)$/;"	f	file:
handle_filename	windows/notation.c	/^static void handle_filename(void *data, Char *name)$/;"	f	file:
handle_fileselc_func	windows/edit.c	/^static void (*handle_fileselc_func[NR_BUTTON+5])(void*,Char*) = {$/;"	v	file:
handle_include_filename	windows/edit.c	/^static void handle_include_filename(void *data, Char *name)$/;"	f	file:
handle_key	keyboard/keyboard.c	/^void handle_key(KeyNum key, KeyMode mode)$/;"	f
handle_new_id_font	windows/menu.c	/^static void handle_new_id_font(int nfnr)$/;"	f	file:
handle_new_version	windows/menu.c	/^static void handle_new_version(void *data __attribute__((unused)),  int ivnr)$/;"	f	file:
handle_pos	windows/notadef.c	/^static void handle_pos(int x, int y)$/;"	f	file:
handle_pvs_bel	module/pvs.c	/^static void handle_pvs_bel(unsigned char *buffer)$/;"	f	file:
handle_pvs_buf	module/pvs.c	/^static void handle_pvs_buf(unsigned char *buffer)$/;"	f	file:
handle_pvs_dis	module/pvs.c	/^static void handle_pvs_dis(unsigned char *buffer)$/;"	f	file:
handle_pvs_err	module/pvs.c	/^static void handle_pvs_err(unsigned char *buffer)$/;"	f	file:
handle_pvs_eval	module/pvs.c	/^static void handle_pvs_eval(char *buffer)$/;"	f	file:
handle_pvs_loc	module/pvs.c	/^static void handle_pvs_loc(unsigned char *buffer)$/;"	f	file:
handle_pvs_log	module/pvs.c	/^static void handle_pvs_log(unsigned char *buffer)$/;"	f	file:
handle_pvs_mod	module/pvs.c	/^static void handle_pvs_mod(unsigned char *buffer)$/;"	f	file:
handle_pvs_msg	module/pvs.c	/^static void handle_pvs_msg(unsigned char *buffer)$/;"	f	file:
handle_pvs_pmt	module/pvs.c	/^static void handle_pvs_pmt(char *buffer)$/;"	f	file:
handle_pvs_qry	module/pvs.c	/^static void handle_pvs_qry(unsigned char *buffer)$/;"	f	file:
handle_pvs_unknown	module/pvs.c	/^static void handle_pvs_unknown(char *buffer)$/;"	f	file:
handle_pvs_warn	module/pvs.c	/^static void handle_pvs_warn(unsigned char *buffer)$/;"	f	file:
handle_pvs_wish	module/pvs.c	/^static void handle_pvs_wish(char *buffer)$/;"	f	file:
handle_pvs_yn	module/pvs.c	/^static void handle_pvs_yn(unsigned char *buffer)$/;"	f	file:
handle_surro	markup/markup.c	/^Uchar *handle_surro(Uchar lowvalue, Attribute *attr, RedirectFunc *func)$/;"	f
handle_view_filename	windows/edit.c	/^static void handle_view_filename(void *data, Char *name)$/;"	f	file:
hash_number_nnr	templates/notatype.c	/^static INTSTACK *hash_number_nnr[256];$/;"	v	file:
hash_number_vnr	templates/notatype.c	/^static INTSTACK *hash_number_vnr[256];$/;"	v	file:
hash_screen_format	templates/notatype.c	/^static int hash_screen_format(Char *c, int l)$/;"	f	file:
hash_string	templates/notatype.c	/^static INTSTACK *hash_string[256];$/;"	v	file:
hash_string	util/translate.c	/^static int hash_string(char *str)$/;"	f	file:
hash_table	util/refcounting.c	/^static RefElem *hash_table[HASHSIZE];$/;"	v	file:
hash_to_pos_nnr	templates/notatype.c	/^static int hash_to_pos_nnr(INTSTACK *h, int unnr)$/;"	f	file:
hash_to_pos_vnr	templates/notatype.c	/^static int hash_to_pos_vnr(INTSTACK *h, unsigned long uvnr)$/;"	f	file:
hash_unique_number	templates/notatype.c	183;"	d	file:
hashsize	util/translate.c	/^  int hashsize;            \/* who many lists are there? *\/$/;"	m	struct:__anon67	file:
hashval	util/filefind.c	/^  int hashval;     \/* for basename *\/$/;"	m	struct:CacheInfo	file:
hashvalue	util/translate.c	/^  int hashvalue;     \/* hash value of the original string *\/$/;"	m	struct:Translation	file:
head_int	include/intstack.h	22;"	d
headattrib	windows/output.c	246;"	d	file:
headername	windows/edit.c	/^                 Char *headername, *filename, *pathname, *outputname;$/;"	m	struct:__anon69	file:
height	include/match.h	/^    int height;$/;"	m	struct:ParseRules
height	include/popupmenu.h	/^  int width,height;$/;"	m	struct:PopupLine
height	include/popupmenu.h	/^  int width,height;$/;"	m	struct:PopupMenu
height	tools/pktobdf.c	/^   integer width, height;$/;"	m	struct:pkchar	file:
height	treeedit/editwindow.hh	/^    Index height;$/;"	m	class:Return
height	treeedit/node.cc	/^Index Node::height()$/;"	f	class:Node
height	windows/edit.c	/^                 unsigned int width, height, buflen;$/;"	m	struct:__anon69	file:
height	windows/getstring.c	/^           unsigned int width, height;$/;"	m	struct:STRINGINFO	file:
height	windows/notation.c	/^    int kind, anr, mnr, height;$/;"	m	struct:__anon73	file:
height	windows/symbol.c	/^	 int xpos, ypos, width, height;$/;"	m	struct:__anon85	file:
height_of_line	treeedit/editwindow.cc	/^int EditWindow::height_of_line(int lines, int &oneline, int &sumline)$/;"	f	class:EditWindow
heights	windows/notadef.c	/^static int *heights[MAX_VERSION][MAXFORMAT];$/;"	v	file:
heights	windows/remark.c	/^static INTSTACK *heights=NULL;$/;"	v	file:
help	include/popupmenu.h	/^  Uchar *help;$/;"	m	struct:PopupMenu
help_dirs	documents/system.c	/^Char **help_dirs = NULL;$/;"	v
helpfile	windows/sources.c	/^    Char *helpfile;$/;"	m	struct:__anon82	file:
helpfilename	include/notatype.h	/^	  Char *helpfilename;$/;"	m	struct:__anon47
helpname	documents/helpfile.c	/^char *helpname[MAXHELPNAME] =$/;"	v
helpnr	windows/default.c	/^    int min, max, helpnr;$/;"	m	struct:__anon76	file:
helpnr	windows/notadef.c	/^         int selection, nr_items, def, x, max, helpnr;$/;"	m	struct:__anon88	file:
helpnr	windows/symbol.c	/^		int helpnr;$/;"	m	struct:__anon84	file:
hesc	tools/pktobdf.c	/^   integer hesc, vesc;$/;"	m	struct:pkchar	file:
hex	tools/pktobdf.c	55;"	d	file:
hexarray	tools/pktobdf.c	/^char *hexarray = "0123456789abcdef";$/;"	v
hiding	windows/output.c	/^static int hiding = 0;$/;"	v	file:
high_surro	markup/markup.c	/^int high_surro(void)$/;"	f
hightab	windows/output.c	/^                unsigned char hightab;$/;"	m	struct:TABBING	file:
highval	markup/markup.c	/^    Uchar highval;$/;"	m	struct:SurroHandler	file:
hoffset	tools/pktobdf.c	/^   integer hoffset, voffset;$/;"	m	struct:pkchar	file:
hoffset	unicode/drawstring.c	/^    int hoffset; \/* position where first item should be drawn (in pixels) *\/$/;"	m	struct:__anon96	file:
homedir	documents/system.c	/^     *homedir = NULL,$/;"	v
ht	util/debug.c	/^    int ht;$/;"	m	struct:ltnode	file:
ht	util/memman.c	/^    int ht;$/;"	m	struct:ltnode	file:
hugs_add	module/hugs.c	/^static void hugs_add(void *data __attribute__((unused)), char *c)$/;"	f	file:
hugs_load	module/hugs.c	/^static void hugs_load(void *data __attribute__((unused)), char *c)$/;"	f	file:
hugs_load_proj	module/hugs.c	/^static void hugs_load_proj(void *data __attribute__((unused)), char *c)$/;"	f	file:
hugsparse	module/hugs.c	/^static int hugsparse(unsigned char *text, unsigned int *num)$/;"	f	file:
hugsparse_init	module/hugsparse.c	/^void hugsparse_init(void)$/;"	f
hugstemplates	module/hugs.c	/^static int hugstemplates=0;$/;"	v	file:
icon_name	windows/buffer.c	/^static XTextProperty buffer_name, icon_name;$/;"	v	file:
icon_name	windows/default.c	/^static XTextProperty default_name, icon_name;$/;"	v	file:
icon_name	windows/find.c	/^static XTextProperty find_name, icon_name;$/;"	v	file:
icon_name	windows/notadef.c	/^static char *icon_name = ICONNAME;$/;"	v	file:
icon_name	windows/notation.c	/^static char *notation_name = NOTATIONNAME, *icon_name = ICONNAME;$/;"	v	file:
icon_name	windows/symbol.c	/^static XTextProperty symbol_name, icon_name;$/;"	v	file:
icon_pixmap	windows/sources.c	/^Pixmap icon_pixmap;$/;"	v
iconic	windows/sources.c	/^Bool iconic=MP_False, output_mode = MPTEX;$/;"	v
iconize	include/sources.h	/^    void (*iconize)(void*);$/;"	m	struct:__anon41
iconized	windows/edit.c	/^                 Bool saved, iconized, auto_saved, view_mode, empty,$/;"	m	struct:__anon69	file:
iconized	windows/fileselc.c	/^    Bool iconized;$/;"	m	struct:__anon71	file:
iconized	windows/symbol.c	/^	 Bool iconized;$/;"	m	struct:__anon85	file:
iconname	windows/buffer.c	/^static char *buffername = BUFFERNAME, *iconname = ICONNAME;$/;"	v	file:
iconname	windows/default.c	/^static Char *name, *iconname;$/;"	v	file:
iconname	windows/fileselc.c	/^static char *fileselcname=FILESELNAME, *iconname=ICONNAME;$/;"	v	file:
iconname	windows/find.c	/^static char *findname = FINDNAME, *iconname = ICONNAME;$/;"	v	file:
iconname	windows/notadef.c	/^static XTextProperty notadefname, iconname;$/;"	v	file:
iconname	windows/notation.c	/^static XTextProperty notaname, iconname;$/;"	v	file:
id	treeedit/node.hh	/^    Bool  id() const { return IsId(_kind)||(IsDispOrExpr(_kind) && !stencil &&$/;"	f	class:Node
id_font	treeedit/node.cc	/^Offset Node::id_font()$/;"	f	class:Node
id_font	treeedit/select.cc	/^int Select::id_font()$/;"	f	class:Select
id_t	module/pvsparse.c	/^typedef __id_t id_t;$/;"	t	file:
id_uid	module/pvsparse.c	/^  id_uid=3368830881UL;$/;"	v	file:
ident_buffer	language/parse.c	/^static char ident_buffer[MAXIDENTIFIER][IDENTLENGTH];$/;"	v	file:
identifier_font	windows/output.c	/^static int identifier_font = 3;$/;"	v	file:
identlist	language/parse.y	/^identlist   :	IDENTIFIER$/;"	l
identsep	templates/match.c	/^static int identsep=0;$/;"	v	file:
idfont	windows/menu.c	/^static MENU idfont;$/;"	v	file:
ifchanged	templates/notatype.c	/^static void (*ifchanged[5])(void);$/;"	v	file:
ifunc	include/expression.h	/^	FuncRef ifunc;$/;"	m	union:Expression::__anon50
ifunc	language/expression.c	/^  FuncRef ifunc;     \/* Concat            Add *\/$/;"	m	struct:OpStruct	file:
iid	module/hugsparse.c	/^    int iid;                  \/* internal number (given at load time) *\/$/;"	m	struct:__anon35	file:
in_auto_save	windows/sources.c	/^static Bool in_auto_save = MP_False;$/;"	v	file:
in_display	treeedit/node.cc	/^static int in_display=0;$/;"	v	file:
in_dump	windows/sources.c	/^static Bool in_dump = MP_False;$/;"	v	file:
in_math	output/latexout.c	/^static Bool in_math, in_tabbing, tex_plhl, after_slash, after_macro,$/;"	v	file:
in_search	windows/menu.c	/^static Bool in_search = MP_True;$/;"	v	file:
in_tab_env	windows/output.c	/^static int in_tab_env = 0;$/;"	v	file:
in_tabbing	output/latexout.c	/^static Bool in_math, in_tabbing, tex_plhl, after_slash, after_macro,$/;"	v	file:
iname	windows/popup.c	/^static XTextProperty wname, iname;$/;"	v	file:
iname	windows/symbol.c	/^static char *name = SYMBOLNAME, *iname = ICONNAME;$/;"	v	file:
include	treeedit/select.cc	/^void Select::include(FILE* f)$/;"	f	class:Select
include_ascii	treeedit/editwindow.cc	/^void EditWindow::include_ascii()$/;"	f	class:EditWindow
include_ascii	treeedit/select.cc	/^void Select::include_ascii()$/;"	f	class:Select
include_editwindow	treeedit/editor.cc	/^void include_editwindow(void* w)$/;"	f
include_selection	treeedit/editor.cc	/^void include_selection(void)$/;"	f
includedir	documents/Makefile	/^includedir      = ${prefix}\/include\/mathpad$/;"	m
includedir	include/Makefile	/^includedir      = ${prefix}\/include\/mathpad$/;"	m
includedir	keyboard/Makefile	/^includedir      = ${prefix}\/include\/mathpad$/;"	m
includedir	language/Makefile	/^includedir      = ${prefix}\/include\/mathpad$/;"	m
includedir	markup/Makefile	/^includedir      = ${prefix}\/include\/mathpad$/;"	m
includedir	module/Makefile	/^includedir      = ${prefix}\/include\/mathpad$/;"	m
includedir	output/Makefile	/^includedir      = ${prefix}\/include\/mathpad$/;"	m
includedir	templates/Makefile	/^includedir      = ${prefix}\/include\/mathpad$/;"	m
includedir	tools/Makefile	/^includedir      = ${prefix}\/include\/mathpad$/;"	m
includedir	treeedit/Makefile	/^includedir      = ${prefix}\/include\/mathpad$/;"	m
includedir	unicode/Makefile	/^includedir      = ${prefix}\/include\/mathpad$/;"	m
includedir	util/Makefile	/^includedir      = ${prefix}\/include\/mathpad$/;"	m
includedir	windows/Makefile	/^includedir      = ${prefix}\/include\/mathpad$/;"	m
incolorname	windows/output.c	/^static int incolorname=0;$/;"	v	file:
incorrect_tree	language/leaftree.c	/^int incorrect_tree(BreanchNode *b, int *hi)$/;"	f
incorrect_tree	util/leaftree.c	/^int incorrect_tree(BreanchNode *b, int *hi)$/;"	f
increase_refcount	util/refcounting.c	/^void increase_refcount(void *pointer, void (*freefunc)(void*))$/;"	f
increase_spacing	treeedit/editor.cc	/^void increase_spacing(Index count)$/;"	f
increase_spacing	treeedit/node.cc	/^void Node::increase_spacing(Index count)$/;"	f	class:Node
increase_spacing	treeedit/select.cc	/^void Select::increase_spacing(Index count)$/;"	f	class:Select
induct	module/pvs.c	/^  int induct;$/;"	m	struct:KeywordItem	file:
info	windows/edit.c	/^                 void *info;$/;"	m	struct:__anon69	file:
info_system_char	unicode/unifontX11.c	/^static CharInfo *info_system_char(FONTREC *frec, int pos, CharInfo *result)$/;"	f	file:
info_system_char	unicode/unifontsys.c	/^static CharInfo *info_system_char(FONTREC *frec, int pos, CharInfo *result)$/;"	f	file:
info_system_char	unicode/unifontsysstub.c	/^static CharInfo *info_system_char(FONTREC *frec, int pos, CharInfo *result)$/;"	f	file:
info_template	templates/notatype.c	/^static char *info_template=$/;"	v	file:
infobuf	unicode/unifont.c	/^static CharInfo infobuf[INFOBUFMAX];$/;"	v	file:
infodir	documents/Makefile	/^infodir         = ${prefix}\/share\/info$/;"	m
infodir	include/Makefile	/^infodir         = ${prefix}\/share\/info$/;"	m
infodir	keyboard/Makefile	/^infodir         = ${prefix}\/share\/info$/;"	m
infodir	language/Makefile	/^infodir         = ${prefix}\/share\/info$/;"	m
infodir	markup/Makefile	/^infodir         = ${prefix}\/share\/info$/;"	m
infodir	module/Makefile	/^infodir         = ${prefix}\/share\/info$/;"	m
infodir	output/Makefile	/^infodir         = ${prefix}\/share\/info$/;"	m
infodir	templates/Makefile	/^infodir         = ${prefix}\/share\/info$/;"	m
infodir	tools/Makefile	/^infodir         = ${prefix}\/share\/info$/;"	m
infodir	treeedit/Makefile	/^infodir         = ${prefix}\/share\/info$/;"	m
infodir	unicode/Makefile	/^infodir         = ${prefix}\/share\/info$/;"	m
infodir	util/Makefile	/^infodir         = ${prefix}\/share\/info$/;"	m
infodir	windows/Makefile	/^infodir         = ${prefix}\/share\/info$/;"	m
infopos	unicode/unifont.c	/^static int infopos=0;$/;"	v	file:
init_all	windows/events.c	/^void init_all(int argc, char **argv)$/;"	f
init_item	windows/output.c	/^static void init_item(int i)$/;"	f	file:
init_library	language/intlib.c	/^int init_library(void)$/;"	f
init_library	language/reallib.c	/^int init_library(void)$/;"	f
init_library	language/stringlib.c	/^int init_library(void)$/;"	f
init_library	language/typetest.c	/^int init_library(void)$/;"	f
init_library	module/MAG.c	/^int init_library(void)$/;"	f
init_library	module/parsertemp.c	/^int init_library(void)$/;"	f
init_library	module/pvs.c	/^int init_library(void)$/;"	f
init_sc	util/fstate.c	93;"	d	file:
initem	windows/output.c	/^static int initem;$/;"	v	file:
initfunc	windows/notadef.c	/^static void (*initfunc[MAXFORMAT])(void) =$/;"	v	file:
initialised	include/uniconv.h	/^    char initialised;                          \/* is it loaded ? *\/$/;"	m	struct:__anon42
initialize	tools/pktobdf.c	/^static void initialize()$/;"	f	file:
innr	include/notatype.h	/^	  int innr;$/;"	m	struct:__anon47
innr	treeedit/node.hh	/^    Index innr;     \/\/ Number of the used stencil and version$/;"	m	class:Node
ino_t	module/pvsparse.c	/^typedef __ino_t ino_t;$/;"	t	file:
inplacename	output/latexout.c	/^static int inplacename=0;$/;"	v	file:
inplacename	windows/output.c	/^static int inplacename=0;$/;"	v	file:
inprefix	keyboard/keyboard.c	/^    int inprefix;$/;"	m	struct:KeyStackInfoRec	file:
input	language/parselex.c	59;"	d	file:
input	language/parselex.c	78;"	d	file:
input	language/parselex.c	82;"	d	file:
input	module/pvsparselex.c	62;"	d	file:
input	module/pvsparselex.c	82;"	d	file:
input	module/pvsparselex.c	86;"	d	file:
input_handle	tools/xpipein.c	/^static void input_handle(int sig __attribute__((unused)))$/;"	f	file:
input_string	module/pvsparse.c	/^static char *input_string;$/;"	v	file:
inputat	windows/edit.c	/^static Atom inputat, outputat, intestat, outtestat, textat, procesidat;$/;"	v	file:
inputbyte	tools/pktobdf.c	/^eightbits inputbyte ;$/;"	v
inputdef	language/parse.y	/^inputdef    :	INPUT '{' inputitems '}'$/;"	l
inputitems	language/parse.y	/^inputitems  :	\/* empty *\/$/;"	l
inputstack	language/parse.c	/^static FILESTACK *inputstack=0;$/;"	v	file:
insert	treeedit/editor.cc	/^static void insert(Char c, Index count)$/;"	f	file:
insert	treeedit/node.cc	/^Bool Node::insert(Index nnr)$/;"	f	class:Node
insert	treeedit/node.cc	/^Bool Node::insert(Index pos, Char c, Index count)$/;"	f	class:Node
insert	treeedit/select.cc	/^Bool Select::insert(Char c, Index count)$/;"	f	class:Select
insert	util/debug.c	/^static lfptr insert(lfptr t, LISTELM *val)$/;"	f	file:
insert	util/memman.c	/^static lfptr insert(lfptr t, LISTELM *val)$/;"	f	file:
insert_String_in_version	windows/notadef.c	/^static int insert_String_in_version(Char *str)$/;"	f	file:
insert_backtab	windows/notadef.c	/^static void insert_backtab(Index arg)$/;"	f	file:
insert_char	treeedit/editor.cc	/^void insert_char(int c, Index count)$/;"	f
insert_char	windows/notadef.c	/^static void insert_char(int keycode, Index arg)$/;"	f	file:
insert_char_in_name	windows/notadef.c	/^static void insert_char_in_name(Char *name, Char ch, int n __attribute__((unused)))$/;"	f	file:
insert_disp	treeedit/editor.cc	/^void insert_disp(Index count)$/;"	f
insert_expr	treeedit/editor.cc	/^void insert_expr(Index count)$/;"	f
insert_expr	windows/notadef.c	/^static void insert_expr(Index arg)$/;"	f	file:
insert_font	windows/notadef.c	/^static void insert_font(int fontnr)$/;"	f	file:
insert_formatstring	windows/notadef.c	/^static int insert_formatstring(Bool preph, Char *str, Bool postph)$/;"	f	file:
insert_glueline	windows/notadef.c	/^static void insert_glueline(void)$/;"	f	file:
insert_gluespace	windows/notadef.c	/^static void insert_gluespace(void)$/;"	f	file:
insert_gluestipple	windows/notadef.c	/^static void insert_gluestipple(void)$/;"	f	file:
insert_hard_newline	treeedit/editor.cc	/^void insert_hard_newline(Index count)$/;"	f
insert_id	treeedit/editor.cc	/^void insert_id(Index count)$/;"	f
insert_id	windows/notadef.c	/^static void insert_id(Index arg)$/;"	f	file:
insert_in_version	windows/notadef.c	/^static int insert_in_version(Char sym, int n)$/;"	f	file:
insert_list	treeedit/editor.cc	/^void insert_list(Index count)$/;"	f
insert_ltab	treeedit/editor.cc	/^void insert_ltab(Index count)$/;"	f
insert_newline	treeedit/editor.cc	/^void insert_newline(Index count)$/;"	f
insert_node	language/leaftree.c	/^static BreanchNode* insert_node(BreanchNode* t, void* val)$/;"	f	file:
insert_node	util/leaftree.c	/^static BreanchNode* insert_node(BreanchNode* t, void* val)$/;"	f	file:
insert_notation	treeedit/editor.cc	/^void insert_notation(Index nnr)$/;"	f
insert_notation	windows/notadef.c	/^static void insert_notation(NOTATION *nota, int vnr)$/;"	f	file:
insert_op	treeedit/editor.cc	/^void insert_op(Index count)$/;"	f
insert_op	windows/notadef.c	/^static void insert_op(Index arg)$/;"	f	file:
insert_parse_result	treeedit/editor.cc	/^void insert_parse_result(void *selection)$/;"	f
insert_pointer	util/debug.c	/^static int insert_pointer(void *p, size_t size)$/;"	f	file:
insert_pointer	util/memman.c	/^static int insert_pointer(void *p, size_t size)$/;"	f	file:
insert_pointer	util/memman.c	350;"	d	file:
insert_poptabs	treeedit/editor.cc	/^void insert_poptabs(Index count)$/;"	f
insert_pushtabs	treeedit/editor.cc	/^void insert_pushtabs(Index count)$/;"	f
insert_relative_size	windows/notadef.c	/^static void insert_relative_size(int sizenr)$/;"	f	file:
insert_return	windows/notadef.c	/^static void insert_return(Index arg)$/;"	f	file:
insert_rtab	treeedit/editor.cc	/^void insert_rtab(Index count)$/;"	f
insert_selection	treeedit/editor.cc	/^void insert_selection(void *selection, Char symbol)$/;"	f
insert_settab	treeedit/editor.cc	/^void insert_settab(Index count)$/;"	f
insert_settab	windows/notadef.c	/^static void insert_settab(Index arg)$/;"	f	file:
insert_size	windows/notadef.c	/^static void insert_size(int sizenr)$/;"	f	file:
insert_soft_return	windows/notadef.c	/^static void insert_soft_return(Index arg)$/;"	f	file:
insert_special_symbol	windows/notadef.c	/^static void insert_special_symbol(Char sym)$/;"	f	file:
insert_stencil	treeedit/select.cc	/^void Select::insert_stencil(Index innr)$/;"	f	class:Select
insert_string	treeedit/editor.cc	/^void insert_string(Char *st)$/;"	f
insert_string	treeedit/node.cc	/^void Node::insert_string(Index pos, Char *s, Index count)$/;"	f	class:Node
insert_string	treeedit/select.cc	/^void Select::insert_string(Char* s)$/;"	f	class:Select
insert_string_in_version	windows/notadef.c	/^static int insert_string_in_version(char *str)$/;"	f	file:
insert_string_selection	treeedit/editor.cc	/^void insert_string_selection(void *selection, Char *string)$/;"	f
insert_symbol	treeedit/editor.cc	/^void insert_symbol(int c, Index count)$/;"	f
insert_tab	windows/notadef.c	/^static void insert_tab(Index arg)$/;"	f	file:
insert_tabminus	treeedit/editor.cc	/^void insert_tabminus(Index count)$/;"	f
insert_tabplus	treeedit/editor.cc	/^void insert_tabplus(Index count)$/;"	f
insert_template_selection	treeedit/editor.cc	/^void insert_template_selection(void *selection, Index nnr)$/;"	f
insert_text	treeedit/editor.cc	/^void insert_text(Index count)$/;"	f
insert_text	windows/notadef.c	/^static void insert_text(Index arg)$/;"	f	file:
insert_var	treeedit/editor.cc	/^void insert_var(Index count)$/;"	f
insert_var	windows/notadef.c	/^static void insert_var(Index arg)$/;"	f	file:
inside	windows/button.c	/^	    Bool pressed, inside;$/;"	m	struct:__anon75	file:
instring	windows/output.c	/^static int instring;$/;"	v	file:
int16_t	module/pvsparse.c	/^typedef int int16_t __attribute__ ((__mode__ (__HI__)));$/;"	t	file:
int32_t	module/pvsparse.c	/^typedef int int32_t __attribute__ ((__mode__ (__SI__)));$/;"	t	file:
int64_t	module/pvsparse.c	/^typedef int int64_t __attribute__ ((__mode__ (__DI__)));$/;"	t	file:
int8_t	module/pvsparse.c	/^typedef int int8_t __attribute__ ((__mode__ (__QI__)));$/;"	t	file:
int_add	include/flexarray.h	38;"	d
int_clear	include/flexarray.h	42;"	d
int_cmp	util/flexarray.c	/^int int_cmp(const void *x, const void *y)$/;"	f
int_contains	include/flexarray.h	36;"	d
int_copy	include/flexarray.h	46;"	d
int_init	include/flexarray.h	41;"	d
int_item	include/flexarray.h	44;"	d
int_max	include/flexarray.h	45;"	d
int_remove	include/flexarray.h	37;"	d
int_set	include/flexarray.h	43;"	d
int_switch	include/flexarray.h	40;"	d
intadd	language/intlib.c	/^static int intadd(int i, int j)$/;"	f	file:
intadd	language/ptest.c	/^static int intadd(int i, int j)$/;"	f	file:
intand	language/intlib.c	/^static int intand(int i, int j)$/;"	f	file:
intarg	windows/popup.c	/^  int intarg;$/;"	m	struct:__anon72	file:
intcall	language/prototype.c	/^static int intcall(int(*fcal)(), void **args)$/;"	f	file:
intconsts	language/variable.c	/^static LeafTree intconsts = { 0, argint_cmp, 0, sizeof(Argument) };$/;"	v	file:
intdivide	language/intlib.c	/^static int intdivide(int i, int j)$/;"	f	file:
integer	tools/pktobdf.c	/^typedef int integer ;$/;"	t	file:
intequal	language/intlib.c	/^static int intequal(int i, int j)$/;"	f	file:
interupted	language/sequence.c	/^static int interupted=0;$/;"	v	file:
intestat	windows/edit.c	/^static Atom inputat, outputat, intestat, outtestat, textat, procesidat;$/;"	v	file:
intgreater	language/intlib.c	/^static int intgreater(int i, int j)$/;"	f	file:
intgreater	language/ptest.c	/^static int intgreater(int i, int j)$/;"	f	file:
intgreaterequal	language/intlib.c	/^static int intgreaterequal(int i, int j)$/;"	f	file:
intland	language/intlib.c	/^static int intland(int i, int j)$/;"	f	file:
intless	language/intlib.c	/^static int intless(int i, int j)$/;"	f	file:
intless	language/ptest.c	/^static int intless(int i, int j)$/;"	f	file:
intlessequal	language/intlib.c	/^static int intlessequal(int i, int j)$/;"	f	file:
intlnot	language/intlib.c	/^static int intlnot(int i)$/;"	f	file:
intlor	language/intlib.c	/^static int intlor(int i, int j)$/;"	f	file:
intlxor	language/intlib.c	/^static int intlxor(int i, int j)$/;"	f	file:
intminus	language/intlib.c	/^static int intminus(int i, int j)$/;"	f	file:
intminus	language/ptest.c	/^static int intminus(int i, int j)$/;"	f	file:
intmult	language/intlib.c	/^static int intmult(int i, int j)$/;"	f	file:
intnot	language/intlib.c	/^static int intnot(int i)$/;"	f	file:
intnotequal	language/intlib.c	/^static int intnotequal(int i, int j)$/;"	f	file:
into	treeedit/select.cc	/^void Select::into()$/;"	f	class:Select
intor	language/intlib.c	/^static int intor(int i, int j)$/;"	f	file:
intremain	language/intlib.c	/^static int intremain(int i, int j)$/;"	f	file:
intshiftleft	language/intlib.c	/^static int intshiftleft(int i, int j)$/;"	f	file:
intshiftright	language/intlib.c	/^static int intshiftright(int i, int j)$/;"	f	file:
intvar	windows/default.c	115;"	d	file:
intxor	language/intlib.c	/^static int intxor(int i, int j)$/;"	f	file:
invis	windows/notadef.c	/^static int invis = MP_False;$/;"	v	file:
invisible	windows/popup.c	/^static Bool invisible=MP_False;$/;"	v	file:
ioerror_handler	tools/xpipein.c	/^static int ioerror_handler(Display *d __attribute__((unused)))$/;"	f	file:
ioerror_handler	tools/xpipeout.c	/^static int ioerror_handler(Display *d __attribute__((unused)))$/;"	f	file:
ioerror_handler	windows/sources.c	/^static int ioerror_handler(Display *d, XErrorEvent *err)$/;"	f	file:
iosig_on	tools/xpipein.c	/^int iosig_on=1;$/;"	v
iref	include/types.h	/^  int *iref;     \/* for referenced scalar types *\/$/;"	m	union:__anon56
is_click	windows/sources.c	/^Bool   motion_set = MP_False, motion_wait = MP_False, is_click = MP_True;$/;"	v
is_directory	util/funcs.c	/^Bool is_directory(Char *name)$/;"	f
is_drag	windows/sources.c	/^Bool is_drag(unsigned long  motion_time)$/;"	f
is_file	util/funcs.c	/^static Bool is_file(Char *name)$/;"	f	file:
is_icon	windows/notation.c	/^    Bool is_icon;$/;"	m	struct:__anon74	file:
is_integer	windows/default.c	/^    Bool is_integer;       \/* tevens layout_change-factor *\/$/;"	m	struct:__anon76	file:
is_integer	windows/getstring.c	/^           Bool is_integer, is_mapped;$/;"	m	struct:STRINGINFO	file:
is_key_modifier	keyboard/keys.c	/^int is_key_modifier(KeyNum key)$/;"	f
is_mapped	windows/getstring.c	/^           Bool is_integer, is_mapped;$/;"	m	struct:STRINGINFO	file:
is_opened	windows/edit.c	/^static int is_opened=MP_False;$/;"	v	file:
is_opened	windows/notation.c	/^static int is_opened = MP_False;$/;"	v	file:
is_opened	windows/symbol.c	/^static int is_opened = MP_False;$/;"	v	file:
is_pos	module/pvsparse.c	/^static int is_pos=0;$/;"	v	file:
is_search	windows/menu.c	/^static Bool is_search = MP_True;$/;"	v	file:
is_stencil	treeedit/node.hh	/^    Bool  is_stencil() const { return stencil; }$/;"	f	class:Node
is_userfunc	language/parse.c	/^    int is_userfunc;$/;"	m	struct:__anon11	file:
isbasenumber	unicode/unistring.c	429;"	d	file:
isbasenumber	util/funcs.c	61;"	d	file:
isbuf	keyboard/keyboard.c	/^static Uchar isbuf[256];$/;"	v	file:
iso2name	markup/lang_markup.c	/^    char iso2name[4];   \/* 2 character code (ISO 639)  ascii *\/$/;"	m	struct:ISOLANG	file:
iso3Bname	markup/lang_markup.c	/^    char iso3Bname[4];  \/* 3 character code (ISO 639-2\/B) ascii *\/$/;"	m	struct:ISOLANG	file:
iso3Tname	markup/lang_markup.c	/^    char iso3Tname[4];  \/* 3 character code (ISO 639-2\/T) ascii *\/$/;"	m	struct:ISOLANG	file:
iso8859_1_convert	unicode/unistring.c	/^static Uchar iso8859_1_convert(char c)$/;"	f	file:
isolang	markup/lang_markup.c	/^static const ISOLANG isolang[] = {$/;"	v	file:
item	unicode/drawstring.c	/^    WordItem  item[MAXACCENT];$/;"	m	struct:__anon96	file:
itemlist	windows/notadef.c	/^ITEMLIST itemlist[MAX_ITEMLIST] =$/;"	v
itemnr	windows/output.c	/^    short width, ascent, descent, x, y, itemnr,$/;"	m	struct:BOX	file:
items	windows/output.c	/^static XTextItem16 *items;$/;"	v	file:
itemtot	windows/output.c	/^          itemtot, lasc, ldesc, lright, maxwidth,$/;"	m	struct:BOX	file:
ival	include/types.h	/^  int ival;      \/* for scalar types    *\/$/;"	m	union:__anon56
ival	language/parse.c	/^	int ival;$/;"	m	union:__anon14	file:
ivnr	include/notatype.h	/^	  int ivnr;$/;"	m	struct:__anon46
iwin	windows/events.c	/^static Window iwin = 0, parent=0, parentspar=0, first_click=0;$/;"	v	file:
join_parse_stack	treeedit/editor.cc	/^void join_parse_stack(void)$/;"	f
join_selections	treeedit/editor.cc	/^void join_selections(Index sel1, Index sel2)$/;"	f
join_stack	treeedit/node.cc	/^void Node::join_stack(void)$/;"	f	class:Node
jumpout	tools/pktobdf.c	/^static void jumpout()$/;"	f	file:
key	keyboard/keyboard.c	/^    Key key;$/;"	m	struct:KeyList	file:
key	language/parse.c	/^  KeyNum *key;$/;"	m	struct:__anon13	file:
key	language/parse.c	/^  KeyNum key;$/;"	m	struct:__anon12	file:
key_match_exact	keyboard/keyboard.c	/^static int key_match_exact(Key *k1, KeyNum num, KeyMode mode)$/;"	f	file:
key_match_pressed	keyboard/keyboard.c	/^static int key_match_pressed(Key *k1, KeyNum num, KeyMode mode)$/;"	f	file:
key_t	module/pvsparse.c	/^typedef __key_t key_t;$/;"	t	file:
keyandmodetochar	keyboard/X11syskeys.c	/^static int keyandmodetochar(KeyNum keynum, KeyMode keymode)$/;"	f	file:
keyboard_init	keyboard/keyboard.c	/^void keyboard_init(void) { }$/;"	f
keyboarddef	language/parse.y	/^keyboarddef :	KEYBOARD IDENTIFIER '{'$/;"	l
keyboardstack	windows/sources.c	/^    void *keyboardstack;$/;"	m	struct:__anon82	file:
keydef	language/parse.y	/^keydef      :	\/* empty *\/$/;"	l
keydefs	language/parse.y	/^keydefs     :	keydef$/;"	l
keyfunclist	windows/getstring.c	/^static KeyFunc keyfunclist[] =$/;"	v	file:
keyfunclist	windows/notadef.c	/^static KeyFunc keyfunclist[] =$/;"	v	file:
keyidents	language/parse.y	/^keyidents   :   IDENTIFIER$/;"	l
keylen	module/pvs.c	/^  int keylen;$/;"	m	struct:__anon15	file:
keylist	language/parse.y	/^keylist     :   KEY$/;"	l
keymap	include/keyboard.h	/^struct keymap {$/;"	s
keymap	keyboard/keyboard.c	/^    KeyMap *keymap;$/;"	m	struct:KeyMapList	file:
keymap	keyboard/keyboard.c	/^    KeyMap *keymap;$/;"	m	struct:KeyStack	file:
keynummap	keyboard/X11syskeys.c	/^static MapUchar keynummap=0;$/;"	v	file:
keynumtounicode	keyboard/X11syskeys.c	/^static int keynumtounicode(KeyNum keynum)$/;"	f	file:
keypath	documents/system.c	/^     *keypath = NULL,$/;"	v
keypath_exist	windows/default.c	/^static Bool keypath_exist(Char *path)$/;"	f	file:
keys	language/parse.c	/^static KeyNum keys[500];$/;"	v	file:
keysfuncs	windows/editlib.c	/^static FUNCTIONTYPE keysfuncs[] = $/;"	v	file:
keystringbuf	keyboard/X11syskeys.c	/^static char keystringbuf[500];$/;"	v	file:
keysym	include/keyboard.h	/^    KeyNum keysym;   \/* number of the key *\/$/;"	m	struct:__anon49
keyval	language/parse.c	/^        KeyDesc keyval;$/;"	m	union:__anon14	file:
keyval	module/pvs.c	/^  char *keyval;$/;"	m	struct:__anon15	file:
keyword	module/pvs.c	/^  KeywordItem *keyword;  \/* the matched keyword *\/$/;"	m	struct:ProofStep	file:
kill	treeedit/select.cc	/^Bool Select::kill(Bool front)$/;"	f	class:Select
kill_length	windows/notadef.c	/^static int kill_length(Char *s, int pos)$/;"	f	file:
kill_line	treeedit/editor.cc	/^void kill_line(Index count)$/;"	f
kill_line	treeedit/select.cc	/^Bool Select::kill_line(Offset count)$/;"	f	class:Select
kill_line	windows/notadef.c	/^static void kill_line(void)$/;"	f	file:
kill_region	treeedit/editor.cc	/^void kill_region(void)$/;"	f
kill_word	treeedit/editor.cc	/^void kill_word(Index count)$/;"	f
kill_word	treeedit/select.cc	/^Bool Select::kill_word(Offset count)$/;"	f	class:Select
killnode	treeedit/editor.cc	/^Node *killnode = Empty;$/;"	v
kind	include/leaftree.h	/^    char kind;       \/* 0=leaf, 1=breanch *\/$/;"	m	struct:bnode
kind	include/leaftree.h	/^    char kind;$/;"	m	struct:lnode
kind	include/notatype.h	/^struct  { Opkind kind;$/;"	m	struct:__anon47
kind	templates/match.c	/^    char kind;$/;"	m	struct:ParseLeaf	file:
kind	templates/match.c	/^    char kind;$/;"	m	struct:__anon37	file:
kind	treeedit/marker.hh	/^    Kind kind() const { return _kind; }$/;"	f	class:Marker
kind	treeedit/node.hh	/^    Char kind() const { return _kind; }$/;"	f	class:Node
kind	treeedit/select.hh	/^    Char kind() { return begin->kind(); }$/;"	f	class:Select
kind	util/debug.c	/^    int kind;$/;"	m	struct:ltnode	file:
kind	util/memman.c	/^    int kind;$/;"	m	struct:ltnode	file:
kind	windows/notation.c	/^    int kind, anr, mnr, height;$/;"	m	struct:__anon73	file:
kind_description	templates/notatype.c	/^Char *kind_description(int kind)$/;"	f
kind_of_remark	windows/remark.c	/^int kind_of_remark = NO_REMARK;$/;"	v
kinddes	windows/notation.c	/^static Char *kinddes[MAX_KIND];$/;"	v	file:
kinddesc	templates/notatype.c	/^static char *kinddesc[MAX_KIND] =$/;"	v	file:
kindsel	windows/notation.c	/^static int anrsel= -1, kindsel= -1;$/;"	v	file:
klistval	language/parse.c	/^        KeyList klistval;$/;"	m	union:__anon14	file:
kwlist	module/pvs.c	/^static KeywordItem *kwlist=0;$/;"	v	file:
lang_handle	markup/lang_markup.c	/^static Uchar *lang_handle(int lowvalue, Attribute *attr, RedirectFunc *func)$/;"	f	file:
lang_markup_init	markup/lang_markup.c	/^void lang_markup_init(void)$/;"	f
lang_print	markup/lang_markup.c	/^static Uchar *lang_print(int lowvalue, Attribute *attr, RedirectFunc *func)$/;"	f	file:
langbuf	markup/lang_markup.c	/^static Uchar *langbuf=NULL;$/;"	v	file:
langbufsize	markup/lang_markup.c	/^static int langbufsize=0;$/;"	v	file:
langname	util/translate.c	/^  Uchar *langname;         \/* name of the language *\/$/;"	m	struct:__anon67	file:
language	include/markup.h	/^    int language; \/* language code (might influence other attributes) *\/$/;"	m	struct:_attribs
languagecode	util/translate.c	/^  int languagecode;        \/* codenumber for this language *\/$/;"	m	struct:__anon67	file:
lasc	windows/output.c	/^          itemtot, lasc, ldesc, lright, maxwidth,$/;"	m	struct:BOX	file:
last	include/fifolist.h	/^  void *last;$/;"	m	struct:_FifoList
last	language/parse.c	/^    Expression *last;$/;"	m	struct:__anon10	file:
last	language/parse.c	/^    Expression *last;$/;"	m	struct:__anon9	file:
last	language/parse.c	/^    Sequence *last;$/;"	m	struct:__anon7	file:
last	treeedit/editwindow.hh	/^    Return* last;$/;"	m	class:EditWindow
last	treeedit/node.cc	/^Node * Node::last()$/;"	f	class:Node
last	util/fifolist.c	/^  ObjectList *last;$/;"	m	struct:_FIFOList	file:
last_added	language/popupmenu.c	/^static PopupLine *last_added=NULL;$/;"	v	file:
last_close	output/latexout.c	/^static int last_close = 0;$/;"	v	file:
last_height	windows/buffer.c	/^static unsigned int last_width = 0, last_height = 0;$/;"	v	file:
last_height	windows/default.c	/^static unsigned int last_width = 0, last_height = 0;$/;"	v	file:
last_height	windows/edit.c	/^static int last_xpos =0, last_ypos = 0, last_width = 0, last_height = 0;$/;"	v	file:
last_height	windows/find.c	/^static int last_xpos = 0, last_ypos = 0, last_width=0, last_height = 0;$/;"	v	file:
last_height	windows/notation.c	/^static int last_width=0, last_height=0, last_xpos = 0, last_ypos = 0;$/;"	v	file:
last_height	windows/symbol.c	/^static int last_xpos = 0, last_ypos = 0, last_width = 0, last_height = 0;$/;"	v	file:
last_node	treeedit/editor.cc	/^void *last_node(void *selection)$/;"	f
last_pagelist	windows/symbol.c	/^static SYMBOLPAGE *last_pagelist=0;$/;"	v	file:
last_pos	include/sources.h	/^    int  (*last_pos)(int *, int*,int*,int*); \/* x,y,w,h *\/$/;"	m	struct:__anon41
last_time	windows/sources.c	/^unsigned long message_time = 0, last_time = 0;$/;"	v
last_used	templates/notatype.c	/^static unsigned long last_used=0;$/;"	v	file:
last_used_find_nr	treeedit/node.cc	/^Char Node::last_used_find_nr()$/;"	f	class:Node
last_width	windows/buffer.c	/^static unsigned int last_width = 0, last_height = 0;$/;"	v	file:
last_width	windows/default.c	/^static unsigned int last_width = 0, last_height = 0;$/;"	v	file:
last_width	windows/edit.c	/^static int last_xpos =0, last_ypos = 0, last_width = 0, last_height = 0;$/;"	v	file:
last_width	windows/find.c	/^static int last_xpos = 0, last_ypos = 0, last_width=0, last_height = 0;$/;"	v	file:
last_width	windows/notation.c	/^static int last_width=0, last_height=0, last_xpos = 0, last_ypos = 0;$/;"	v	file:
last_width	windows/symbol.c	/^static int last_xpos = 0, last_ypos = 0, last_width = 0, last_height = 0;$/;"	v	file:
last_window	templates/notatype.c	/^Bool last_window(int fnr)$/;"	f
last_xpos	windows/buffer.c	/^static int last_xpos = 0, last_ypos = 0;$/;"	v	file:
last_xpos	windows/default.c	/^static int last_xpos = 0, last_ypos = 0;$/;"	v	file:
last_xpos	windows/edit.c	/^static int last_xpos =0, last_ypos = 0, last_width = 0, last_height = 0;$/;"	v	file:
last_xpos	windows/find.c	/^static int last_xpos = 0, last_ypos = 0, last_width=0, last_height = 0;$/;"	v	file:
last_xpos	windows/notation.c	/^static int last_width=0, last_height=0, last_xpos = 0, last_ypos = 0;$/;"	v	file:
last_xpos	windows/symbol.c	/^static int last_xpos = 0, last_ypos = 0, last_width = 0, last_height = 0;$/;"	v	file:
last_ypos	windows/buffer.c	/^static int last_xpos = 0, last_ypos = 0;$/;"	v	file:
last_ypos	windows/default.c	/^static int last_xpos = 0, last_ypos = 0;$/;"	v	file:
last_ypos	windows/edit.c	/^static int last_xpos =0, last_ypos = 0, last_width = 0, last_height = 0;$/;"	v	file:
last_ypos	windows/find.c	/^static int last_xpos = 0, last_ypos = 0, last_width=0, last_height = 0;$/;"	v	file:
last_ypos	windows/notation.c	/^static int last_width=0, last_height=0, last_xpos = 0, last_ypos = 0;$/;"	v	file:
last_ypos	windows/symbol.c	/^static int last_xpos = 0, last_ypos = 0, last_width = 0, last_height = 0;$/;"	v	file:
lastattrib	unicode/virtread.c	/^static int lastattrib=0;$/;"	v	file:
lastchar	module/pvsparse.c	/^static int lastchar=' ';$/;"	v	file:
lastfind	unicode/unifont.c	/^static ALIASREC *lastfind=NULL;$/;"	v	file:
lastfind	unicode/virtread.c	/^static ALIASREC *lastfind=NULL;$/;"	v	file:
lastfont	windows/output.c	/^static int lastfont=LASTFONT(-1);$/;"	v	file:
lasthintfile	module/pvs.c	/^static int lasthintfile=0;$/;"	v	file:
lasthintnr	module/pvs.c	/^static unsigned long lasthintnr=2946556493UL;$/;"	v	file:
lastkilled	treeedit/editor.cc	/^Node *lastkilled = Empty;$/;"	v
lastleaf	language/leaftree.c	/^static BreanchNode* lastleaf=NULL;$/;"	v	file:
lastleaf	util/leaftree.c	/^static BreanchNode* lastleaf=NULL;$/;"	v	file:
lastlemmanr	module/pvs.c	/^static int lastlemmanr=0;$/;"	v	file:
lastline	include/popupmenu.h	/^  PopupLine *firstline, *lastline;$/;"	m	struct:PopupMenu
lastmod	util/filefind.c	/^  time_t lastmod;$/;"	m	struct:CacheInfo	file:
lastopened	windows/symbol.c	/^static SYMBOLINFO *lastopened=0;$/;"	v	file:
lasttime	keyboard/keyboard.c	/^static unsigned long lasttime;$/;"	v	file:
lastused	windows/symbol.c	/^  int lastused;   \/* last used character in table *\/$/;"	m	struct:SYMBOLPAGE	file:
latex	treeedit/editwindow.hh	/^    void latex() { root->latex(); }$/;"	f	class:EditWindow
latex	treeedit/node.cc	/^void Node::latex(Index begin, Index end)$/;"	f	class:Node
latex	treeedit/select.cc	/^void Select::latex()$/;"	f	class:Select
latex_all_parens	treeedit/editor.cc	/^void latex_all_parens(Bool allparens)$/;"	f
latex_autoload	output/latexout.c	/^static void latex_autoload(void)$/;"	f	file:
latex_editwindow	treeedit/editor.cc	/^void latex_editwindow(void* w)$/;"	f
latex_line	treeedit/node.cc	/^Mark Node::latex_line(Index &n)$/;"	f	class:Node
latex_line	treeedit/select.cc	/^void Select::latex_line(Index &n)$/;"	f	class:Select
latex_line_unit	documents/system.c	/^Char *latex_line_unit,$/;"	v
latex_node	treeedit/editor.cc	/^void latex_node(void *node)$/;"	f
latex_ph	output/latexout.c	/^char *latex_ph[7] = { "\\\\mpE ", "\\\\mpO ", "\\\\mpI ", "\\\\mpV ", $/;"	v	file:
latex_phnum	output/latexout.c	/^char *latex_phnum[16] = { "", "_1", "_2", "_3", "_4", "_5", "_6", "_7",$/;"	v	file:
latex_select	windows/menu.c	/^static void latex_select(Index arg)$/;"	f	file:
latex_selection	treeedit/editor.cc	/^void latex_selection(int selnum)$/;"	f
latex_side	documents/system.c	/^int latex_side = 3,$/;"	v
latex_space_unit	documents/system.c	/^     *latex_space_unit;$/;"	v
latex_tab	output/latexout.c	/^char *latex_tab[44] = { "\\\\\\\\\\n\\t", "\\\\=",  "\\t\\\\>",    "\\\\<",$/;"	v	file:
latex_tab_unit	documents/system.c	/^     *latex_tab_unit,$/;"	v
latex_text_only	treeedit/editor.cc	/^void latex_text_only(Bool tonly)$/;"	f
latexdir	documents/system.c	/^     *latexdir = NULL,$/;"	v
latexloaded	output/latexout.c	/^static int latexloaded=0;$/;"	v	file:
latexmath	output/latexout.c	/^static MapStr latexmath=0;$/;"	v	file:
latexmode	include/notatype.h	/^	  int latexmode;$/;"	m	struct:__anon46
latexselection	windows/sources.c	/^char *latexselection = NULL;$/;"	v
latextext	output/latexout.c	/^static MapStr latextext=0;$/;"	v	file:
layout_change	include/sources.h	/^    void (*layout_change)(void*);$/;"	m	struct:__anon41
layout_input	language/parse.c	/^static int layout_input(void)$/;"	f	file:
layout_output	language/parse.c	/^static void layout_output(char c)$/;"	f	file:
layout_unput	language/parse.c	/^static void layout_unput(char c)$/;"	f	file:
layout_wrapup	language/parse.c	/^static int layout_wrapup(void)$/;"	f	file:
layoutdef	language/parse.y	/^layoutdef   :	LAYOUT IDENTIFIER '{' layoutlines '}'$/;"	l
layoutline	language/parse.y	/^layoutline  :	TITLE STRING$/;"	l
layoutlines	language/parse.y	/^layoutlines :	layoutline$/;"	l
lbox	windows/output.c	/^    BOX *fbox, *lbox, *nbox;$/;"	m	struct:BOX	file:
ldesc	windows/output.c	/^          itemtot, lasc, ldesc, lright, maxwidth,$/;"	m	struct:BOX	file:
ldiv_t	module/pvsparse.c	/^  } ldiv_t;$/;"	t	typeref:struct:__anon17	file:
le	include/expression.h	/^	Expression *le;$/;"	m	union:Expression::__anon50
leafsize	include/leaftree.h	/^    int leafsize;$/;"	m	struct:ltree
leafsize	language/leaftree.c	/^static int leafsize=MINSIZE;$/;"	v	file:
leafsize	util/leaftree.c	/^static int leafsize=MINSIZE;$/;"	v	file:
leave	include/sources.h	/^    void (*leave)(void*);$/;"	m	struct:__anon41
left	include/leaftree.h	/^    BreanchNode *left;$/;"	m	struct:bnode
left	treeedit/editwindow.hh	/^    Return *left;$/;"	m	class:Return
left	treeedit/node.cc	/^Node * Node::left() const$/;"	f	class:Node
left	util/debug.c	/^    lfptr left;$/;"	m	struct:ltnode	file:
left	util/memman.c	/^    lfptr left;$/;"	m	struct:ltnode	file:
left_margin	windows/output.c	/^static int left_margin;$/;"	v	file:
left_of	treeedit/node.cc	/^Node* Node::left_of(Index pos)$/;"	f	class:Node
left_on_stack	language/expression.c	/^int left_on_stack(Expression *e)$/;"	f
lemma	module/pvs.c	/^  char *lemma;$/;"	m	struct:PVSProof	file:
len	documents/fileread.c	/^    int len;$/;"	m	struct:CSTRINGSTACK	file:
len	documents/fileread.c	/^    int len;$/;"	m	struct:STRINGSTACK	file:
len	include/expression.h	/^    int len;$/;"	m	struct:__anon51
len	language/parse.c	/^  short len;$/;"	m	struct:__anon13	file:
len	language/powfix.c	/^  int len;$/;"	m	struct:mint	file:
len	module/pvs.c	/^  int len;$/;"	m	struct:KeywordItem	file:
len	templates/match.c	/^    int len;$/;"	m	struct:RULE	file:
len	tools/xpipein.c	/^    int len;$/;"	m	struct:STRSTACK	file:
len	tools/xpipeout.c	/^    int len;$/;"	m	struct:STRSTACK	file:
len	unicode/datatotable.c	/^static struct { char *str; int len; } formattag[]= {$/;"	m	struct:__anon99	file:
len	util/filefind.c	/^  int len;$/;"	m	struct:DirInfo	file:
len	windows/output.c	/^  int len;$/;"	m	struct:__anon79	file:
length	include/fifolist.h	/^  int length;$/;"	m	struct:_FifoList
length	include/memman.h	/^  int length;  \/* current length *\/$/;"	m	struct:__anon53
length	language/variable.c	/^    int length;$/;"	m	struct:LVStack	file:
length	module/pvsparse.c	/^  int length;$/;"	m	struct:__anon33	file:
length	unicode/drawstring.c	/^    int length;  \/* length of the itemlist when drawn (in pixels) *\/$/;"	m	struct:__anon96	file:
length	util/fifolist.c	/^  int length;$/;"	m	struct:_FIFOList	file:
length	windows/button.c	/^	    int length;              \/* lengte van text (char) *\/$/;"	m	struct:__anon75	file:
lex_add_string	templates/match.c	/^int lex_add_string(char *item, int retval)$/;"	f
lex_alter	templates/match.c	/^static int lex_alter(void)$/;"	f	file:
lex_input	language/parselex.c	61;"	d	file:
lex_input	module/pvsparselex.c	64;"	d	file:
lex_next	templates/match.c	/^static int lex_next(void)$/;"	f	file:
lex_open_file	language/parse.c	/^int lex_open_file(char *name)$/;"	f
lex_open_string	language/parse.c	/^void lex_open_string(char *s)$/;"	f
lex_output	language/parselex.c	13;"	d	file:
lex_output	module/pvsparselex.c	16;"	d	file:
lex_pop_state_skip	templates/match.c	/^static void lex_pop_state_skip()$/;"	f	file:
lex_pop_state_use	templates/match.c	/^static void lex_pop_state_use()$/;"	f	file:
lex_pos	templates/match.c	/^static int lex_pos;$/;"	v	file:
lex_print_state	templates/match.c	/^static void lex_print_state(void)$/;"	f	file:
lex_print_tree	templates/match.c	/^static void lex_print_tree(LeafTree *ptr, char *b, int pos)$/;"	f	file:
lex_push_state	templates/match.c	/^static void lex_push_state()$/;"	f	file:
lex_start	templates/match.c	/^static int lex_start(char *text)$/;"	f	file:
lex_state_stack	templates/match.c	/^static INTSTACK *lex_state_stack=NULL;$/;"	v	file:
lex_unput_buffer	language/parse.c	/^static char lex_unput_buffer[1024];$/;"	v	file:
lex_value	templates/match.c	/^int lex_value(char *item)$/;"	f
lextree	include/match.h	/^    void *lextree;$/;"	m	struct:ParseRules
lfptr	util/debug.c	/^typedef struct ltnode *lfptr;$/;"	t	typeref:struct:ltnode	file:
lfptr	util/memman.c	/^typedef struct ltnode *lfptr;$/;"	t	typeref:struct:ltnode	file:
libdir	documents/Makefile	/^libdir          = ${exec_prefix}\/lib\/MathSpad$/;"	m
libdir	include/Makefile	/^libdir          = ${exec_prefix}\/lib\/MathSpad$/;"	m
libdir	keyboard/Makefile	/^libdir          = ${exec_prefix}\/lib\/MathSpad$/;"	m
libdir	language/Makefile	/^libdir          = ${exec_prefix}\/lib\/MathSpad$/;"	m
libdir	markup/Makefile	/^libdir          = ${exec_prefix}\/lib\/MathSpad$/;"	m
libdir	module/Makefile	/^libdir          = ${exec_prefix}\/lib\/MathSpad$/;"	m
libdir	output/Makefile	/^libdir          = ${exec_prefix}\/lib\/MathSpad$/;"	m
libdir	templates/Makefile	/^libdir          = ${exec_prefix}\/lib\/MathSpad$/;"	m
libdir	tools/Makefile	/^libdir          = ${exec_prefix}\/lib\/MathSpad$/;"	m
libdir	treeedit/Makefile	/^libdir          = ${exec_prefix}\/lib\/MathSpad$/;"	m
libdir	unicode/Makefile	/^libdir          = ${exec_prefix}\/lib\/MathSpad$/;"	m
libdir	util/Makefile	/^libdir          = ${exec_prefix}\/lib\/MathSpad$/;"	m
libdir	windows/Makefile	/^libdir          = ${exec_prefix}\/lib\/MathSpad$/;"	m
liblist	language/loadlib.c	/^static Library *liblist=NULL;$/;"	v	file:
libpath	language/loadlib.c	/^static PathInfo libpath = 0;$/;"	v	file:
limitchar	windows/output.c	/^static int limitchar;$/;"	v	file:
line	include/popupmenu.h	/^  } line;$/;"	m	struct:PopupLine	typeref:union:PopupLine::__anon55
line_height	windows/output.c	/^int line_height(void)$/;"	f
line_number	treeedit/editor.cc	/^int line_number(void* w)$/;"	f
line_size	windows/scrollbar.c	/^	       first_line, line_size;$/;"	m	struct:__anon91	file:
line_space	documents/system.c	/^    line_space = 1,$/;"	v
line_to_pos	windows/scrollbar.c	/^static int line_to_pos(int line, int size, int nr_lines)$/;"	f	file:
line_y	windows/menu.c	/^static int line_y;$/;"	v	file:
linecount	language/parse.c	/^    int linecount; \/* number of lines processed so far *\/$/;"	m	struct:FILESTACK	file:
linenr	module/pvs.c	/^  int linenr;$/;"	m	struct:PVSProof	file:
lines	include/notatype.h	/^	  int lines;$/;"	m	struct:__anon46
lines	treeedit/node.cc	/^Index Node::lines()$/;"	f	class:Node
lines	windows/edit.c	/^struct { char *lines;$/;"	m	struct:__anon68	file:
lines	windows/notadef.c	/^static int lines[MAX_VERSION+3];$/;"	v	file:
linesel	windows/notation.c	/^static int linesel, colsel;$/;"	v	file:
linetype	include/popupmenu.h	/^  int linetype;$/;"	m	struct:PopupLine
link	treeedit/marker.cc	/^void Marker::link()$/;"	f	class:Marker
link_left	treeedit/editwindow.cc	/^Return* Return::link_left(const Mark& m)$/;"	f	class:Return
link_right	treeedit/editwindow.cc	/^Return* Return::link_right(const Mark& m)$/;"	f	class:Return
list	language/expression.c	/^  Type *list;        \/* String,String     Int,Int *\/$/;"	m	struct:OpStruct	file:
list	language/parse.c	/^    Argument *list;$/;"	m	struct:__anon8	file:
list	treeedit/node.hh	/^    Marker* list;   \/\/ List of markers pointing into the node.$/;"	m	class:Node
list	unicode/brows.c	/^Uchar *list = standard_string;$/;"	v
list	unicode/convert.c	/^Uchar *list;$/;"	v
list	windows/notation.c	/^    LISTELM *list;$/;"	m	struct:__anon74	file:
listlen	windows/editlib.c	/^  int listlen;$/;"	m	struct:__anon86	file:
listlen	windows/getstring.c	/^  int listlen;$/;"	m	struct:__anon77	file:
listlen	windows/notadef.c	/^  int listlen;$/;"	m	struct:__anon89	file:
listpos	windows/notation.c	/^    unsigned int listsize, maxlist, listpos;$/;"	m	struct:__anon74	file:
listsize	windows/notation.c	/^    unsigned int listsize, maxlist, listpos;$/;"	m	struct:__anon74	file:
lmodecode	windows/notadef.c	/^static Char lmodecode[4]= {0, AskText, AskMath, AskBoth};$/;"	v	file:
lmodepref	windows/notadef.c	/^static Bool lmodepref[4]= {MP_False, MP_False, MP_True, MP_False};$/;"	v	file:
lnode	include/leaftree.h	/^typedef struct lnode {$/;"	s
lnr	windows/fonts.c	/^    short fnr, lnr, fsnr, number, page[2], nrml, max;$/;"	m	struct:__anon70	file:
load	treeedit/node.cc	/^Offset Node::load(Char *str, int *len, int max)$/;"	f	class:Node
load_ascii	treeedit/editwindow.cc	/^void EditWindow::load_ascii()$/;"	f	class:EditWindow
load_ascii	treeedit/node.cc	/^Offset Node::load_ascii(Char *str, int *len, int max)$/;"	f	class:Node
load_defaults	windows/sources.c	/^static void load_defaults(FILE *file)$/;"	f	file:
load_editwindow	treeedit/editor.cc	/^void load_editwindow(void *w)$/;"	f
load_font_config	unicode/virtread.c	/^int load_font_config(PathInfo pmap, char *confname)$/;"	f
load_keypath	windows/default.c	/^void load_keypath(void)$/;"	f
load_library	language/loadlib.c	/^int load_library(char *libname)$/;"	f
load_map	unicode/uniconv.c	/^static void *load_map(void *name)$/;"	f	file:
load_notation_filenames	templates/notatype.c	/^Bool load_notation_filenames(FILE *f)$/;"	f
load_notation_window	templates/notatype.c	/^int load_notation_window(int fnr, Char *filename)$/;"	f
load_project	windows/sources.c	/^void load_project(Char *name)$/;"	f
load_stack	treeedit/node.cc	/^static Node* load_stack=Empty;$/;"	v	file:
load_stencil	templates/notatype.c	/^int load_stencil(int nr)$/;"	f
load_system_font	unicode/unifontX11.c	/^static int load_system_font(FONTREC *frec)$/;"	f	file:
load_system_font	unicode/unifontsys.c	/^static int load_system_font(FONTREC *frec)$/;"	f	file:
load_system_font	unicode/unifontsysstub.c	/^static int load_system_font(FONTREC *frec)$/;"	f	file:
loaded	unicode/unifont.c	/^    int loaded;$/;"	m	struct:FONTREC	file:
loaded	windows/fonts.c	/^    char *loaded;$/;"	m	struct:__anon70	file:
loading_old	documents/fileread.c	/^static int loading_old=0;$/;"	v	file:
locale_conv	unicode/unistring.c	/^static UConverter *locale_conv;$/;"	v	file:
localname	language/userdef.c	/^    char **localname;    \/* list of local names *\/$/;"	m	struct:__anon5	file:
localname	language/variable.c	/^static FlexArray localname = { 0, 0, 0, sizeof(char*), (CmpFunc) strcmp };$/;"	v	file:
localname_add	language/variable.c	190;"	d	file:
localname_clear	language/variable.c	193;"	d	file:
localname_copy	language/variable.c	194;"	d	file:
localname_item	language/variable.c	191;"	d	file:
localname_max	language/variable.c	192;"	d	file:
localscope	language/variable.c	/^static FlexArray localscope = { 0,0,0, sizeof(int), int_cmp };$/;"	v	file:
localscope_add	language/variable.c	204;"	d	file:
localscope_clear	language/variable.c	207;"	d	file:
localscope_item	language/variable.c	205;"	d	file:
localscope_max	language/variable.c	206;"	d	file:
localvar	language/userdef.c	/^    Value *localvar;     \/* local variables  (static) *\/$/;"	m	struct:__anon5	file:
localvar	language/variable.c	/^static FlexArray localvar = { 0, 0, 0, sizeof(Value), value_cmp };$/;"	v	file:
localvar_add	language/variable.c	197;"	d	file:
localvar_clear	language/variable.c	200;"	d	file:
localvar_copy	language/variable.c	201;"	d	file:
localvar_item	language/variable.c	198;"	d	file:
localvar_max	language/variable.c	199;"	d	file:
location	language/parse.y	/^location    :	LEFT$/;"	l
loccon	unicode/unistring.c	/^static Uchar (*loccon)(char) = iso8859_1_convert;$/;"	v	file:
lock_stencil	templates/notatype.c	/^void lock_stencil(Index inr)$/;"	f
locks	include/notatype.h	/^	  int locks,fillocks;$/;"	m	struct:__anon47
loff_t	module/pvsparse.c	/^typedef __loff_t loff_t;$/;"	t	file:
lookup_arg_type	language/variable.c	/^Type lookup_arg_type(Argument arg)$/;"	f
lookup_function	language/function.c	/^FuncRef lookup_function(char *name)$/;"	f
lookup_int_constant	language/constant.c	/^Argument lookup_int_constant(int n)$/;"	f
lookup_real_constant	language/constant.c	/^Argument lookup_real_constant(double r)$/;"	f
lookup_string_constant	language/constant.c	/^Argument lookup_string_constant(Uchar *s)$/;"	f
lookup_type	language/types.c	/^Type lookup_type(char *name)$/;"	f
lookup_typename	language/types.c	/^char *lookup_typename(Type t)$/;"	f
lookup_user_function	language/userdef.c	/^FuncRef lookup_user_function(char *name)$/;"	f
lookup_variable	language/variable.c	/^Argument lookup_variable(char *name)$/;"	f
lookuptable	templates/notatype.c	/^static FlexArray lookuptable;$/;"	v	file:
lower	treeedit/select.cc	/^void Select::lower()$/;"	f	class:Select
lower_region	treeedit/editor.cc	/^void lower_region(void)$/;"	f
lright	windows/output.c	/^          itemtot, lasc, ldesc, lright, maxwidth,$/;"	m	struct:BOX	file:
lrot	language/leaftree.c	/^static BreanchNode* lrot(BreanchNode* t)$/;"	f	file:
lrot	util/leaftree.c	/^static BreanchNode* lrot(BreanchNode* t)$/;"	f	file:
lsp	treeedit/editwindow.cc	/^Mark& EditWindow::lsp()$/;"	f	class:EditWindow
lspp	treeedit/editwindow.cc	/^Offset EditWindow::lspp; $/;"	m	class:EditWindow	file:
lspp	treeedit/editwindow.hh	/^    static Offset lspp; $/;"	m	class:EditWindow
ltab	windows/output.c	/^static void ltab(void)$/;"	f	file:
ltnode	util/debug.c	/^typedef struct ltnode {$/;"	s	file:
ltnode	util/memman.c	/^typedef struct ltnode {$/;"	s	file:
ltree	include/leaftree.h	/^typedef struct ltree {$/;"	s
ltx_finifunc	windows/notadef.c	/^static void ltx_finifunc(void)$/;"	f	file:
ltx_initfunc	windows/notadef.c	/^static void ltx_initfunc(void)$/;"	f	file:
lu_add	templates/notatype.c	117;"	d	file:
lu_clear	templates/notatype.c	120;"	d	file:
lu_cmp	templates/notatype.c	/^static int lu_cmp(const void* a __attribute__((unused)), const void* b __attribute__((unused))) { return 1; }$/;"	f	file:
lu_contains	templates/notatype.c	115;"	d	file:
lu_hi	templates/notatype.c	204;"	d	file:
lu_init	templates/notatype.c	119;"	d	file:
lu_item	templates/notatype.c	122;"	d	file:
lu_max	templates/notatype.c	123;"	d	file:
lu_remove	templates/notatype.c	116;"	d	file:
lu_set	templates/notatype.c	121;"	d	file:
lu_switch	templates/notatype.c	118;"	d	file:
lvlist	language/variable.c	/^    Value *lvlist;$/;"	m	struct:LVStack	file:
lvstack	language/variable.c	/^static LVStack *lvstack=0;$/;"	v	file:
lxtree	templates/match.c	/^    LeafTree *lxtree;$/;"	m	struct:__anon37	file:
m	treeedit/editwindow.cc	/^Mark& EditWindow::m()$/;"	f	class:EditWindow
m1	treeedit/editor.cc	/^static Mark& m1() { static Mark *m1val = new Mark(); return *m1val; } ;$/;"	f	file:
m2	treeedit/editor.cc	/^static Mark& m2() { static Mark *m2val = new Mark(); return *m2val; };$/;"	f	file:
main	language/example.c	/^int main(int argc, char **argv)$/;"	f
main	language/ptest.c	/^int main(int argc __attribute__((unused)), char *argv[])$/;"	f
main	templates/match.c	/^int main(int argc, char **argv)$/;"	f
main	tools/ispellfilter.c	/^int main(int argc __attribute__((unused)), char **argv __attribute__((unused)))$/;"	f
main	tools/load_and_save.cc	/^int main(int argc, char **argv)$/;"	f
main	tools/mpd2tex.cc	/^int main(int argc, char **argv)$/;"	f
main	tools/pktobdf.c	/^int main(argc, argv)$/;"	f
main	tools/xpipein.c	/^int main(int argc, char **argv)$/;"	f
main	tools/xpipeout.c	/^int main(int argc, char **argv)$/;"	f
main	tools/xsetprid.c	/^int main(int argc, char **argv)$/;"	f
main	treeedit/mathpad.cc	/^int main(int argc, char **argv)$/;"	f
main	unicode/asciitomap.c	/^int main(int argc, char **argv)$/;"	f
main	unicode/brows.c	/^int main(int argc, char **argv)$/;"	f
main	unicode/convert.c	/^int main(int argc, char **argv)$/;"	f
main	unicode/datatotable.c	/^int main(int argc, char **argv)$/;"	f
main	unicode/decomp.c	/^int main( int argc, char **argv)$/;"	f
main	unicode/fonttest.c	/^int main(int argc, char **argv)$/;"	f
main	unicode/maptoascii.c	/^int main(int argc, char **argv)$/;"	f
main	unicode/printdecomp.c	/^int main(int argc, char **argv)$/;"	f
main	unicode/strasciitomap.c	/^int main(int argc, char **argv)$/;"	f
main	unicode/typetest.c	/^int main(int argc, char **argv)$/;"	f
main	unicode/unicode1to2.c	/^int main(int argc, char **argv)$/;"	f
main	unicode/virtread.c	/^int main(int argc, char **argv)$/;"	f
main	util/fstate.c	/^int main(int argc, char **argv)$/;"	f
main_win	windows/remark.c	/^static Window remark_win = 0, main_win = 0;$/;"	v	file:
mainbufferfuncs	windows/buffer.c	/^FUNCTIONS mainbufferfuncs = {$/;"	v
maineditfuncs	windows/edit.c	/^FUNCTIONS maineditfuncs = {$/;"	v
mainmenu	include/popup.h	/^  MENU *mainmenu;$/;"	m	struct:MENU
mainmenu	windows/menu.c	/^static MENU mainmenu[NR_BUTTON+1];$/;"	v	file:
mainmenuname	windows/menu.c	/^static char *mainmenuname[NR_BUTTON+1] = {$/;"	v	file:
mainnotationfuncs	windows/notation.c	/^FUNCTIONS mainnotationfuncs = {$/;"	v
mainwin	windows/fileselc.c	/^    Window mainwin, dirwin, filewin;$/;"	m	struct:__anon71	file:
make_GCs	windows/sources.c	/^static void make_GCs(void)$/;"	f	file:
make_atoms	windows/sources.c	/^static void make_atoms(void)$/;"	f	file:
make_backup	templates/notatype.c	/^static void make_backup(int fnr, int dump)$/;"	f	file:
make_backup	util/filefind.c	/^void make_backup(char *name)$/;"	f
make_colors	windows/sources.c	/^static void make_colors(void)$/;"	f	file:
make_defaults	windows/sources.c	/^void make_defaults(int argc, char *argv[])$/;"	f
make_expression	language/expression.c	/^Expression *make_expression(Argument arg)$/;"	f
make_expression	module/hugsparse.c	129;"	d	file:
make_fileinfo	util/filefind.c	/^static ExtFileInfo *make_fileinfo(char *name, FileType ftype)$/;"	f	file:
make_fontfile_popup	windows/default.c	/^static void make_fontfile_popup(int nr, Bool motion __attribute__((unused)))$/;"	f	file:
make_fontpath	windows/sources.c	/^static void make_fontpath(void)$/;"	f	file:
make_fstate	util/fstate.c	/^FSTATE *make_fstate(Uchar *mask, int minimize)$/;"	f
make_id_popup	windows/menu.c	/^static Bool make_id_popup(void)$/;"	f	file:
make_identifier	module/hugsparse.c	130;"	d	file:
make_ifcheck	language/sequence.c	/^static Sequence *make_ifcheck(Expression *expr)$/;"	f	file:
make_index	templates/notatype.c	/^static void make_index(VERSION *vers)$/;"	f	file:
make_info	templates/notatype.c	/^Char *make_info(int innr)$/;"	f
make_ispell_popup	module/ispell.c	/^static void make_ispell_popup(char *prp, int len)$/;"	f	file:
make_lazy_expression	language/expression.c	/^Expression *make_lazy_expression(Expression *expr)$/;"	f
make_list	windows/notation.c	/^static void make_list(NOTATIONINFO *ninf)$/;"	f	file:
make_list_insert	treeedit/editor.cc	/^void make_list_insert(int c, Index count)$/;"	f
make_list_insert	treeedit/select.cc	/^Bool Select::make_list_insert(Char c, Index count)$/;"	f	class:Select
make_node	treeedit/editor.cc	/^void *make_node(Char type, Char *txt, int len, int nnr, int spacing)$/;"	f
make_notation_file	windows/notation.c	/^static void make_notation_file(void *data, Char *name)$/;"	f	file:
make_notation_popup	windows/notation.c	/^Bool make_notation_popup(int nnr, int vnr, void (*func)(void*,int),$/;"	f
make_operator	module/hugsparse.c	128;"	d	file:
make_pathinfo	util/filefind.c	/^PathInfo make_pathinfo(char *envvar, char *defpath, char *exts)$/;"	f
make_project	windows/menu.c	/^static void make_project(void)$/;"	f	file:
make_selection	windows/notadef.c	/^static void make_selection(int vnr, int fmnr, int pos1, int pos2)$/;"	f	file:
make_size_version	templates/notatype.c	/^Bool make_size_version(VERSION *vers, int fmnr, int newmax)$/;"	f
make_stack	templates/match.c	/^static void make_stack(void)$/;"	f	file:
make_stencil	templates/notatype.c	/^static int make_stencil(Char *str, int len, int kind, int prec, int spac)$/;"	f	file:
make_sticky	windows/popup.c	/^static void make_sticky(MENU *m)$/;"	f	file:
make_text	module/hugsparse.c	131;"	d	file:
make_tnode	module/hugsparse.c	126;"	d	file:
make_value_prototype	language/prototype.c	/^Prototype *make_value_prototype(const Value *valuelist, const int n,$/;"	f
make_version_popup	windows/menu.c	/^static Bool make_version_popup(void)$/;"	f	file:
make_visible	treeedit/editwindow.cc	/^Bool EditWindow::make_visible(const Mark& mv)$/;"	f	class:EditWindow
make_visible	treeedit/select.cc	/^Bool Select::make_visible()$/;"	f	class:Select
malloc	include/memman.h	33;"	d
malloc	include/memman.h	45;"	d
mandir	documents/Makefile	/^mandir          = ${prefix}\/share\/man\/man1$/;"	m
mandir	include/Makefile	/^mandir          = ${prefix}\/share\/man\/man1$/;"	m
mandir	keyboard/Makefile	/^mandir          = ${prefix}\/share\/man\/man1$/;"	m
mandir	language/Makefile	/^mandir          = ${prefix}\/share\/man\/man1$/;"	m
mandir	markup/Makefile	/^mandir          = ${prefix}\/share\/man\/man1$/;"	m
mandir	module/Makefile	/^mandir          = ${prefix}\/share\/man\/man1$/;"	m
mandir	output/Makefile	/^mandir          = ${prefix}\/share\/man\/man1$/;"	m
mandir	templates/Makefile	/^mandir          = ${prefix}\/share\/man\/man1$/;"	m
mandir	tools/Makefile	/^mandir          = ${prefix}\/share\/man\/man1$/;"	m
mandir	treeedit/Makefile	/^mandir          = ${prefix}\/share\/man\/man1$/;"	m
mandir	unicode/Makefile	/^mandir          = ${prefix}\/share\/man\/man1$/;"	m
mandir	util/Makefile	/^mandir          = ${prefix}\/share\/man\/man1$/;"	m
mandir	windows/Makefile	/^mandir          = ${prefix}\/share\/man\/man1$/;"	m
manext	documents/Makefile	/^manext          = .1$/;"	m
manext	include/Makefile	/^manext          = .1$/;"	m
manext	keyboard/Makefile	/^manext          = .1$/;"	m
manext	language/Makefile	/^manext          = .1$/;"	m
manext	markup/Makefile	/^manext          = .1$/;"	m
manext	module/Makefile	/^manext          = .1$/;"	m
manext	output/Makefile	/^manext          = .1$/;"	m
manext	templates/Makefile	/^manext          = .1$/;"	m
manext	tools/Makefile	/^manext          = .1$/;"	m
manext	treeedit/Makefile	/^manext          = .1$/;"	m
manext	unicode/Makefile	/^manext          = .1$/;"	m
manext	util/Makefile	/^manext          = .1$/;"	m
manext	windows/Makefile	/^manext          = .1$/;"	m
map	include/keyboard.h	/^    void *map;          \/* the map itself  *\/$/;"	m	struct:keymap
mapfilename	unicode/unifont.c	/^    char *mapfilename; \/* name, shared with alias list *\/$/;"	m	struct:ENCODINGREC	file:
mapfilename	unicode/virtread.c	/^    char *mapfilename; \/* name, shared with alias list *\/$/;"	m	struct:ENCODINGREC	file:
mapkeysymname	keyboard/X11syskeys.c	/^static char *mapkeysymname = "X11keysym";$/;"	v	file:
mappath	unicode/brows.c	/^static PathInfo mappath=0;$/;"	v	file:
mapped	windows/sources.c	/^    int state,mapped;$/;"	m	struct:__anon82	file:
margin	include/sources.h	/^    int  (*margin)(void*);$/;"	m	struct:__anon41
mark	windows/output.c	/^static XPoint mark[]     = {{0, -CHH}, {CWH, 0}, {0, CHH}, {-CWH, 0}};$/;"	v	file:
markup_init	markup/markup.c	/^void markup_init(void)$/;"	f
mask	windows/fileselc.c	/^    Char *mask;$/;"	m	struct:__anon71	file:
match	treeedit/node.cc	/^Bool Node::match(Node* fn, Node* fa, Node*& an, Index& ab, Index& ae)$/;"	f	class:Node
match_format_or_make	templates/notatype.c	/^int match_format_or_make(Char *str, int len, int kind, int prec, int spac)$/;"	f
match_tree	treeedit/node.cc	/^Bool Node::match_tree(Node *n, Index pos, Node **nlist, Char *tlist)$/;"	f	class:Node
matches	treeedit/node.cc	/^Bool Node::matches(Char *str, Index n, Index pos)$/;"	f	class:Node
matches_prototype	language/prototype.c	/^int matches_prototype(Type *typelist, Prototype *p, int nr)$/;"	f
max	documents/fileread.c	/^    int max;$/;"	m	struct:CSTRINGSTACK	file:
max	documents/fileread.c	/^    int max;$/;"	m	struct:READSTACK	file:
max	documents/fileread.c	/^    int max;$/;"	m	struct:STRINGSTACK	file:
max	include/flexarray.h	/^	 int max;$/;"	m	struct:__anon38
max	include/memman.h	/^  int max;     \/* maximal freelist size (free until MIN items remain) *\/$/;"	m	struct:__anon53
max	include/notatype.h	/^	  int max[MAXFORMAT];$/;"	m	struct:__anon46
max	include/prototype.h	/^    int max;$/;"	m	struct:__anon39
max	module/pvsparse.c	/^  int max;$/;"	m	struct:__anon33	file:
max	unicode/unifont.c	/^    int max;$/;"	m	struct:__anon97	file:
max	unicode/virtread.c	/^    int max;$/;"	m	struct:__anon92	file:
max	util/fstate.c	/^    int max;$/;"	m	struct:__anon61	file:
max	windows/default.c	/^    int min, max, helpnr;$/;"	m	struct:__anon76	file:
max	windows/fonts.c	/^    short fnr, lnr, fsnr, number, page[2], nrml, max;$/;"	m	struct:__anon70	file:
max	windows/notadef.c	/^         int selection, nr_items, def, x, max, helpnr;$/;"	m	struct:__anon88	file:
max_converter	unicode/uniconv.c	/^static int max_converter=0;$/;"	v	file:
max_curspix	windows/getstring.c	133;"	d	file:
max_preced	treeedit/node.cc	/^Index Node::max_preced()$/;"	f	class:Node
max_usable	windows/sources.c	/^static int max_usable = 0;$/;"	v	file:
maxaccentline	unicode/drawstring.c	/^static int maxaccentline=0;$/;"	v	file:
maxattrib	unicode/unifont.c	/^static int maxattrib=0;$/;"	v	file:
maxcolors	windows/sources.c	/^static int maxcolors=MAX_CELLS;$/;"	v	file:
maxfreelist	util/memman.c	/^static int maxfreelist=0;$/;"	v	file:
maximize_version	templates/notatype.c	/^VERSION *maximize_version(VERSION *list, int max)$/;"	f
maxitem	windows/output.c	/^static int maxitem;$/;"	v	file:
maxlen	windows/default.c	/^    unsigned int maxlen;$/;"	m	struct:__anon76	file:
maxlen	windows/getstring.c	/^           unsigned int maxlen;$/;"	m	struct:STRINGINFO	file:
maxlen	windows/output.c	/^static int maxlen;$/;"	v	file:
maxlist	windows/notation.c	/^    unsigned int listsize, maxlist, listpos;$/;"	m	struct:__anon74	file:
maxparse	templates/match.c	/^static int maxparse=1;$/;"	v	file:
maxpix	windows/getstring.c	/^           int maxpix, firstpix;$/;"	m	struct:STRINGINFO	file:
maxsize	tools/xpipein.c	/^int minsize=1,maxsize=0x7fffffff;$/;"	v
maxwidth	windows/output.c	/^          itemtot, lasc, ldesc, lright, maxwidth,$/;"	m	struct:BOX	file:
may_be_raised	treeedit/node.cc	/^Bool Node::may_be_raised()$/;"	f	class:Node
mcode	documents/fileread.c	/^static void mcode(unsigned long c)$/;"	f	file:
mcodebuf	documents/fileread.c	/^static char mcodebuf[9];$/;"	v	file:
mem	unicode/unistring.c	/^  void *mem;$/;"	m	struct:__anon98	file:
member	util/debug.c	/^static LISTELM *member(lfptr t, void* val)$/;"	f	file:
member	util/memman.c	/^static LISTELM *member(lfptr t, void* val)$/;"	f	file:
member_breanchnode	language/leaftree.c	/^static void *member_breanchnode(BreanchNode* t, void *val)$/;"	f	file:
member_breanchnode	util/leaftree.c	/^static void *member_breanchnode(BreanchNode* t, void *val)$/;"	f	file:
membwd	treeedit/node.cc	/^static void membwd(Char* d, Char* s, Char* e)$/;"	f	file:
membwd	util/flexarray.c	/^static void membwd(void *d, void *s, void *e)$/;"	f	file:
memfwd	treeedit/node.cc	/^static void memfwd(Char* d, Char* s, Char* e)$/;"	f	file:
memory	language/parse.c	/^    char *memory;  \/* the internal string *\/$/;"	m	struct:FILESTACK	file:
menu	include/popup.h	/^  PopupMenu *menu;$/;"	m	struct:MENU
menu	include/popupmenu.h	/^    PopupMenu *menu;$/;"	m	union:PopupLine::__anon55
menu	language/popupmenu.c	/^  PopupMenu *menu;$/;"	m	struct:PopupList	file:
menu	windows/notadef.c	/^         MENU *menu;$/;"	m	struct:__anon88	file:
menu_bad_end	windows/menu.c	/^void menu_bad_end(void *data __attribute__((unused)))$/;"	f
menu_close	windows/menu.c	/^void menu_close(void)$/;"	f
menu_deiconize	windows/menu.c	/^static void menu_deiconize(void *data __attribute__((unused)))$/;"	f	file:
menu_draw	windows/menu.c	/^static void menu_draw(void *data)$/;"	f	file:
menu_filter_string	windows/menu.c	/^static void menu_filter_string(Char *txt)$/;"	f	file:
menu_iconize	windows/menu.c	/^static void menu_iconize(void *data __attribute__((unused)))$/;"	f	file:
menu_iconized	documents/system.c	/^    menu_iconized = 0,$/;"	v
menu_init	windows/menu.c	/^void menu_init()$/;"	f
menu_insert_string	windows/menu.c	/^static void menu_insert_string(void)$/;"	f	file:
menu_is_open	documents/system.c	/^    menu_is_open = 0,$/;"	v
menu_keyboard	windows/menu.c	/^void menu_keyboard(void)$/;"	f
menu_keysymbol	windows/menu.c	/^static void menu_keysymbol(void)$/;"	f	file:
menu_last_pos	windows/menu.c	/^static int menu_last_pos(int *x, int *y, int *w, int *h)$/;"	f	file:
menu_layout_change	windows/menu.c	/^static void menu_layout_change(void *data __attribute__((unused)))$/;"	f	file:
menu_motion	windows/menu.c	/^static void menu_motion(void *data __attribute__((unused)), int x __attribute__((unused)), int y __attribute__((unused)))$/;"	f	file:
menu_notation	windows/menu.c	/^static void menu_notation(void)$/;"	f	file:
menu_notation_shortcut	windows/menu.c	/^static void menu_notation_shortcut(Char *name)$/;"	f	file:
menu_number_shortcut	windows/menu.c	/^static void menu_number_shortcut(int number)$/;"	f	file:
menu_number_shortcut_string	windows/menu.c	/^static void menu_number_shortcut_string(Char *number)$/;"	f	file:
menu_open	windows/menu.c	/^void menu_open(int x, int y, int w, int h, int icon, int s __attribute__((unused)), Char *str)$/;"	f
menu_permanent_message	windows/menu.c	/^static void menu_permanent_message(Char *txt)$/;"	f	file:
menu_press	windows/menu.c	/^static void menu_press(void *data __attribute__((unused)), XButtonEvent *event __attribute__((unused)))$/;"	f	file:
menu_quick_exit	windows/menu.c	/^static void menu_quick_exit(void)$/;"	f	file:
menu_release	windows/menu.c	/^static void menu_release(void *data __attribute__((unused)), XButtonEvent *event __attribute__((unused)))$/;"	f	file:
menu_resize	windows/menu.c	/^static void menu_resize(void *data, XConfigureEvent *event)$/;"	f	file:
menu_selected_notation	windows/menu.c	/^static void menu_selected_notation(void)$/;"	f	file:
menu_set_command	windows/menu.c	/^void menu_set_command(void)$/;"	f
menu_set_last_pos	windows/menu.c	/^static void menu_set_last_pos(int x, int y, int w, int h)$/;"	f	file:
menu_state	windows/menu.c	/^static void menu_state(void *data __attribute__((unused)), int *posx, int *posy, int *width,$/;"	f	file:
menubutton	windows/menu.c	/^char *menubutton[NR_BUTTON] =$/;"	v	file:
menudef	language/parse.y	/^menudef     :	MENU IDENTIFIER '{'$/;"	l
menufind	windows/find.c	/^static MENU menufind[NR_BUTTON] = {$/;"	v	file:
menufuncs	windows/menu.c	/^FUNCTIONS menufuncs = {$/;"	v
menuhelp	windows/menu.c	/^int menuhelp[NR_BUTTON] =$/;"	v	file:
menuline	language/parse.y	/^menuline    :	\/* empty *\/$/;"	l
menulines	language/parse.y	/^menulines   :	menuline$/;"	l
menuname	windows/find.c	/^static char *menuname[NR_BUTTON] = { "FindCommandMenu", "FindStackMenu" };$/;"	v	file:
menuname	windows/symbol.c	/^static char *menuname[NR_BUTTON] = { "PageMenu", "SymbolDoneMenu" };$/;"	v	file:
menus	module/SEJ.c	/^static char *menus[]= {$/;"	v	file:
menusymbol	windows/symbol.c	/^static MENU menusymbol[NR_BUTTON] = {$/;"	v	file:
menuwin	windows/menu.c	/^static Window menuwin, miniwin;$/;"	v	file:
message	templates/match.c	48;"	d	file:
message	templates/match.c	51;"	d	file:
message	templates/match.c	767;"	d	file:
message	templates/match.c	769;"	d	file:
message	templates/match.c	958;"	d	file:
message	templates/match.c	959;"	d	file:
message	windows/message.c	/^void message(int lvl, Char *text)$/;"	f
message2	templates/match.c	49;"	d	file:
message2	templates/match.c	52;"	d	file:
message2	templates/match.c	768;"	d	file:
message2	templates/match.c	770;"	d	file:
message2	templates/match.c	956;"	d	file:
message2	templates/match.c	957;"	d	file:
message2	windows/message.c	/^void message2(int lvl, Char *text1, Char *text2)$/;"	f
message_time	windows/sources.c	/^unsigned long message_time = 0, last_time = 0;$/;"	v
message_win	windows/output.c	/^static Window message_win = 0;$/;"	v	file:
message_window	windows/edit.c	/^static EDITINFO *message_window(Char *messagetitle)$/;"	f	file:
messcurs	windows/output.c	/^static Bool messcurs = MP_False;$/;"	v	file:
messlen	windows/output.c	/^static short messlen = 0;$/;"	v	file:
messtxt	windows/output.c	/^static Char messtxt[400];$/;"	v	file:
middlecursor	windows/scrollbar.c	63;"	d	file:
min	include/memman.h	/^  int min;     \/* minimal freelist size (used when list gets too long) *\/$/;"	m	struct:__anon53
min	module/pvsparse.c	/^  int min;$/;"	m	struct:__anon33	file:
min	util/debug.c	/^    void *min;$/;"	m	struct:ltnode	file:
min	util/memman.c	/^    void *min;$/;"	m	struct:ltnode	file:
min	windows/default.c	/^    int min, max, helpnr;$/;"	m	struct:__anon76	file:
min_curspix	windows/getstring.c	134;"	d	file:
min_preced	treeedit/node.cc	/^Index Node::min_preced()$/;"	f	class:Node
mini_info	windows/menu.c	/^static void *mini_info;$/;"	v	file:
minimize_version	templates/notatype.c	/^VERSION *minimize_version(VERSION *list, int max)$/;"	f
minimum_size	windows/scrollbar.c	48;"	d	file:
miniwin	windows/menu.c	/^static Window menuwin, miniwin;$/;"	v	file:
miniwin_height	windows/menu.c	/^static unsigned int miniwin_width, miniwin_height;$/;"	v	file:
miniwin_width	windows/menu.c	/^static unsigned int miniwin_width, miniwin_height;$/;"	v	file:
miniwindow	treeedit/editor.cc	/^EditWindow& miniwindow()$/;"	f
minsize	tools/xpipein.c	/^int minsize=1,maxsize=0x7fffffff;$/;"	v
mint	language/powfix.c	/^struct mint {$/;"	s	file:
missing_font	windows/fonts.c	/^int missing_font(FILE *f)$/;"	f
mm_calloc	util/memman.c	/^void *mm_calloc(size_t nr, size_t size)$/;"	f
mm_free	util/memman.c	/^void mm_free(void *p)$/;"	f
mm_malloc	util/memman.c	/^void *mm_malloc(size_t size)$/;"	f
mm_realloc	util/memman.c	/^void *mm_realloc(void *p, size_t size)$/;"	f
mnr	windows/notation.c	/^    int kind, anr, mnr, height;$/;"	m	struct:__anon73	file:
mode	include/keyboard.h	/^    KeyMode mode;    \/* mode for modifiers (alt|control|shift|meta|...) *\/$/;"	m	struct:__anon49
mode	keyboard/keys.c	/^    KeyMode mode;$/;"	m	struct:__anon59	file:
mode	language/parse.c	/^  KeyMode *mode;$/;"	m	struct:__anon13	file:
mode	language/parse.c	/^  KeyMode mode;$/;"	m	struct:__anon12	file:
mode	language/parse.c	/^static KeyMode mode[500];$/;"	v	file:
mode_t	module/pvsparse.c	/^typedef __mode_t mode_t;$/;"	t	file:
modifier	keyboard/keys.c	/^} modifier[] = {$/;"	v	typeref:struct:__anon59	file:
modmasklist	keyboard/X11syskeys.c	/^static const unsigned int modmasklist[] = {$/;"	v	file:
more_keys	windows/output.c	/^int more_keys(void)$/;"	f
motion	include/sources.h	/^    void (*motion)(void*,int,int);$/;"	m	struct:__anon41
motion_get_pos	windows/sources.c	/^Bool motion_get_pos(int *x, int *y)$/;"	f
motion_set	windows/sources.c	/^Bool   motion_set = MP_False, motion_wait = MP_False, is_click = MP_True;$/;"	v
motion_wait	windows/sources.c	/^Bool   motion_set = MP_False, motion_wait = MP_False, is_click = MP_True;$/;"	v
motion_window	windows/sources.c	/^Window motion_window = 0, when_motion_window=0;$/;"	v
mouse_button	windows/sources.c	/^unsigned int mouse_button = 0;$/;"	v
mouse_down	treeedit/editor.cc	/^void mouse_down(void* w, int xpos, int ypos, Index button)$/;"	f
mouse_move	treeedit/editor.cc	/^void mouse_move(int xpos, int ypos)$/;"	f
mouse_old_x	windows/events.c	/^static int mouse_old_x=0, mouse_old_y=0;$/;"	v	file:
mouse_old_y	windows/events.c	/^static int mouse_old_x=0, mouse_old_y=0;$/;"	v	file:
mouse_press	windows/sources.c	/^Bool mouse_press(unsigned int status, unsigned int bnr)$/;"	f
mouse_release	windows/sources.c	/^Bool mouse_release(unsigned int status, unsigned int bnr)$/;"	f
mouse_up	treeedit/editor.cc	/^void mouse_up(int, int)$/;"	f
move_content_down	windows/output.c	/^void move_content_down(int size, int height)$/;"	f
move_content_up	windows/output.c	/^void move_content_up(int size, int height)$/;"	f
move_cursor_to	windows/notadef.c	/^static void move_cursor_to(int nvers, int nformat, int npos)$/;"	f	file:
move_left	windows/getstring.c	/^static Bool move_left(Char *str, int pos, int delta)$/;"	f	file:
move_nota_left	templates/notatype.c	/^Bool move_nota_left(int fnr, int kind, int anr)$/;"	f
move_nota_right	templates/notatype.c	/^Bool move_nota_right(int fnr, int kind, int anr)$/;"	f
move_notation_begin	windows/notadef.c	/^static void move_notation_begin(void)$/;"	f	file:
move_notation_end	windows/notadef.c	/^static void move_notation_end(void)$/;"	f	file:
move_notation_left	windows/notadef.c	/^static void move_notation_left(void)$/;"	f	file:
move_notation_right	windows/notadef.c	/^static void move_notation_right(void)$/;"	f	file:
move_right	windows/getstring.c	/^static Bool move_right(Char *str, int pos, int delta, unsigned int max)$/;"	f	file:
move_selection	treeedit/editwindow.cc	/^int move_selection=MP_False;$/;"	v
move_to_center	treeedit/editor.cc	/^void move_to_center(void)$/;"	f
move_to_center	treeedit/select.cc	/^void Select::move_to_center()$/;"	f	class:Select
move_version	windows/notadef.c	/^static void move_version(int i, int y)$/;"	f	file:
move_version_down	windows/notadef.c	/^static void move_version_down(Index arg)$/;"	f	file:
move_version_first	windows/notadef.c	/^static void move_version_first(void)$/;"	f	file:
move_version_last	windows/notadef.c	/^static void move_version_last(void)$/;"	f	file:
move_version_up	windows/notadef.c	/^static void move_version_up(Index arg)$/;"	f	file:
move_word	treeedit/select.cc	/^static Bool move_word(Mark &p, Offset dir)$/;"	f	file:
move_x	windows/output.c	/^static int move_x;$/;"	v	file:
move_y	windows/output.c	139;"	d	file:
mpkpath	language/parse.c	/^static PathInfo mpkpath = 0;$/;"	v	file:
mtext	templates/match.c	/^static unsigned char *mtext=NULL;$/;"	v	file:
multby	unicode/unifont.c	/^    int multby;$/;"	m	struct:__anon97	file:
multby	unicode/virtread.c	/^    int multby;$/;"	m	struct:__anon92	file:
multi_detect_attributes	unicode/unifontX11.c	/^static FONTREC *multi_detect_attributes(FONTREC *frec)$/;"	f	file:
multi_detect_attributes	unicode/unifontsys.c	/^static FONTREC *multi_detect_attributes(FONTREC *frec)$/;"	f	file:
multi_drag	keyboard/keyboard.c	/^int multi_drag(unsigned long t)$/;"	f
multi_press	keyboard/keyboard.c	/^int multi_press(unsigned long t, int button)$/;"	f
multi_release	keyboard/keyboard.c	/^int multi_release(unsigned long t)$/;"	f
must_underline	windows/sources.c	/^int must_underline(int colortype)$/;"	f
mycalloc	util/debug.c	/^void *mycalloc(size_t nr, size_t size)$/;"	f
myfree	util/debug.c	/^void myfree(void *p)$/;"	f
mymalloc	util/debug.c	/^void *mymalloc(size_t size)$/;"	f
myrealloc	util/debug.c	/^void *myrealloc(void *p, size_t size)$/;"	f
mystrtoi	util/funcs.c	/^int mystrtoi(char *s, char **endp, int base)$/;"	f
n	include/prototype.h	/^    int n;$/;"	m	struct:__anon39
n_cursors	windows/scrollbar.c	/^int n_cursors = 6;$/;"	v
name	include/keyboard.h	/^    Uchar *name;        \/* the name of the map (if supplied) *\/$/;"	m	struct:keymap
name	include/notatype.h	/^	  Char *name;$/;"	m	struct:__anon47
name	include/notatype.h	/^struct  { Char *name;$/;"	m	struct:__anon48
name	include/popupmenu.h	/^  Uchar *name;$/;"	m	struct:PopupMenu
name	include/types.h	/^    char *name;$/;"	m	struct:__anon58
name	include/uniconv.h	/^    Uchar *name;                               \/* name of encoding *\/$/;"	m	struct:__anon42
name	language/function.c	/^    char *name;        \/* UTF8 (easier to write in source files) *\/$/;"	m	struct:__anon1	file:
name	language/loadlib.c	/^    char *name;$/;"	m	struct:Library	file:
name	language/parse.c	/^    char *name;    \/* the name of the file (or a pointer in memory) *\/$/;"	m	struct:FILESTACK	file:
name	language/types.c	/^    char *name;$/;"	m	struct:__anon2	file:
name	language/userdef.c	/^    char *name;          \/* UTF string *\/$/;"	m	struct:__anon5	file:
name	language/variable.c	/^    char *name;     \/* UTF *\/$/;"	m	struct:__anon4	file:
name	unicode/unifont.c	/^    char *name;   \/* name, shared with alias list *\/$/;"	m	struct:RANGEREC	file:
name	unicode/unifont.c	/^    char *name; \/* attribute name, shared with alias list *\/$/;"	m	struct:ATTRIBREC	file:
name	unicode/unifont.c	/^    char *name;$/;"	m	struct:ALIASREC	file:
name	unicode/virtread.c	/^    char *name;   \/* name, shared with alias list *\/$/;"	m	struct:RANGEREC	file:
name	unicode/virtread.c	/^    char *name; \/* attribute name, shared with alias list *\/$/;"	m	struct:ATTRIBREC	file:
name	unicode/virtread.c	/^    char *name;$/;"	m	struct:ALIASREC	file:
name	windows/default.c	/^static Char *name, *iconname;$/;"	v	file:
name	windows/fonts.c	/^    char *name;$/;"	m	struct:__anon70	file:
name	windows/getstring.c	/^  char *name;$/;"	m	struct:__anon78	file:
name	windows/notadef.c	/^  char *name;$/;"	m	struct:__anon90	file:
name	windows/notation.c	/^    Char *name,*subname;$/;"	m	struct:__anon74	file:
name	windows/sources.c	/^  Char name[40];$/;"	m	struct:__anon81	file:
name	windows/symbol.c	/^                char *name;$/;"	m	struct:__anon84	file:
name	windows/symbol.c	/^  Char *name;     \/* name of the page, e.g. Arrows *\/$/;"	m	struct:SYMBOLPAGE	file:
name	windows/symbol.c	/^static char *name = SYMBOLNAME, *iname = ICONNAME;$/;"	v	file:
name_file	util/filefind.c	/^char *name_file(FILE *file)$/;"	f
namefunc	windows/editlib.c	/^  char *namefunc;$/;"	m	struct:__anon87	file:
namelist	unicode/brows.c	/^static unsigned char *namelist[] = { asciiname,0};$/;"	v	file:
nameset	output/latexout.c	/^static int nameset=0;$/;"	v	file:
nameset	windows/output.c	/^static int nameset=0;$/;"	v	file:
nbox	windows/output.c	/^    BOX *fbox, *lbox, *nbox;$/;"	m	struct:BOX	file:
nchars	unicode/drawstring.c	/^    int nchars;$/;"	m	struct:__anon95	file:
needdelen	include/uniconv.h	/^    int (*needdelen)(Uchar *, void *);         \/* decoding result length *\/$/;"	m	struct:__anon42
needed_dir	windows/sources.c	/^static Char **needed_dir[3] = { &userdir, &notationdir, &latexdir }; $/;"	v	file:
needenlen	include/uniconv.h	/^    int (*needenlen)(unsigned char *, void *); \/* encoding result length *\/$/;"	m	struct:__anon42
negative_yn	windows/menu.c	/^static void negative_yn(void)$/;"	f	file:
new_box	windows/output.c	/^static BOX *new_box(void)$/;"	f	file:
new_converter	unicode/uniconv.c	/^static UConverter *new_converter(void)$/;"	f	file:
new_cursor_pos	windows/notadef.c	/^static void new_cursor_pos(int nvers, int nformat, int npos)$/;"	f	file:
new_editnotation	windows/notadef.c	/^static void new_editnotation(void)$/;"	f	file:
new_fontfile	windows/fonts.c	/^Bool new_fontfile(int nr, Char *newname)$/;"	f
new_id_font	treeedit/editor.cc	/^void new_id_font(Offset nfnr)$/;"	f
new_id_font	treeedit/node.cc	/^void Node::new_id_font(Offset nfnr)$/;"	f	class:Node
new_id_font	treeedit/select.cc	/^void Select::new_id_font(Index nfnr)$/;"	f	class:Select
new_keymap	keyboard/keyboard.c	/^static KeyMap *new_keymap(void)$/;"	f	file:
new_language	util/translate.c	/^static TransLang *new_language(void)$/;"	f	file:
new_local_variables	language/variable.c	/^void new_local_variables(void)$/;"	f
new_notation_window	templates/notatype.c	/^int new_notation_window(void)$/;"	f
new_number	templates/notatype.c	/^unsigned long new_number(void)$/;"	f
new_ph	windows/notadef.c	/^static Char new_ph(Char *str, Char kind)$/;"	f	file:
new_version	treeedit/editor.cc	/^void new_version(Offset nnnr)$/;"	f
new_version	treeedit/node.cc	/^void Node::new_version(Offset nnr)$/;"	f	class:Node
new_version	treeedit/select.cc	/^void Select::new_version(Index nnnr)$/;"	f	class:Select
newbalright	language/leaftree.c	/^static int newbalright[15] = {-1,-1,-1,-2,-3,0,0,0,-1,-2,1,1,1,0,-1};$/;"	v	file:
newbalright	util/leaftree.c	/^static int newbalright[15] = {-1,-1,-1,-2,-3,0,0,0,-1,-2,1,1,1,0,-1};$/;"	v	file:
newbaltop	language/leaftree.c	/^static int newbaltop[15] = {-4,-3,-2,-2,-2,-3,-2,-1,-1,-1,-3,-2,-1,0,0};$/;"	v	file:
newbaltop	util/leaftree.c	/^static int newbaltop[15] = {-4,-3,-2,-2,-2,-3,-2,-1,-1,-1,-3,-2,-1,0,0};$/;"	v	file:
newname	windows/edit.c	/^static Char *newname = NULL;$/;"	v	file:
newval	unicode/unifont.c	/^  short newval;$/;"	m	struct:REMAPREC	file:
next	documents/fileread.c	/^    CSTRINGSTACK *next;$/;"	m	struct:CSTRINGSTACK	file:
next	documents/fileread.c	/^    READSTACK *next;$/;"	m	struct:READSTACK	file:
next	documents/fileread.c	/^    STRINGSTACK *next;$/;"	m	struct:STRINGSTACK	file:
next	include/expression.h	/^    Expression *next;$/;"	m	struct:Expression
next	include/intstack.h	/^    INTSTACK *next;$/;"	m	struct:INTSTACK
next	include/popupmenu.h	/^  PopupLine *next, *prev;$/;"	m	struct:PopupLine
next	include/sequence.h	/^    Sequence *next;        \/* true case *\/$/;"	m	struct:FuncSequence
next	keyboard/keyboard.c	/^    KeyList *next;$/;"	m	struct:KeyList	file:
next	keyboard/keyboard.c	/^    KeyMapList *next;$/;"	m	struct:KeyMapList	file:
next	keyboard/keyboard.c	/^    KeyStack *next;$/;"	m	struct:KeyStack	file:
next	language/expression.c	/^  OpStruct *next;$/;"	m	struct:OpStruct	file:
next	language/loadlib.c	/^    Library *next;$/;"	m	struct:Library	file:
next	language/parse.c	/^    FILESTACK *next; \/* next file *\/$/;"	m	struct:FILESTACK	file:
next	language/popupmenu.c	/^  PopupList *next;$/;"	m	struct:PopupList	file:
next	markup/markup.c	/^    SurroHandler *next;$/;"	m	struct:SurroHandler	file:
next	module/pvs.c	/^  KeywordItem *next;$/;"	m	struct:KeywordItem	file:
next	module/pvs.c	/^  PVSProof *next;$/;"	m	struct:PVSProof	file:
next	module/pvs.c	/^  ProofStep *next;       \/* the next step in the proof *\/$/;"	m	struct:ProofStep	file:
next	templates/match.c	/^    RULE *next;$/;"	m	struct:RULE	file:
next	templates/notatype.c	/^    VERSIONLIST *next;$/;"	m	struct:VERSIONLIST	file:
next	tools/xpipein.c	/^    STRSTACK *next;$/;"	m	struct:STRSTACK	file:
next	tools/xpipeout.c	/^    STRSTACK *next;$/;"	m	struct:STRSTACK	file:
next	treeedit/editwindow.hh	/^    EditWindow* next;$/;"	m	class:EditWindow
next	treeedit/node.cc	/^Node* Node::next()$/;"	f	class:Node
next	unicode/unifont.c	/^    ALIASREC *next;$/;"	m	struct:ALIASREC	file:
next	unicode/unifont.c	/^    ATTRIBREC *next;  \/* next attrib definition *\/$/;"	m	struct:ATTRIBREC	file:
next	unicode/unifont.c	/^    ENCODINGREC *next;$/;"	m	struct:ENCODINGREC	file:
next	unicode/unifont.c	/^    FONTREC *next;$/;"	m	struct:FONTREC	file:
next	unicode/unifont.c	/^    RANGEREC *next;$/;"	m	struct:RANGEREC	file:
next	unicode/unifont.c	/^  REMAPREC *next;$/;"	m	struct:REMAPREC	file:
next	unicode/virtread.c	/^    ALIASREC *next;$/;"	m	struct:ALIASREC	file:
next	unicode/virtread.c	/^    ATTRIBREC *next;  \/* next attrib definition *\/$/;"	m	struct:ATTRIBREC	file:
next	unicode/virtread.c	/^    ENCODINGREC *next;$/;"	m	struct:ENCODINGREC	file:
next	unicode/virtread.c	/^    FONTREC *next;$/;"	m	struct:FONTREC	file:
next	unicode/virtread.c	/^    RANGEREC *next;$/;"	m	struct:RANGEREC	file:
next	util/fifolist.c	/^  ObjectList *next;$/;"	m	struct:_ObjectList	file:
next	util/filefind.c	/^  CacheInfo *next;$/;"	m	struct:CacheInfo	file:
next	util/filefind.c	/^  DirInfo *next;$/;"	m	struct:DirInfo	file:
next	util/filefind.c	/^  ExtFileInfo *next;$/;"	m	struct:ExtFileInfo	file:
next	util/filefind.c	/^  ExtenInfo *next;$/;"	m	struct:ExtenInfo	file:
next	util/memman.c	/^  PaybackFunc *next;$/;"	m	struct:_PaybackFunc	file:
next	util/memman.c	/^struct _FLItem { FLItem *next; };$/;"	m	struct:_FLItem	file:
next	util/refcounting.c	/^  RefElem *next;     \/* linked list *\/$/;"	m	struct:RefElem	file:
next	util/translate.c	/^  Translation *next; \/* Next translation in the list *\/$/;"	m	struct:Translation	file:
next	windows/checkbox.c	/^    CHECKBOXINFO *next,*prev;$/;"	m	struct:CHECKBOXINFO	file:
next	windows/getstring.c	/^           STRINGINFO *prev, *next;$/;"	m	struct:STRINGINFO	file:
next	windows/sources.c	/^  FileList *next;$/;"	m	struct:FileList	file:
next	windows/symbol.c	/^  SYMBOLPAGE *next; \/* next page *\/$/;"	m	struct:SYMBOLPAGE	file:
next_data_with_type	windows/sources.c	/^void *next_data_with_type(WINDOWTYPE wt, int *i)$/;"	f
next_id_font	windows/output.c	/^int next_id_font(int n)$/;"	f
next_listelm	windows/notation.c	269;"	d	file:
next_node	treeedit/node.cc	/^Mark Node::next_node()$/;"	f	class:Node
next_node_insert	treeedit/editor.cc	/^void next_node_insert(int c, Index count)$/;"	f
next_node_insert	treeedit/select.cc	/^Bool Select::next_node_insert(Char c, Index count)$/;"	f	class:Select
next_node_or_insert	treeedit/editor.cc	/^void next_node_or_insert(int c, Index count)$/;"	f
next_node_or_insert	treeedit/select.cc	/^Bool Select::next_node_or_insert(Char c, Index count)$/;"	f	class:Select
next_node_or_text	treeedit/editor.cc	/^void next_node_or_text(Index count)$/;"	f
next_node_or_text	treeedit/select.cc	/^Bool Select::next_node_or_text()$/;"	f	class:Select
next_node_selection	treeedit/editor.cc	/^void next_node_selection(void *selection)$/;"	f
next_place_holder	templates/match.c	/^static Char next_place_holder(Char n)$/;"	f	file:
next_template_version	windows/menu.c	/^static void next_template_version(void)$/;"	f	file:
next_text	treeedit/node.cc	/^Mark Node::next_text()$/;"	f	class:Node
nextfield	windows/default.c	131;"	d	file:
nextline	treeedit/mark.cc	/^void Mark::nextline()$/;"	f	class:Mark
nextretval	include/match.h	/^    int nextretval;$/;"	m	struct:ParseRules
nextsym	templates/match.c	/^static Char nextsym=0;$/;"	v	file:
nf_add	templates/notatype.c	70;"	d	file:
nf_clear	templates/notatype.c	73;"	d	file:
nf_cmp	templates/notatype.c	/^static int nf_cmp(const void* a __attribute__((unused)), const void* b __attribute__((unused))) { return 1; }$/;"	f	file:
nf_contains	templates/notatype.c	68;"	d	file:
nf_init	templates/notatype.c	72;"	d	file:
nf_item	templates/notatype.c	75;"	d	file:
nf_max	templates/notatype.c	76;"	d	file:
nf_remove	templates/notatype.c	69;"	d	file:
nf_set	templates/notatype.c	74;"	d	file:
nf_switch	templates/notatype.c	71;"	d	file:
nisel	windows/notation.c	/^static NOTATIONINFO *nisel=NULL;$/;"	v	file:
nkind	include/notatype.h	/^          FlexArray nkind[MAX_KIND];$/;"	m	struct:__anon48
nlink_t	module/pvsparse.c	/^typedef __nlink_t nlink_t;$/;"	t	file:
nnr	include/notatype.h	/^	  unsigned long nnr;$/;"	m	struct:__anon47
nnr	templates/notatype.c	/^    int nnr;$/;"	m	struct:__anon36	file:
nnr_last	windows/notation.c	/^static int nnr_last = -1, vnr_last = 0;$/;"	v	file:
nnr_vnr2innr	templates/notatype.c	/^int nnr_vnr2innr(int nnr, int vnr)$/;"	f
no_dbl_click	treeedit/select.cc	/^void Select::no_dbl_click()$/;"	f	class:Select
no_return_copy	windows/sources.c	/^static Char *no_return_copy(char *str)$/;"	f	file:
node	treeedit/mark.hh	/^    Node* node;$/;"	m	class:Mark
node_notation	treeedit/editor.cc	/^int  node_notation(void *node, int *vnr)$/;"	f
node_size	treeedit/select.hh	/^    Index node_size() { return begin->size(); }$/;"	f	class:Select
nomem	templates/notatype.c	/^static Bool nomem;$/;"	v	file:
non_zero_on_stack	language/expression.c	/^int non_zero_on_stack(void)$/;"	f
nonblock_write	tools/xpipeout.c	/^static void nonblock_write(char *c, int b)$/;"	f	file:
normal_filesize	util/filefind.c	/^static int normal_filesize(char *name)$/;"	f	file:
normal_identifier	treeedit/node.cc	/^Bool Node::normal_identifier() const$/;"	f	class:Node
normalcursor	windows/scrollbar.c	61;"	d	file:
notadef_attr	windows/notadef.c	/^static XSetWindowAttributes notadef_attr;$/;"	v	file:
notadef_bad_end	windows/notadef.c	/^static void notadef_bad_end(void *data __attribute__((unused)))$/;"	f	file:
notadef_close	windows/notadef.c	/^void notadef_close(void)$/;"	f
notadef_deiconize	windows/notadef.c	/^static void notadef_deiconize(void *data __attribute__((unused)))$/;"	f	file:
notadef_draw	windows/notadef.c	/^static void notadef_draw(void *data __attribute__((unused)))$/;"	f	file:
notadef_handle_button	windows/notadef.c	/^static void notadef_handle_button(void *data __attribute__((unused)), int b_num)$/;"	f	file:
notadef_iconize	windows/notadef.c	/^static void notadef_iconize(void *data __attribute__((unused)))$/;"	f	file:
notadef_iconized	documents/system.c	/^    notadef_iconized = 0,$/;"	v
notadef_init	windows/notadef.c	/^void notadef_init(void)$/;"	f
notadef_insert_markup	windows/notadef.c	/^static void notadef_insert_markup(Char *pre, Char *post)$/;"	f	file:
notadef_insert_string	windows/notadef.c	/^static void notadef_insert_string(void)$/;"	f	file:
notadef_is_open	documents/system.c	/^    notadef_is_open = 0,$/;"	v
notadef_keyboard	windows/notadef.c	/^void notadef_keyboard(void)$/;"	f
notadef_keysymbol	windows/notadef.c	/^static void notadef_keysymbol(void)$/;"	f	file:
notadef_last_pos	windows/notadef.c	/^static int notadef_last_pos(int *x, int *y, int *w, int *h)$/;"	f	file:
notadef_layout_change	windows/notadef.c	/^static void notadef_layout_change(void *data __attribute__((unused)))$/;"	f	file:
notadef_mask	windows/notadef.c	/^static unsigned long notadef_mask;$/;"	v	file:
notadef_motion	windows/notadef.c	/^static void notadef_motion(void *data __attribute__((unused)), int x, int y)$/;"	f	file:
notadef_name	windows/notadef.c	/^static Char *notadef_name;$/;"	v	file:
notadef_notation	windows/notadef.c	/^static void notadef_notation(void)$/;"	f	file:
notadef_notation_short	windows/notadef.c	/^static void notadef_notation_short(Char *name)$/;"	f	file:
notadef_open	windows/notadef.c	/^void notadef_open(void)$/;"	f
notadef_press	windows/notadef.c	/^static void notadef_press(void *data __attribute__((unused)), XButtonEvent *event)$/;"	f	file:
notadef_raise	windows/notadef.c	/^void notadef_raise(void)$/;"	f
notadef_release	windows/notadef.c	/^static void notadef_release(void *data __attribute__((unused)), XButtonEvent *event __attribute__((unused)))$/;"	f	file:
notadef_rename	windows/notadef.c	/^void notadef_rename(void)$/;"	f
notadef_resize	windows/notadef.c	/^static void notadef_resize(void *data __attribute__((unused)), XConfigureEvent *event)$/;"	f	file:
notadef_scrollto	windows/notadef.c	/^static void notadef_scrollto(void *data __attribute__((unused)), int kind __attribute__((unused)))$/;"	f	file:
notadef_selected_notation	windows/notadef.c	/^static void notadef_selected_notation(void)$/;"	f	file:
notadef_set_last_pos	windows/notadef.c	/^static void notadef_set_last_pos(int x, int y, int w, int h)$/;"	f	file:
notadef_symbol_short	windows/notadef.c	/^static void notadef_symbol_short(Index arg)$/;"	f	file:
notadefbutton	windows/notadef.c	/^char *notadefbutton[NR_BUTTON] = { "New", "Update", "Remove",$/;"	v	file:
notadeffuncs	windows/notadef.c	/^FUNCTIONS notadeffuncs = {$/;"	v
notadefname	windows/notadef.c	/^static XTextProperty notadefname, iconname;$/;"	v	file:
notadefwin	windows/notadef.c	/^static Window notadefwin;$/;"	v	file:
notadrawwin	windows/notation.c	/^    Window notawin, notadrawwin;$/;"	m	struct:__anon74	file:
notahelp	windows/notadef.c	/^int notahelp[NR_BUTTON] =$/;"	v	file:
notahelp	windows/notation.c	/^int notahelp[NR_BUTTON] = $/;"	v	file:
notaname	windows/notation.c	/^static XTextProperty notaname, iconname;$/;"	v	file:
notation	treeedit/node.cc	/^Node* Node::notation(Index nnr)$/;"	f	class:Node
notation_attr	windows/notation.c	/^static XSetWindowAttributes notation_attr;$/;"	v	file:
notation_auto_save	windows/notation.c	/^static void notation_auto_save(void *data, int dump)$/;"	f	file:
notation_bad_end	windows/notation.c	/^static void notation_bad_end(void *data)$/;"	f	file:
notation_changed	windows/notation.c	/^static void notation_changed(void)$/;"	f	file:
notation_confirm_backup	windows/notation.c	/^void notation_confirm_backup(int i)$/;"	f
notation_deiconize	windows/notation.c	/^static void notation_deiconize(void *data)$/;"	f	file:
notation_draw	windows/notation.c	/^static void notation_draw(void *data)$/;"	f	file:
notation_file_use_state	windows/notation.c	/^static void notation_file_use_state($/;"	f	file:
notation_filename	windows/notation.c	/^static char *notation_filename = NULL;$/;"	v	file:
notation_handle_button	windows/notation.c	/^static void notation_handle_button(void *data, int b_num)$/;"	f	file:
notation_handle_popup	windows/notation.c	/^static void notation_handle_popup(void* data __attribute__((unused)), int inr)$/;"	f	file:
notation_iconize	windows/notation.c	/^static void notation_iconize(void *data)$/;"	f	file:
notation_iconized	documents/system.c	/^    notation_iconized = 0,$/;"	v
notation_init	windows/notation.c	/^void notation_init(void)$/;"	f
notation_is_open	documents/system.c	/^    notation_is_open = 0,$/;"	v
notation_last	windows/notation.c	/^int notation_last(void)$/;"	f
notation_last_pos	windows/notation.c	/^static int notation_last_pos(int *x, int *y, int *w, int *h)$/;"	f	file:
notation_layout_change	windows/notation.c	/^static void notation_layout_change(void *data)$/;"	f	file:
notation_make_backups	windows/menu.c	/^static void notation_make_backups(void *data __attribute__((unused)), int dumps)$/;"	f	file:
notation_mask	windows/notation.c	/^static unsigned long notation_mask;$/;"	v	file:
notation_motion	windows/notation.c	/^static void notation_motion(void *data, int x, int y)$/;"	f	file:
notation_move_begin	windows/notation.c	/^void notation_move_begin(void)$/;"	f
notation_move_end	windows/notation.c	/^void notation_move_end(void)$/;"	f
notation_move_left	windows/notation.c	/^void notation_move_left(void)$/;"	f
notation_move_right	windows/notation.c	/^void notation_move_right(void)$/;"	f
notation_name	windows/notation.c	/^static char *notation_name = NOTATIONNAME, *icon_name = ICONNAME;$/;"	v	file:
notation_not_saved	templates/notatype.c	/^int notation_not_saved(int fnr)$/;"	f
notation_nr	treeedit/node.cc	/^Offset  Node::notation_nr(Offset *vnr)$/;"	f	class:Node
notation_nr	treeedit/select.cc	/^int  Select::notation_nr(Offset *vnr)$/;"	f	class:Select
notation_nr	windows/notation.c	/^static int notation_nr = 0;$/;"	v	file:
notation_open	windows/notation.c	/^void notation_open(void)$/;"	f
notation_precedence	documents/system.c	/^    notation_precedence = 0,$/;"	v
notation_press	windows/notation.c	/^static void notation_press(void *data, XButtonEvent *event)$/;"	f	file:
notation_release	windows/notation.c	/^static void notation_release(void *data, XButtonEvent *event)$/;"	f	file:
notation_resize	windows/notation.c	/^static void notation_resize(void *data, XConfigureEvent *event)$/;"	f	file:
notation_scrollto	windows/notation.c	/^static void notation_scrollto(void *data, int kind __attribute__((unused)))$/;"	f	file:
notation_set_last_pos	windows/notation.c	/^static void notation_set_last_pos(int x, int y, int w, int h)$/;"	f	file:
notation_state	windows/notation.c	/^static void notation_state(void *data, int *x, int*y, int *w, int *h,$/;"	f	file:
notation_use_state	windows/notation.c	/^static void notation_use_state(int x, int y, int w, int h,$/;"	f	file:
notation_version	windows/notation.c	/^int notation_version(void)$/;"	f
notation_with_name	templates/notatype.c	/^int notation_with_name(Char *name)$/;"	f
notation_with_number	templates/notatype.c	/^int notation_with_number(unsigned long number)$/;"	f
notationbutton	windows/notation.c	/^char *notationbutton[NR_BUTTON] = {"Load",  "Save",   "Rename",$/;"	v	file:
notationdir	documents/system.c	/^     *notationdir = NULL,$/;"	v
notationfile	templates/notatype.c	/^static FlexArray notationfile;$/;"	v	file:
notationfuncs	windows/notation.c	/^FUNCTIONS notationfuncs = {$/;"	v
notatype_init	templates/notatype.c	/^void notatype_init(void)$/;"	f
notawin	windows/notation.c	/^    Window notawin, notadrawwin;$/;"	m	struct:__anon74	file:
nothelpname	windows/notadef.c	/^static Char notname[NAME_SIZE], nothelpname[NAME_SIZE];$/;"	v	file:
notname	windows/notadef.c	/^static Char notname[NAME_SIZE], nothelpname[NAME_SIZE];$/;"	v	file:
nowindowfunc	windows/sources.c	/^FUNCTIONS nowindowfunc = { NULL } ;$/;"	v
noxor_sel	treeedit/select.cc	/^void Select::noxor_sel(void)$/;"	f	class:Select
nr	include/flexarray.h	/^	 int nr;$/;"	m	struct:__anon38
nr	include/intstack.h	/^    int nr;$/;"	m	struct:INTSTACK
nr	language/parse.c	/^    int nr;$/;"	m	struct:__anon10	file:
nr	language/parse.c	/^    int nr;$/;"	m	struct:__anon8	file:
nr	templates/match.c	/^    int nr;$/;"	m	struct:ParseLeaf	file:
nr	windows/menu.c	/^    int nr;$/;"	m	struct:ITEMDESC	file:
nr	windows/symbol.c	/^static struct { int nr;$/;"	m	struct:__anon84	file:
nr_args	include/types.h	/^    char nr_args;    \/* number of arguments *\/$/;"	m	struct:__anon58
nr_args	language/function.c	/^    char nr_args;$/;"	m	struct:__anon1	file:
nr_args	language/userdef.c	/^    char nr_args;        \/* number of arguments (<16) *\/$/;"	m	struct:__anon5	file:
nr_changed	templates/notatype.c	/^static int nr_changed=0;$/;"	v	file:
nr_comments	tools/pktobdf.c	/^integer nr_comments=0;$/;"	v
nr_help_dirs	documents/system.c	/^int nr_help_dirs = 0;$/;"	v
nr_iconized	windows/symbol.c	/^static int nr_iconized=0;$/;"	v	file:
nr_items	windows/notadef.c	/^         int selection, nr_items, def, x, max, helpnr;$/;"	m	struct:__anon88	file:
nr_lines	windows/notadef.c	/^static int nr_lines[MAX_VERSION][MAXFORMAT];$/;"	v	file:
nr_lines	windows/remark.c	/^static int nr_lines = 0;$/;"	v	file:
nr_lines	windows/scrollbar.c	/^           int startpix, sizepix, sb_size, nr_lines,$/;"	m	struct:__anon91	file:
nr_local	language/userdef.c	/^    char nr_local;       \/* number of local variables + arguments *\/$/;"	m	struct:__anon5	file:
nr_opened	windows/symbol.c	/^static int nr_opened=0;$/;"	v	file:
nr_plhd	include/notatype.h	/^	  int nr_plhd;$/;"	m	struct:__anon46
nr_visible	templates/notatype.c	/^int nr_visible(int fnr)$/;"	f
nr_visible	windows/remark.c	/^static int draw_pos = 0, nr_visible = 0;$/;"	v	file:
nr_windows	include/notatype.h	/^	  int nr_windows;$/;"	m	struct:__anon48
nra	util/fstate.c	/^    int nra;$/;"	m	struct:__anon60	file:
nrdisp	output/latexout.c	/^static int nrdisp = 0;$/;"	v	file:
nrio	include/system.h	92;"	d
nrml	windows/fonts.c	/^    short fnr, lnr, fsnr, number, page[2], nrml, max;$/;"	m	struct:__anon70	file:
nrnt	include/notatype.h	/^	  int nrnt;$/;"	m	struct:__anon48
nrpref	output/latexout.c	/^static int nrpref = 0;$/;"	v	file:
nt_add	templates/notatype.c	85;"	d	file:
nt_clear	templates/notatype.c	88;"	d	file:
nt_cmp	templates/notatype.c	/^static int nt_cmp(const void* a __attribute__((unused)), const void* b __attribute__((unused))) { return 1; }$/;"	f	file:
nt_contains	templates/notatype.c	83;"	d	file:
nt_init	templates/notatype.c	87;"	d	file:
nt_item	templates/notatype.c	90;"	d	file:
nt_lu_hi	templates/notatype.c	205;"	d	file:
nt_lu_hi_vers	templates/notatype.c	206;"	d	file:
nt_max	templates/notatype.c	91;"	d	file:
nt_remove	templates/notatype.c	84;"	d	file:
nt_set	templates/notatype.c	89;"	d	file:
nt_switch	templates/notatype.c	86;"	d	file:
ntnlfunc	windows/notadef.c	/^static void (*ntnlfunc[MAXFORMAT])(Char) =$/;"	v	file:
num	unicode/unifont.c	/^    short num;  \/* attribute group *\/$/;"	m	struct:ATTRIBREC	file:
num	unicode/virtread.c	/^    char num;  \/* attribute group *\/$/;"	m	struct:ATTRIBREC	file:
number	windows/button.c	/^	    int number;$/;"	m	struct:__anon75	file:
number	windows/fonts.c	/^    short fnr, lnr, fsnr, number, page[2], nrml, max;$/;"	m	struct:__anon70	file:
number_empty	treeedit/node.cc	/^Index Node::number_empty()$/;"	f	class:Node
number_icon	windows/edit.c	/^static int number_icon=0;$/;"	v	file:
number_icon	windows/notation.c	/^static int number_icon = 0;$/;"	v	file:
number_of_arguments	documents/system.c	/^int  number_of_arguments;$/;"	v
number_of_lines	treeedit/editor.cc	/^int number_of_lines(void* w)$/;"	f
number_of_windows	windows/sources.c	/^static int number_of_windows = 0;$/;"	v	file:
number_open	windows/edit.c	/^static int number_open=0;$/;"	v	file:
number_open	windows/notation.c	/^static int number_open = 0;$/;"	v	file:
numberfromstack	windows/menu.c	685;"	d	file:
numdef	include/keyboard.h	/^    int numdef;         \/* home many keys are defined *\/$/;"	m	struct:keymap
numtaken	windows/sources.c	/^static int numtaken=1;$/;"	v	file:
nwlnfunc	windows/notadef.c	/^static void (*nwlnfunc[MAXFORMAT])(Char) =$/;"	v	file:
object	include/markup.h	/^    void *object; \/* object which caused it *\/$/;"	m	struct:_attribs
object	util/fifolist.c	/^  void *object;$/;"	m	struct:_ObjectList	file:
off_t	module/pvsparse.c	/^typedef __off_t off_t;$/;"	t	file:
offset_x	windows/symbol.c	/^static int offset_x, offset_y, selx, sely;$/;"	v	file:
offset_y	windows/symbol.c	/^static int offset_x, offset_y, selx, sely;$/;"	v	file:
old_cursor_kind	windows/output.c	/^static int old_cursor_kind;$/;"	v	file:
old_cursor_points	windows/output.c	/^static XPoint old_cursor_points[MAX_SIGN_SIZE];$/;"	v	file:
old_get_char	templates/notatype.c	/^static Bool old_get_char(Char *c, FILE *f)$/;"	f	file:
old_get_notation	templates/notatype.c	/^static Bool old_get_notation(NOTATION *nota, FILE *f)$/;"	f	file:
old_get_version	templates/notatype.c	/^static Bool old_get_version(VERSION *vers, FILE *f)$/;"	f	file:
old_include	treeedit/editwindow.cc	/^void EditWindow::old_include(FILE* f)$/;"	f	class:EditWindow
old_include_editwindow	treeedit/editor.cc	/^void old_include_editwindow(void* w, FILE* f)$/;"	f
old_load	treeedit/editwindow.cc	/^void EditWindow::old_load(FILE* f)$/;"	f	class:EditWindow
old_load	treeedit/node.cc	/^Bool Node::old_load(FILE* f)$/;"	f	class:Node
old_load_editwindow	treeedit/editor.cc	/^void old_load_editwindow(void* w, FILE* f)$/;"	f
old_old_load	treeedit/node.cc	/^Bool Node::old_old_load(FILE* f)$/;"	f	class:Node
old_x_pos	windows/notadef.c	/^static int old_x_pos=0, old_y_pos=0;$/;"	v	file:
old_y_pos	windows/notadef.c	/^static int old_x_pos=0, old_y_pos=0;$/;"	v	file:
oldbegin	treeedit/select.hh	/^    Mark oldbegin;$/;"	m	class:Select
oldend	treeedit/select.hh	/^    Mark oldend;$/;"	m	class:Select
oldfileflag	tools/xpipein.c	/^int oldfileflag=0;$/;"	v
oldfileremap	documents/fileread.c	/^static MapUchar oldfileremap=0;$/;"	v	file:
oldfont_name	windows/output.c	/^static char *oldfont_name[256] = {$/;"	v	file:
oldfontattr	windows/output.c	/^} oldfontattr[] = {$/;"	v	typeref:struct:__anon79	file:
oldhandle	windows/sources.c	/^    void (*oldhandle)(int);$/;"	m	struct:__anon83	file:
oldsearchlen	windows/menu.c	/^static unsigned int searchlen = 0, replacelen = 0, oldsearchlen = 0;$/;"	v	file:
oldsearchstr	windows/menu.c	/^static Char searchstr[MAXLEN], replacestr[MAXLEN], oldsearchstr[MAXLEN];$/;"	v	file:
oldtonew	documents/fileread.c	/^Char oldtonew(Char c)$/;"	f
oldval	unicode/unifont.c	/^  short oldval;$/;"	m	struct:REMAPREC	file:
oldxpos	windows/remark.c	/^static int oldxpos=0, oldypos=0;$/;"	v	file:
oldypos	windows/remark.c	/^static int oldxpos=0, oldypos=0;$/;"	v	file:
op	include/expression.h	/^	Operator op;$/;"	m	union:Expression::__anon50
op	treeedit/node.hh	/^    Bool  op() const { return IsOp(_kind) || (IsDispOrExpr(_kind)&&stencil); }$/;"	f	class:Node
op_name	language/expression.c	/^static char *op_name[] = {$/;"	v	file:
open	windows/fileselc.c	/^    Bool open;$/;"	m	struct:__anon71	file:
open_box	windows/output.c	/^static BOX *open_box(int special)$/;"	f	file:
open_boxes	windows/output.c	/^static void open_boxes(void)$/;"	f	file:
open_dirfile	util/funcs.c	/^FILE *open_dirfile(Char *dir, Char *filename, char *mode)$/;"	f
open_dirselector	windows/menu.c	/^static void open_dirselector(Char *comment, Char *dir, Char *mask,$/;"	f	file:
open_display	windows/output.c	/^void open_display(void)$/;"	f
open_editwindow	treeedit/editor.cc	/^void* open_editwindow(void* w, unsigned int xs, unsigned int ys)$/;"	f
open_file	util/filefind.c	/^FILE *open_file(PathInfo pinfo, char *name, char *mode)$/;"	f
open_fileselector	windows/menu.c	/^static void open_fileselector(Char *comment, Char *dir, Char *mask,$/;"	f	file:
open_findwindow	treeedit/editor.cc	/^void* open_findwindow(void* w, unsigned int xs, unsigned int ys)$/;"	f
open_helpfile	windows/edit.c	/^void open_helpfile(void *data, int nr __attribute__((unused)))$/;"	f
open_match	windows/notadef.c	/^static int open_match(Char *s, int i, int *k)$/;"	f	file:
open_math	output/latexout.c	/^static void open_math(void)$/;"	f	file:
open_message_window	windows/edit.c	/^void open_message_window(Char *messagetitle)$/;"	f
open_miniwindow	treeedit/editor.cc	/^void* open_miniwindow(void* w, unsigned int xs, unsigned int ys)$/;"	f
open_node	windows/output.c	/^void open_node(void* data)$/;"	f
open_program	windows/edit.c	/^void open_program(Char *c, Char *title, int (*func)(unsigned char*, unsigned int*))$/;"	f
open_project_file	windows/sources.c	/^static FILE* open_project_file(Char *name)$/;"	f	file:
open_prompt	windows/remark.c	/^static void open_prompt(Char *comment, Char *defaultans,$/;"	f	file:
open_replacewindow	treeedit/editor.cc	/^void* open_replacewindow(void* w, unsigned int xs, unsigned int ys)$/;"	f
open_scratchwindow	treeedit/editor.cc	/^void* open_scratchwindow(void* w, unsigned int xs, unsigned int ys)$/;"	f
open_simple_program	windows/menu.c	/^static void open_simple_program(Char *command, Char *title)$/;"	f	file:
open_tabbing	windows/output.c	/^void open_tabbing(void)$/;"	f
open_temporary_file	windows/edit.c	/^void open_temporary_file(char *editname, char *filename, int disp, int linenum)$/;"	f
openparen_insert	treeedit/editor.cc	/^void openparen_insert(int, Index count)$/;"	f
openparen_insert	treeedit/select.cc	/^Bool Select::openparen_insert(Char c, Index count)$/;"	f	class:Select
operator !	treeedit/mark.hh	/^    Bool  operator !     () const { return !node; }$/;"	f	class:Mark
operator !	treeedit/select.hh	/^    Bool operator !    () const { return begin == Empty; }$/;"	f	class:Select
operator !=	treeedit/mark.cc	/^Bool operator != (const Mark& m1, const Mark& m2)$/;"	f
operator ()	treeedit/node.cc	/^Char Node::operator () (Index pos) const$/;"	f	class:Node
operator *	treeedit/mark.hh	/^    Node& operator *     () const { return *node; }$/;"	f	class:Mark
operator ->	treeedit/mark.hh	/^    Node* operator ->    () const { return  node; }$/;"	f	class:Mark
operator =	treeedit/marker.cc	/^Mark& Marker::operator = (const Mark& m)$/;"	f	class:Marker
operator =	treeedit/marker.cc	/^Mark& Marker::operator = (const Marker& m)$/;"	f	class:Marker
operator =	treeedit/marker.cc	/^Node* Marker::operator = (Node* pn)$/;"	f	class:Marker
operator =	treeedit/select.cc	/^Select& Select::operator = (const Mark& m)$/;"	f	class:Select
operator =	treeedit/select.cc	/^Select& Select::operator = (const Select& s)$/;"	f	class:Select
operator ==	treeedit/mark.cc	/^Bool operator == (const Mark& m1, const Mark& m2)$/;"	f
operator ==	treeedit/node.cc	/^Bool Node::operator == (const Char* s) const$/;"	f	class:Node
operator Bool	treeedit/select.hh	/^         operator Bool () const { return begin != Empty; }$/;"	f	class:Select
operator Node*	treeedit/mark.hh	/^          operator Node* () const { return  node; }$/;"	f	class:Mark
operator []	treeedit/node.hh	/^    Char& operator [] (Index pos) const {$/;"	f	class:Node
opf	documents/fileread.c	/^static FILE *opf=NULL;$/;"	v	file:
opitem	language/parse.y	/^opitem      :	PIN$/;"	l
opitems	language/parse.y	/^opitems     :   opitem$/;"	l
opkind	treeedit/node.hh	/^    Opkind opkind() const { return (stencil? stencil_kind(innr):None); }$/;"	f	class:Node
oplist	language/expression.c	/^static OpStruct *oplist=NULL;$/;"	v	file:
ops	treeedit/editor.cc	/^Select& ops() { static Select *opsval = new Select(); return *opsval; }$/;"	f
opspace	treeedit/node.cc	/^Char Node::opspace(Bool ins)$/;"	f	class:Node
opspace	windows/output.c	/^void opspace(int size)$/;"	f
options	language/parse.y	/^options     :	\/* empty *\/$/;"	l
optree	include/match.h	/^    void *optree[MAXTREES];$/;"	m	struct:ParseRules
original	util/translate.c	/^  char *original;    \/* original string *\/$/;"	m	struct:Translation	file:
other_prog_ex	tools/xpipein.c	/^int other_prog_ex=0;$/;"	v
other_window	treeedit/editor.cc	/^void other_window(void*)$/;"	f
out_bold	windows/output.c	/^void out_bold(Char *str)$/;"	f
out_char	windows/output.c	/^void out_char(Char data)$/;"	f
out_char_bold	windows/output.c	/^void out_char_bold(char *str)$/;"	f
out_char_string	windows/output.c	/^void out_char_string(char *str)$/;"	f
out_clear	windows/output.c	/^void out_clear(void)$/;"	f
out_cursor	windows/output.c	/^void out_cursor(int kind)$/;"	f
out_cursor_select	windows/output.c	/^void out_cursor_select(int kind, void *selection)$/;"	f
out_index	windows/output.c	/^void out_index(int c)$/;"	f
out_latex_char	output/latexout.c	/^void out_latex_char(Char c)$/;"	f
out_message	windows/output.c	/^void out_message(Char *txt)$/;"	f
out_message_curs	windows/output.c	/^void out_message_curs(Char *txt)$/;"	f
out_permanent_message	windows/output.c	/^void out_permanent_message(Char *txt)$/;"	f
out_stack	treeedit/editwindow.cc	/^Mark EditWindow::out_stack(const Mark& init)$/;"	f	class:EditWindow
out_string	windows/output.c	/^void out_string(Char *str)$/;"	f
out_symbol	windows/output.c	/^static void out_symbol(Char data)$/;"	f	file:
out_text_delim	windows/output.c	/^void out_text_delim(int on)$/;"	f
outf	tools/xpipeout.c	/^FILE *outf;$/;"	v
outfnr	tools/xpipeout.c	/^int outfnr;$/;"	v
output	language/parselex.c	11;"	d	file:
output	language/parselex.c	80;"	d	file:
output	language/parselex.c	84;"	d	file:
output	module/pvsparselex.c	14;"	d	file:
output	module/pvsparselex.c	84;"	d	file:
output	module/pvsparselex.c	88;"	d	file:
output_important	windows/output.c	/^int output_important(void)$/;"	f
output_init	windows/output.c	/^void output_init(void)$/;"	f
output_mode	windows/sources.c	/^Bool iconic=MP_False, output_mode = MPTEX;$/;"	v
output_win	windows/output.c	/^static Window output_win = 0;$/;"	v	file:
outputat	windows/edit.c	/^static Atom inputat, outputat, intestat, outtestat, textat, procesidat;$/;"	v	file:
outputmenu	windows/edit.c	/^static MENU outputmenu;$/;"	v	file:
outputname	windows/edit.c	/^                 Char *headername, *filename, *pathname, *outputname;$/;"	m	struct:__anon69	file:
outtestat	windows/edit.c	/^static Atom inputat, outputat, intestat, outtestat, textat, procesidat;$/;"	v	file:
outwin	treeedit/editwindow.hh	/^    void* outwin;$/;"	m	class:EditWindow
overlap	treeedit/select.cc	/^Bool overlap(const Select& s1, const Select& s2)$/;"	f
ownwin	include/popup.h	/^  Window ownwin;$/;"	m	struct:MENU
p1	treeedit/node.hh	/^    Char* p1;       \/\/ Pointer to block of Chars in memory.$/;"	m	class:Node
p2	treeedit/node.hh	/^    Char* p2;       \/\/ Pointer into the block p1 points to.$/;"	m	class:Node
page	windows/fonts.c	/^    short fnr, lnr, fsnr, number, page[2], nrml, max;$/;"	m	struct:__anon70	file:
pagelist	windows/symbol.c	/^static SYMBOLPAGE *pagelist=0;$/;"	v	file:
parens	treeedit/node.hh	/^    Bool parens() const { return _parens; }$/;"	f	class:Node
parent	windows/events.c	/^static Window iwin = 0, parent=0, parentspar=0, first_click=0;$/;"	v	file:
parentspar	windows/events.c	/^static Window iwin = 0, parent=0, parentspar=0, first_click=0;$/;"	v	file:
parentwin	include/popup.h	/^  Window parentwin;$/;"	m	struct:MENU
parse_add_rule	templates/match.c	/^int parse_add_rule(int group, Char *parsestring, int len, int template,$/;"	f
parse_char	module/hugsparse.c	/^static CHAR parse_char(char **t)$/;"	f	file:
parse_colorstring	windows/sources.c	/^static int parse_colorstring(char *c)$/;"	f	file:
parse_cont	module/hugsparse.c	/^static CONT parse_cont(char **t)$/;"	f	file:
parse_dummy	module/hugsparse.c	/^static char *parse_dummy(char **t)$/;"	f	file:
parse_error	module/hugsparse.c	/^char *parse_error(char **t)$/;"	f
parse_error	treeedit/node.cc	/^void Node::parse_error(Char *errtext, int len)$/;"	f	class:Node
parse_error_func	module/hugsparse.c	/^static void parse_error_func(char *w __attribute__((unused)))$/;"	f	file:
parse_exp	module/hugsparse.c	/^static EXP parse_exp(char **t)$/;"	f	file:
parse_input	language/parse.c	/^void parse_input(void)$/;"	f
parse_kap	module/hugsparse.c	/^static KIND parse_kap(char **t)$/;"	f	file:
parse_kbadkind	module/hugsparse.c	/^static KIND parse_kbadkind(char **t)$/;"	f	file:
parse_key	keyboard/keys.c	/^int parse_key(char *keystr, KeyNum *keyres, KeyMode *moderes)$/;"	f
parse_kind	module/hugsparse.c	/^static KIND parse_kind(char **t)$/;"	f	file:
parse_kintcell	module/hugsparse.c	/^static KIND parse_kintcell(char **t)$/;"	f	file:
parse_koffset	module/hugsparse.c	/^static KIND parse_koffset(char **t)$/;"	f	file:
parse_kstar	module/hugsparse.c	/^static KIND parse_kstar(char **t)$/;"	f	file:
parse_microspace	templates/match.c	/^static int parse_microspace(Char *buffer __attribute__((unused)))$/;"	f	file:
parse_nat	module/hugsparse.c	/^static NAT parse_nat(char **t)$/;"	f	file:
parse_node_expression	templates/match.c	/^static void *parse_node_expression(Char *buffer, LeafTree *closeset, int prec)$/;"	f	file:
parse_node_identifier	templates/match.c	/^static void *parse_node_identifier(Char *buffer, LeafTree *closeset)$/;"	f	file:
parse_node_operator	templates/match.c	/^static void *parse_node_operator(Char *buffer, LeafTree *closeset,$/;"	f	file:
parse_node_template	templates/match.c	/^static void *parse_node_template(Char *buffer, LeafTree *closeset,$/;"	f	file:
parse_node_text	templates/match.c	/^static void *parse_node_text(Char *buffer, LeafTree *closeset)$/;"	f	file:
parse_node_variable	templates/match.c	/^static void *parse_node_variable(Char *buffer, LeafTree *closeset)$/;"	f	file:
parse_position	module/pvs.c	124;"	d	file:
parse_pred	module/hugsparse.c	/^static PRED parse_pred(char **t)$/;"	f	file:
parse_save_rules	templates/match.c	/^int parse_save_rules(PARSERULES *set)$/;"	f
parse_selection	module/parsertemp.c	/^void parse_selection(void)$/;"	f
parse_string	module/hugsparse.c	/^static STRING parse_string(char **t)$/;"	f	file:
parse_tap	module/hugsparse.c	/^static TEXP parse_tap(char **t)$/;"	f	file:
parse_taptype	module/hugsparse.c	/^static TEXP parse_taptype(char **t)$/;"	f	file:
parse_tbadtype	module/hugsparse.c	/^static TEXP parse_tbadtype(char **t)$/;"	f	file:
parse_tclass	module/hugsparse.c	/^static TEXP parse_tclass(char **t)$/;"	f	file:
parse_tcontext	module/hugsparse.c	/^static TEXP parse_tcontext(char **t)$/;"	f	file:
parse_texp	module/hugsparse.c	/^static TEXP parse_texp(char **t)$/;"	f	file:
parse_text	templates/match.c	/^int parse_text(char *text)$/;"	f
parse_tintcell	module/hugsparse.c	/^static TEXP parse_tintcell(char **t)$/;"	f	file:
parse_tiscon	module/hugsparse.c	/^static TEXP parse_tiscon(char **t)$/;"	f	file:
parse_tistuple	module/hugsparse.c	/^static TEXP parse_tistuple(char **t)$/;"	f	file:
parse_toffset	module/hugsparse.c	/^static TEXP parse_toffset(char **t)$/;"	f	file:
parse_tpred	module/hugsparse.c	/^static TEXP parse_tpred(char **t)$/;"	f	file:
parse_tpredlist	module/hugsparse.c	/^static TEXP parse_tpredlist(char **t)$/;"	f	file:
parse_tsigtype	module/hugsparse.c	/^static TEXP parse_tsigtype(char **t)$/;"	f	file:
parse_ttuple	module/hugsparse.c	/^static TEXP parse_ttuple(char **t)$/;"	f	file:
parse_ttycon	module/hugsparse.c	/^static TEXP parse_ttycon(char **t)$/;"	f	file:
parse_ttype	module/hugsparse.c	/^static TEXP parse_ttype(char **t)$/;"	f	file:
parse_ttypearrow	module/hugsparse.c	/^static TEXP parse_ttypearrow(char **t)$/;"	f	file:
parse_ttypelist	module/hugsparse.c	/^static TEXP parse_ttypelist(char **t)$/;"	f	file:
parse_tunpred	module/hugsparse.c	/^static TEXP parse_tunpred(char **t)$/;"	f	file:
parse_typelist	module/hugsparse.c	/^static TEXP parse_typelist(char **t)$/;"	f	file:
parse_use_rules	templates/match.c	/^int parse_use_rules(PARSERULES *set)$/;"	f
parsecount	templates/match.c	/^static int parsecount=0;$/;"	v	file:
parsed_node	treeedit/node.cc	/^void * Node::parsed_node(Char type, Char *partext, int len, int nnr, int popspace)$/;"	f	class:Node
parsemess	module/pvs.c	/^static int parsemess= -1;$/;"	v	file:
parser_init	templates/match.c	/^void parser_init(void)$/;"	f
paste	treeedit/node.cc	/^Bool Node::paste(Index pos, Node* pn)$/;"	f	class:Node
pathname	windows/edit.c	/^                 Char *headername, *filename, *pathname, *outputname;$/;"	m	struct:__anon69	file:
paybacklist	util/memman.c	/^static PaybackFunc *paybacklist=0;$/;"	v	file:
percent	tools/pktobdf.c	/^integer percent=95;$/;"	v
perm	windows/edit.c	/^int perm[NR_BUTTON+5] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10};$/;"	v	file:
permanentmess	windows/output.c	/^static Char permanentmess[400];$/;"	v	file:
phindex	include/notatype.h	/^	  int *phindex;$/;"	m	struct:__anon46
pid	windows/edit.c	/^		 pid_t pid;$/;"	m	struct:__anon69	file:
pid_t	module/pvsparse.c	/^typedef __pid_t pid_t;$/;"	t	file:
pinable	include/popupmenu.h	/^  int pinable;$/;"	m	struct:PopupMenu
pinf	unicode/uniconv.c	/^static PathInfo pinf=0;$/;"	v	file:
pinf	unicode/unimap.c	/^static PathInfo pinf=0;$/;"	v	file:
pixcurs	windows/getstring.c	/^           int charcurs, pixcurs;$/;"	m	struct:STRINGINFO	file:
pixel_to_pos	windows/symbol.c	/^static int pixel_to_pos(SYMBOLINFO *sinfo, int *x, int *y)$/;"	f	file:
pixelsize	tools/pktobdf.c	/^integer pixelsize=0;$/;"	v
pkbyte	tools/pktobdf.c	/^static eightbits pkbyte()$/;"	f	file:
pkchar	tools/pktobdf.c	/^struct pkchar {$/;"	s	file:
pkchar	tools/pktobdf.c	/^} pkchar[MAXPKCHAR];$/;"	v	typeref:struct:pkchar
pkfile	tools/pktobdf.c	/^bytefile pkfile ;$/;"	v
pkloc	tools/pktobdf.c	/^integer pkloc ;$/;"	v
pkname	tools/pktobdf.c	/^char pkname[2048] ;$/;"	v
pkpackednum	tools/pktobdf.c	/^static integer pkpackednum()$/;"	f	file:
placename	output/latexout.c	/^static char placename[PLACENAMESIZE+1];$/;"	v	file:
placename	windows/output.c	/^static Char placename[PLACENAMESIZE+1];$/;"	v	file:
placepos	output/latexout.c	/^static int placepos=0;$/;"	v	file:
placepos	windows/output.c	/^static int placepos=0;$/;"	v	file:
plane	include/markup.h	/^    int plane;    \/* ISO10646 plane, needed for correct surrogates *\/$/;"	m	struct:_attribs
pline	language/leaftree.c	/^static char pline[70]=$/;"	v	file:
pline	util/leaftree.c	/^static char pline[70]=$/;"	v	file:
plus_uid	module/pvsparse.c	/^  plus_uid=3407510727UL,$/;"	v	file:
pmap	unicode/unifont.c	/^static PathInfo pmap=0;$/;"	v	file:
point	treeedit/editwindow.hh	/^    Marker point;$/;"	m	class:Return
pointer	util/refcounting.c	/^  void *pointer;$/;"	m	struct:RefElem	file:
pointsize	tools/pktobdf.c	/^integer pointsize=0;$/;"	v
pointstate	util/funcs.c	/^static int pointstate[7] = { 0, 2, 3, 0, 5, 5, 0 };$/;"	v	file:
poll	treeedit/editwindow.hh	/^    Bool poll() { return root->poll(); }$/;"	f	class:EditWindow
poll	treeedit/node.cc	/^Bool Node::poll()$/;"	f	class:Node
pop_attributes	windows/fonts.c	/^void pop_attributes(void)$/;"	f
pop_eval_stack	language/expression.c	/^void pop_eval_stack(void)$/;"	f
pop_fontgroup	include/fonts.h	23;"	d
pop_fontgroup	treeedit/editwindow.cc	45;"	d	file:
pop_hidden	documents/fileread.c	/^void pop_hidden(void)$/;"	f
pop_int	util/intstack.c	/^int pop_int(INTSTACK **s)$/;"	f
pop_keymap	keyboard/keyboard.c	/^KeyMap *pop_keymap(void)$/;"	f
pop_local_variables	language/variable.c	/^void pop_local_variables(void)$/;"	f
pop_math_pref	output/latexout.c	/^void pop_math_pref(void)$/;"	f
pop_return	windows/notadef.c	146;"	d	file:
pop_rstack	documents/fileread.c	/^static void pop_rstack(READSTACK **rst)$/;"	f	file:
pop_stack	windows/getstring.c	/^static void pop_stack(void)$/;"	f	file:
popattrib	windows/output.c	245;"	d	file:
poptabs	windows/output.c	/^static void poptabs(void)$/;"	f	file:
popup_add_line	language/popupmenu.c	/^void popup_add_line(PopupMenu *menu, Uchar *line, Sequence *func)$/;"	f
popup_add_separator	language/popupmenu.c	/^void popup_add_separator(PopupMenu *menu)$/;"	f
popup_add_submenu	language/popupmenu.c	/^void popup_add_submenu(PopupMenu *menu, Uchar *line, Uchar *subname)$/;"	f
popup_attr	windows/popup.c	/^static XSetWindowAttributes popup_attr;$/;"	v	file:
popup_bad_end	windows/popup.c	/^static void popup_bad_end(void *data)$/;"	f	file:
popup_call_default	windows/popup.c	/^void popup_call_default(MENU *m)$/;"	f
popup_clear_items	language/popupmenu.c	/^static void popup_clear_items(PopupMenu *menu)$/;"	f	file:
popup_define	language/popupmenu.c	/^PopupMenu *popup_define(Uchar *name)$/;"	f
popup_direction	language/popupmenu.c	/^void popup_direction(PopupMenu *menu, int rtol)$/;"	f
popup_disable	language/popupmenu.c	/^void popup_disable(Uchar *menuID, Uchar *label)$/;"	f
popup_disable_item	windows/menu.c	/^static void popup_disable_item(Uchar *menuID, Uchar *label)$/;"	f	file:
popup_draw	windows/popup.c	/^static void popup_draw(void *data)$/;"	f	file:
popup_enable	language/popupmenu.c	/^void popup_enable(Uchar *menuID, Uchar *label)$/;"	f
popup_enable_item	windows/menu.c	/^static void popup_enable_item(Uchar *menuID, Uchar *label)$/;"	f	file:
popup_find_line	language/popupmenu.c	/^static PopupLine *popup_find_line(PopupMenu *menu, Uchar *text)$/;"	f	file:
popup_hugs	module/hugs.c	/^static void popup_hugs(void *data __attribute__((unused)), int n)$/;"	f	file:
popup_hugsoption	module/hugs.c	/^static void popup_hugsoption(void *data __attribute__((unused)), int n)$/;"	f	file:
popup_hugssignal	module/hugs.c	/^static void popup_hugssignal(void *data __attribute__((unused)), int n)$/;"	f	file:
popup_init	windows/popup.c	/^void popup_init(void)$/;"	f
popup_layout_change	windows/popup.c	/^static void popup_layout_change(void *data)$/;"	f	file:
popup_line_diff	language/popupmenu.c	/^static int popup_line_diff(Uchar *s, Uchar *t)$/;"	f	file:
popup_make	windows/popup.c	/^MENU *popup_make(MENU *menu)$/;"	f
popup_make_default	language/popupmenu.c	/^void popup_make_default(PopupMenu *menu)$/;"	f
popup_map	windows/popup.c	/^void popup_map(Window win)$/;"	f
popup_maple	module/maple.c	/^static void popup_maple(void *data __attribute__((unused)), int n)$/;"	f	file:
popup_mask	windows/popup.c	/^static unsigned long popup_mask;$/;"	v	file:
popup_motion	windows/popup.c	/^static void popup_motion(void *data, int x, int y)$/;"	f	file:
popup_nr	windows/default.c	/^static int popup_nr=0;$/;"	v	file:
popup_pinable	language/popupmenu.c	/^void popup_pinable(PopupMenu *menu)$/;"	f
popup_press	windows/popup.c	/^static void popup_press(void *data, XButtonEvent *event)$/;"	f	file:
popup_quit	windows/menu.c	/^static void popup_quit(void *data __attribute__((unused)), int n)$/;"	f	file:
popup_release	windows/popup.c	/^static void popup_release(void *data, XButtonEvent *event __attribute__((unused)))$/;"	f	file:
popup_remove	windows/popup.c	/^void popup_remove(Window win)$/;"	f
popup_replace	windows/popup.c	/^MENU *popup_replace(MENU *menuold, MENU *menunew)$/;"	f
popup_resize	windows/popup.c	/^static void popup_resize(void *data, XConfigureEvent *event)$/;"	f	file:
popup_set_termfunc	windows/popup.c	/^void popup_set_termfunc(MENU *menu, void (*func)(void*), void *data)$/;"	f
popup_set_title	language/popupmenu.c	/^void popup_set_title(PopupMenu *menu, Uchar *title)$/;"	f
popup_store	language/popupmenu.c	/^void popup_store(PopupMenu *menu)$/;"	f
popup_unmap	windows/popup.c	/^void popup_unmap(Window win)$/;"	f
popupfuncs	windows/popup.c	/^FUNCTIONS popupfuncs = {$/;"	v
popuplist	language/popupmenu.c	/^static PopupList *popuplist=0;$/;"	v	file:
popuptext	windows/menu.c	/^static Char popuptext[POPUPSIZE];$/;"	v	file:
pos	documents/fileread.c	/^    int pos;$/;"	m	struct:READSTACK	file:
pos	include/markup.h	/^    int pos;      \/* position within object *\/$/;"	m	struct:_attribs
pos	include/unifont.h	/^    int pos;             \/* position in that font *\/$/;"	m	struct:__anon43
pos	language/types.c	/^    Type pos;$/;"	m	struct:__anon2	file:
pos	templates/match.c	/^    int pos;$/;"	m	struct:PARRULE	file:
pos	treeedit/mark.hh	/^    Index pos;$/;"	m	class:Mark
pos	unicode/drawstring.c	/^    int pos;     \/* position of item to use next (number of used items) *\/$/;"	m	struct:__anon96	file:
pos	util/fstate.c	/^    int pos;$/;"	m	struct:__anon60	file:
pos_to_char	windows/symbol.c	/^static Char pos_to_char(SYMBOLINFO *sinfo, int i, int j)$/;"	f	file:
pos_to_line	windows/scrollbar.c	/^static int pos_to_line(int pos, int size, int nr_lines)$/;"	f	file:
pos_to_pixel	windows/symbol.c	/^static void pos_to_pixel(SYMBOLINFO *sinfo, int *i, int *j)$/;"	f	file:
pos_x_with	windows/buffer.c	76;"	d	file:
pos_x_with	windows/edit.c	157;"	d	file:
pos_x_with	windows/find.c	110;"	d	file:
pos_x_with	windows/notation.c	120;"	d	file:
pos_x_without	windows/buffer.c	77;"	d	file:
pos_x_without	windows/edit.c	158;"	d	file:
pos_x_without	windows/find.c	111;"	d	file:
pos_x_without	windows/notation.c	121;"	d	file:
pos_y_with	windows/buffer.c	78;"	d	file:
pos_y_with	windows/edit.c	159;"	d	file:
pos_y_with	windows/find.c	112;"	d	file:
pos_y_with	windows/notation.c	122;"	d	file:
pos_y_without	windows/buffer.c	79;"	d	file:
pos_y_without	windows/edit.c	160;"	d	file:
pos_y_without	windows/find.c	113;"	d	file:
pos_y_without	windows/notation.c	123;"	d	file:
poscurs	windows/notadef.c	/^static int verscurs=-1, formatcurs=0, poscurs = 0;$/;"	v	file:
posdelta	include/markup.h	/^    int posdelta; \/* in a string, how relates pos to a pos in the original$/;"	m	struct:_attribs
position	templates/notatype.c	/^int position(VERSION *vers, Char placeh)$/;"	f
position_changed	windows/scrollbar.c	/^static void position_changed(SCROLLBARINFO *sbi, int pos)$/;"	f	file:
position_detect	windows/notation.c	/^static int position_detect(NOTATIONINFO *ninf, int *xp, int *yp)$/;"	f	file:
positioncode	windows/notadef.c	/^static int positioncode(int y)$/;"	f	file:
positive_yn	windows/menu.c	/^static void positive_yn(void)$/;"	f	file:
possel	windows/notadef.c	/^static int posstart=-1, possel=0;$/;"	v	file:
posstart	windows/notadef.c	/^static int posstart=-1, possel=0;$/;"	v	file:
pow	language/powfix.h	9;"	d
powfunc	language/powfix.h	/^static double (*powfunc)(double,double)=0;$/;"	v
prcsbuf	windows/edit.c	/^		 unsigned char *prcsbuf;$/;"	m	struct:__anon69	file:
prdiff	keyboard/keyboard.c	/^static int prdiff=0;$/;"	v	file:
prec	include/notatype.h	/^	  int prec, versions;$/;"	m	struct:__anon47
preced	treeedit/node.hh	/^    Index preced() const { return (stencil? stencil_prec(innr):0); }$/;"	f	class:Node
pref_count	output/latexout.c	/^static int pref_count[50] = {1};$/;"	v	file:
pref_math	output/latexout.c	/^static int pref_math[50] = {0};$/;"	v	file:
prefix	documents/Makefile	/^prefix          = \/home\/jff\/code\/mathpad-0.80-jff\/build$/;"	m
prefix	include/Makefile	/^prefix          = \/home\/jff\/code\/mathpad-0.80-jff\/build$/;"	m
prefix	include/keyboard.h	/^    KeyMap *prefix;  \/* sub map *\/$/;"	m	struct:__anon49
prefix	keyboard/Makefile	/^prefix          = \/home\/jff\/code\/mathpad-0.80-jff\/build$/;"	m
prefix	keyboard/keyboard.c	/^    KeyMap *prefix;$/;"	m	struct:KeyStack	file:
prefix	language/Makefile	/^prefix          = \/home\/jff\/code\/mathpad-0.80-jff\/build$/;"	m
prefix	markup/Makefile	/^prefix          = \/home\/jff\/code\/mathpad-0.80-jff\/build$/;"	m
prefix	module/Makefile	/^prefix          = \/home\/jff\/code\/mathpad-0.80-jff\/build$/;"	m
prefix	output/Makefile	/^prefix          = \/home\/jff\/code\/mathpad-0.80-jff\/build$/;"	m
prefix	templates/Makefile	/^prefix          = \/home\/jff\/code\/mathpad-0.80-jff\/build$/;"	m
prefix	tools/Makefile	/^prefix          = \/home\/jff\/code\/mathpad-0.80-jff\/build$/;"	m
prefix	treeedit/Makefile	/^prefix          = \/home\/jff\/code\/mathpad-0.80-jff\/build$/;"	m
prefix	unicode/Makefile	/^prefix          = \/home\/jff\/code\/mathpad-0.80-jff\/build$/;"	m
prefix	util/Makefile	/^prefix          = \/home\/jff\/code\/mathpad-0.80-jff\/build$/;"	m
prefix	windows/Makefile	/^prefix          = \/home\/jff\/code\/mathpad-0.80-jff\/build$/;"	m
prefmath	output/latexout.c	204;"	d	file:
press	include/sources.h	/^    void (*press)(void*, XButtonEvent*);$/;"	m	struct:__anon41
press_state	windows/sources.c	/^unsigned int press_state = 0;$/;"	v
press_time	windows/sources.c	/^unsigned long press_time = 0, drag_time = 0, release_time = 0;$/;"	v
pressed	windows/button.c	/^	    Bool pressed, inside;$/;"	m	struct:__anon75	file:
pressedkey	keyboard/keys.c	/^int pressedkey=0;$/;"	v
prev	include/popupmenu.h	/^  PopupLine *next, *prev;$/;"	m	struct:PopupLine
prev	language/expression.c	/^    ExpEvaStack *prev;$/;"	m	struct:ExpEvaStack	file:
prev	language/variable.c	/^    LVStack *prev;$/;"	m	struct:LVStack	file:
prev	windows/checkbox.c	/^    CHECKBOXINFO *next,*prev;$/;"	m	struct:CHECKBOXINFO	file:
prev	windows/getstring.c	/^           STRINGINFO *prev, *next;$/;"	m	struct:STRINGINFO	file:
prev	windows/output.c	/^                TABBING *prev;$/;"	m	struct:TABBING	file:
prevfield	windows/default.c	132;"	d	file:
prevline	treeedit/mark.cc	/^void Mark::prevline()$/;"	f	class:Mark
prevmenu	module/SEJ.c	/^static MENU *prevmenu=NULL;$/;"	v	file:
print	markup/markup.c	/^    HandleFunc print;$/;"	m	struct:SurroHandler	file:
print	treeedit/editwindow.cc	/^void Return::print()$/;"	f	class:Return
print_box	windows/output.c	/^static void print_box(BOX *b, int d)$/;"	f	file:
print_charstruct	unicode/brows.c	/^void print_charstruct(XCharStruct *cs, int i)$/;"	f
print_charstruct	unicode/fonttest.c	/^void print_charstruct(XCharStruct *cs, int i)$/;"	f
print_cprog_finitestate	util/fstate.c	/^static void print_cprog_finitestate(FSTATE *fs)$/;"	f	file:
print_decomp_closetag	unicode/printdecomp.c	/^static void print_decomp_closetag(int tagval)$/;"	f	file:
print_decomp_opentag	unicode/printdecomp.c	/^static void print_decomp_opentag(int tagval)$/;"	f	file:
print_expression	language/expression.c	/^static void print_expression(Expression *e)$/;"	f	file:
print_key	keyboard/keys.c	/^int print_key(char *keystr, int len, KeyNum key, KeyMode mode)$/;"	f
print_property	unicode/fonttest.c	/^void print_property(Display *display, XFontProp *fp)$/;"	f
print_selection_path	windows/menu.c	/^static void print_selection_path(int full, int sub, Char **str)$/;"	f	file:
print_sequence	language/sequence.c	/^static void print_sequence(Sequence *seq, int indent)$/;"	f	file:
print_surro	markup/markup.c	/^Uchar *print_surro(Uchar lowvalue, Attribute *attr, RedirectFunc *func)$/;"	f
print_tree	language/leaftree.c	/^void print_tree(BreanchNode *b, int n)$/;"	f
print_tree	util/leaftree.c	/^void print_tree(BreanchNode *b, int n)$/;"	f
printdouble	language/reallib.c	/^static void printdouble(Uchar *str, double x)$/;"	f	file:
printint	language/intlib.c	/^static void printint(Uchar *str, int x)$/;"	f	file:
printint	language/ptest.c	/^void printint(char *str, int x)$/;"	f
printlatex	output/latexout.c	/^static void printlatex(Bool bld, char *str)$/;"	f	file:
printnode	util/debug.c	/^static void printnode(lfptr t)$/;"	f	file:
printnode	util/memman.c	/^static void printnode(lfptr t)$/;"	f	file:
printrubref	language/typetest.c	/^static void printrubref(RubRef x)$/;"	f	file:
printstring	language/stringlib.c	/^static void printstring(Uchar *s)$/;"	f	file:
printval	util/debug.c	103;"	d	file:
printval	util/memman.c	82;"	d	file:
procesidat	windows/edit.c	/^static Atom inputat, outputat, intestat, outtestat, textat, procesidat;$/;"	v	file:
process_mpk_file	windows/menu.c	/^static void process_mpk_file(Char *str)$/;"	f	file:
progname	documents/system.c	/^Char *progname = NULL,$/;"	v
program_dir	documents/system.c	/^     *program_dir = NULL,$/;"	v
program_fontfilename	documents/system.c	/^     *program_fontfilename = NULL,$/;"	v
program_keypath	documents/system.c	/^     *program_keypath = NULL;$/;"	v
program_latexdir	documents/system.c	/^     *program_latexdir = NULL,$/;"	v
program_notationdir	documents/system.c	/^     *program_notationdir = NULL,$/;"	v
project_name	windows/sources.c	/^Char *project_name = NULL;$/;"	v
prompt_answer	windows/remark.c	/^static Char *prompt_answer=NULL;$/;"	v	file:
prompt_button	windows/remark.c	/^static Char *prompt_button[4];$/;"	v	file:
prompt_handle	windows/remark.c	/^static void prompt_handle(void *data  __attribute__((unused)), int bnr)$/;"	f	file:
prompt_int	windows/remark.c	/^static int prompt_int=0;    \/* integer value of answer *\/$/;"	v	file:
prompt_lastbutton	windows/remark.c	/^static int prompt_lastbutton=0;$/;"	v	file:
prompt_lazyfunction	windows/remark.c	/^static void *prompt_lazyfunction[3];$/;"	v	file:
prompt_text	windows/remark.c	/^static Char *prompt_text[4];$/;"	v	file:
propempty	tools/xpipein.c	/^int propempty=1;$/;"	v
propempty	tools/xpipeout.c	/^int propempty=0;$/;"	v
property_change	include/sources.h	/^    void (*property_change)(void *, XPropertyEvent*);$/;"	m	struct:__anon41
propname	tools/xpipein.c	/^char *propname="MPINPUT";$/;"	v
propname	tools/xpipeout.c	/^char *propname="MPOUTPUT";$/;"	v
proto	language/parse.y	/^proto	    :	TYPEVAL IDENTIFIER$/;"	l
proto_add_to_database	language/prototype.c	/^Prototype *proto_add_to_database(Prototype *proto)$/;"	f
proto_function	language/function.c	/^Prototype *proto_function(FuncRef function)$/;"	f
proto_user	language/userdef.c	/^Prototype *proto_user(FuncRef function)$/;"	f
protocmp	language/prototype.c	/^static int protocmp(const void *pr1, const void *pr2)$/;"	f	file:
protocol	windows/sources.c	/^Atom protocol[2];$/;"	v
protoinit	language/prototype.c	/^void protoinit(void)$/;"	f
protolist	windows/editlib.c	/^static PROTOLIST protolist[] = $/;"	v	file:
protolist	windows/getstring.c	/^static PROTOLIST protolist[] = $/;"	v	file:
protolist	windows/notadef.c	/^static PROTOLIST protolist[] = $/;"	v	file:
protopos	windows/editlib.c	/^  int protopos;$/;"	m	struct:__anon87	file:
protopos	windows/getstring.c	/^  int protopos;$/;"	m	struct:__anon78	file:
protopos	windows/notadef.c	/^  int protopos;$/;"	m	struct:__anon90	file:
protopredef	language/prototype.c	/^Prototype protopredef[] =$/;"	v
prototree	language/prototype.c	/^static LeafTree prototree = { 0,$/;"	v	file:
prototype	include/types.h	/^    void *prototype; \/* function prototype *\/$/;"	m	struct:__anon58
prototype	language/function.c	/^    Prototype *prototype; \/* contains a function to call funcptr *\/$/;"	m	struct:__anon1	file:
prototype	language/parse.y	/^prototype   :	\/* empty *\/$/;"	l
prototype	language/userdef.c	/^    Prototype *prototype; \/* prototype for this function *\/$/;"	m	struct:__anon5	file:
protval	language/parse.c	/^        Prototype *protval;$/;"	m	union:__anon14	file:
prove_pos	module/pvs.c	/^static int prove_pos=InRubbish;$/;"	v	file:
ps	treeedit/editor.cc	/^Select& ps() { static Select *psval = new Select(); return *psval; }$/;"	f
ps_id_font	treeedit/editor.cc	/^int ps_id_font(void)$/;"	f
ps_notation	treeedit/editor.cc	/^int ps_notation(Offset *vnr)$/;"	f
pt	windows/editlib.c	/^  Prototype *pt;$/;"	m	struct:__anon86	file:
pt	windows/getstring.c	/^  Prototype *pt;$/;"	m	struct:__anon77	file:
pt	windows/notadef.c	/^  Prototype *pt;$/;"	m	struct:__anon89	file:
ptempty	language/prototype.c	/^static Type ptempty[] = {0};$/;"	v	file:
pthread_attr_t	module/pvsparse.c	/^} pthread_attr_t;$/;"	t	typeref:struct:__pthread_attr_s	file:
pthread_cond_t	module/pvsparse.c	/^} pthread_cond_t;$/;"	t	typeref:struct:__anon21	file:
pthread_condattr_t	module/pvsparse.c	/^} pthread_condattr_t;$/;"	t	typeref:struct:__anon22	file:
pthread_key_t	module/pvsparse.c	/^typedef unsigned int pthread_key_t;$/;"	t	file:
pthread_mutex_t	module/pvsparse.c	/^} pthread_mutex_t;$/;"	t	typeref:struct:__anon23	file:
pthread_mutexattr_t	module/pvsparse.c	/^} pthread_mutexattr_t;$/;"	t	typeref:struct:__anon24	file:
pthread_once_t	module/pvsparse.c	/^typedef int pthread_once_t;$/;"	t	file:
pthread_t	module/pvsparse.c	/^typedef unsigned long int pthread_t;$/;"	t	file:
ptint	language/prototype.c	/^static Type ptint[] = {IntType};$/;"	v	file:
ptr	tools/xpipeout.c	/^    char *ptr;$/;"	m	struct:STRSTACK	file:
ptr	util/debug.c	/^    void *ptr;$/;"	m	struct:__anon65	file:
ptr	util/memman.c	/^    void *ptr;$/;"	m	struct:__anon66	file:
ptstr	language/prototype.c	/^static Type ptstr[] = {StringType};$/;"	v	file:
push_attributes	windows/fonts.c	/^void push_attributes(int nr)$/;"	f
push_eval_stack	language/expression.c	/^void push_eval_stack(void)$/;"	f
push_fontgroup	include/fonts.h	22;"	d
push_fontgroup	treeedit/editwindow.cc	44;"	d	file:
push_hidden	documents/fileread.c	/^void push_hidden(void)$/;"	f
push_int	util/intstack.c	/^int push_int(INTSTACK **s, int i)$/;"	f
push_keymap	keyboard/keyboard.c	/^void push_keymap(KeyMap *map)$/;"	f
push_local_variables	language/variable.c	/^void push_local_variables(Value *list, int nr)$/;"	f
push_math_pref	output/latexout.c	/^void push_math_pref(Bool premath)$/;"	f
push_rstack	documents/fileread.c	/^static int push_rstack(READSTACK **rst)$/;"	f	file:
push_stack	windows/getstring.c	/^static void push_stack(void)$/;"	f	file:
push_temporary_keymap	keyboard/keyboard.c	/^void push_temporary_keymap(KeyMap *map, void *beforelazyfunc,$/;"	f
pushattrib	windows/output.c	244;"	d	file:
pushtabs	windows/output.c	/^static void pushtabs(void)$/;"	f	file:
put_Char	documents/fileread.c	/^void put_Char(Char c)$/;"	f
put_String	documents/fileread.c	/^void put_String(Char *s, int len)$/;"	f
put_bold_end_struct	documents/fileread.c	/^static void put_bold_end_struct(void)$/;"	f	file:
put_bold_struct	documents/fileread.c	/^static void put_bold_struct(char type, int size)$/;"	f	file:
put_char	documents/fileread.c	/^void put_char(Char c)$/;"	f
put_end_struct	documents/fileread.c	/^void put_end_struct(void)$/;"	f
put_filecode	documents/fileread.c	/^void put_filecode(int type)$/;"	f
put_findrep	treeedit/editor.cc	/^int put_findrep(void)$/;"	f
put_integer	documents/fileread.c	/^void put_integer(unsigned long l)$/;"	f
put_mark	windows/output.c	/^void put_mark(int x, int y)$/;"	f
put_sign	windows/output.c	/^static void put_sign(Window win, int x, int y, int kind, int ascent)$/;"	f	file:
put_stencil	templates/notatype.c	/^static void put_stencil(NOTATION *nota)$/;"	f	file:
put_string	documents/fileread.c	/^void put_string(char *s, int len)$/;"	f
put_struct	documents/fileread.c	/^void put_struct(char type, int size)$/;"	f
put_version	templates/notatype.c	/^static void put_version(VERSION *vers)$/;"	f	file:
pvs_add_keyword	module/pvs.c	/^void pvs_add_keyword(Char *keyword, Char *step, int induct)$/;"	f
pvs_after_init	module/pvs.c	/^static int pvs_after_init=0;$/;"	v	file:
pvs_before_realtime	module/pvs.c	/^static int pvs_before_realtime=0;$/;"	v	file:
pvs_check_hint	module/pvs.c	/^void pvs_check_hint(int selection)$/;"	f
pvs_construct_hint	module/pvs.c	/^void pvs_construct_hint(int selection, int forward, Char *hint)$/;"	f
pvs_context_dir	module/pvs.c	/^static Char *pvs_context_dir=0;$/;"	v	file:
pvs_do_leibnitz	module/pvs.c	/^static int pvs_do_leibnitz=0;$/;"	v	file:
pvs_get_templates	module/pvs.c	/^static void pvs_get_templates(void)$/;"	f	file:
pvs_hint_file	module/pvs.c	/^static Char *pvs_hint_file=0;$/;"	v	file:
pvs_in_checker	module/pvs.c	/^static int pvs_in_checker=0;$/;"	v	file:
pvs_lemma_name	module/pvs.c	/^static Char *pvs_lemma_name=0;$/;"	v	file:
pvs_open_pvs_files	module/pvs.c	/^static int pvs_open_pvs_files=0;$/;"	v	file:
pvs_parse	module/pvs.c	/^int pvs_parse(unsigned char *buffer, unsigned int *len)$/;"	f
pvs_parse_prove	module/pvs.c	/^int pvs_parse_prove(unsigned char *buffer, unsigned int *len)$/;"	f
pvs_parse_result	module/pvs.c	/^void pvs_parse_result(char *pvs_result)$/;"	f
pvs_parse_string	module/pvsparse.c	/^int pvs_parse_string(char *str)$/;"	f
pvs_send_answer	module/pvs.c	/^static void pvs_send_answer(void *data, int n)$/;"	f	file:
pvs_start	module/pvs.c	/^void pvs_start(Char *title)$/;"	f
pvs_start_proof	module/pvs.c	/^static void pvs_start_proof(PVSProof *proof)$/;"	f	file:
pvs_stencil_file	module/pvs.c	/^static Char *pvs_stencil_file=0;$/;"	v	file:
pvs_temporary_file	module/pvs.c	/^PVSProof *pvs_temporary_file(int nr, FILE **f)$/;"	f
pvs_use_result	module/pvs.c	/^void pvs_use_result(char *pvs_result, int forward)$/;"	f
pvs_yyalloc	module/pvsparse.c	/^union pvs_yyalloc$/;"	u	file:
pvs_yyback	module/pvsparse.c	/^int pvs_yyback(int *p, int m)$/;"	f
pvs_yybgin	module/pvsparse.c	/^struct pvs_yysvf *pvs_yybgin = pvs_yysvec+1;$/;"	v	typeref:struct:pvs_yysvf
pvs_yychar	module/pvsparse.c	/^int pvs_yychar;$/;"	v
pvs_yycheck	module/pvsparse.c	/^static const unsigned char pvs_yycheck[] =$/;"	v	file:
pvs_yycrank	module/pvsparse.c	/^struct pvs_yywork { unsigned char verify, advance; } pvs_yycrank[] = {$/;"	v	typeref:struct:pvs_yywork
pvs_yydefact	module/pvsparse.c	/^static const unsigned char pvs_yydefact[] =$/;"	v	file:
pvs_yydefgoto	module/pvsparse.c	/^static const pvs_yysigned_char pvs_yydefgoto[] =$/;"	v	file:
pvs_yydestruct	module/pvsparse.c	/^pvs_yydestruct (int pvs_yytype, YYSTYPE *pvs_yyvaluep)$/;"	f	file:
pvs_yyerror	module/pvsparse.c	/^int pvs_yyerror(char *c)$/;"	f
pvs_yyestate	module/pvsparse.c	/^struct pvs_yysvf *pvs_yyestate;$/;"	v	typeref:struct:pvs_yysvf
pvs_yyextra	module/pvsparse.c	/^char pvs_yyextra[] = {$/;"	v
pvs_yyfnd	module/pvsparse.c	/^int *pvs_yyfnd;$/;"	v
pvs_yyin	module/pvsparse.c	/^FILE *pvs_yyin = 0, *pvs_yyout = 0;$/;"	v
pvs_yyinput	module/pvsparse.c	/^int pvs_yyinput(void)$/;"	f
pvs_yyleng	module/pvsparse.c	/^int pvs_yyleng;$/;"	v
pvs_yylex	module/pvsparse.c	/^pvs_yylex(){$/;"	f
pvs_yylineno	module/pvsparse.c	/^int pvs_yylineno =1;$/;"	v
pvs_yylook	module/pvsparse.c	/^int pvs_yylook(void)$/;"	f
pvs_yylsp	module/pvsparse.c	/^struct pvs_yysvf *pvs_yylstate [8192], **pvs_yylsp, **pvs_yyolsp;$/;"	v	typeref:struct:
pvs_yylstate	module/pvsparse.c	/^struct pvs_yysvf *pvs_yylstate [8192], **pvs_yylsp, **pvs_yyolsp;$/;"	v	typeref:struct:pvs_yysvf
pvs_yylval	module/pvsparse.c	/^YYSTYPE pvs_yylval;$/;"	v
pvs_yymatch	module/pvsparse.c	/^char pvs_yymatch[] = {$/;"	v
pvs_yymorfg	module/pvsparse.c	/^int pvs_yymorfg;$/;"	v
pvs_yynerrs	module/pvsparse.c	/^int pvs_yynerrs;$/;"	v
pvs_yyolsp	module/pvsparse.c	/^struct pvs_yysvf *pvs_yylstate [8192], **pvs_yylsp, **pvs_yyolsp;$/;"	v	typeref:struct:
pvs_yyother	module/pvsparse.c	/^ struct pvs_yysvf *pvs_yyother;$/;"	m	struct:pvs_yysvf	typeref:struct:pvs_yysvf::pvs_yysvf	file:
pvs_yyout	module/pvsparse.c	/^FILE *pvs_yyin = 0, *pvs_yyout = 0;$/;"	v
pvs_yyoutput	module/pvsparse.c	/^void pvs_yyoutput(int c)$/;"	f
pvs_yypact	module/pvsparse.c	/^static const pvs_yysigned_char pvs_yypact[] =$/;"	v	file:
pvs_yyparse	module/pvsparse.c	/^pvs_yyparse (void)$/;"	f
pvs_yypgoto	module/pvsparse.c	/^static const pvs_yysigned_char pvs_yypgoto[] =$/;"	v	file:
pvs_yyprevious	module/pvsparse.c	/^int pvs_yyprevious = 10;$/;"	v
pvs_yyr1	module/pvsparse.c	/^static const unsigned char pvs_yyr1[] =$/;"	v	file:
pvs_yyr2	module/pvsparse.c	/^static const unsigned char pvs_yyr2[] =$/;"	v	file:
pvs_yysbuf	module/pvsparse.c	/^char pvs_yysbuf[8192];$/;"	v
pvs_yysigned_char	module/pvsparse.c	/^   typedef signed char pvs_yysigned_char;$/;"	t	file:
pvs_yysptr	module/pvsparse.c	/^char *pvs_yysptr = pvs_yysbuf;$/;"	v
pvs_yyss	module/pvsparse.c	/^  short pvs_yyss;$/;"	m	union:pvs_yyalloc	file:
pvs_yystoff	module/pvsparse.c	/^ struct pvs_yywork *pvs_yystoff;$/;"	m	struct:pvs_yysvf	typeref:struct:pvs_yysvf::pvs_yywork	file:
pvs_yystops	module/pvsparse.c	/^ int *pvs_yystops;};$/;"	m	struct:pvs_yysvf	file:
pvs_yystos	module/pvsparse.c	/^static const unsigned char pvs_yystos[] =$/;"	v	file:
pvs_yysvec	module/pvsparse.c	/^struct pvs_yysvf pvs_yysvec[] = {$/;"	v	typeref:struct:pvs_yysvf
pvs_yysvf	module/pvsparse.c	/^struct pvs_yysvf {$/;"	s	file:
pvs_yytable	module/pvsparse.c	/^static const unsigned char pvs_yytable[] =$/;"	v	file:
pvs_yytchar	module/pvsparse.c	/^int pvs_yytchar;$/;"	v
pvs_yytext	module/pvsparse.c	/^char pvs_yytext[8192];$/;"	v
pvs_yytokentype	module/pvsparse.c	/^   enum pvs_yytokentype {$/;"	g	file:
pvs_yytop	module/pvsparse.c	/^struct pvs_yywork *pvs_yytop = pvs_yycrank+314;$/;"	v	typeref:struct:pvs_yywork
pvs_yytranslate	module/pvsparse.c	/^static const unsigned char pvs_yytranslate[] =$/;"	v	file:
pvs_yyunput	module/pvsparse.c	/^void pvs_yyunput(int c)$/;"	f
pvs_yyvs	module/pvsparse.c	/^  YYSTYPE pvs_yyvs;$/;"	m	union:pvs_yyalloc	file:
pvs_yyvstop	module/pvsparse.c	/^int pvs_yyvstop[] = {$/;"	v
pvs_yywork	module/pvsparse.c	/^struct pvs_yywork { unsigned char verify, advance; } pvs_yycrank[] = {$/;"	s	file:
pvshiddenstep	module/pvs.c	/^static unsigned long pvshiddenstep=1234567890UL;$/;"	v	file:
pvsinput	module/pvs.c	/^  char *pvsinput;        \/* input to be send to pvs *\/$/;"	m	struct:ProofStep	file:
pvsmessage	module/pvs.c	/^} pvsmessage[] = {$/;"	v	typeref:struct:__anon15	file:
pwin_id	windows/sources.c	/^    Window win_id, pwin_id;$/;"	m	struct:__anon82	file:
pwt	windows/events.c	/^static WINDOWTYPE wt=NOWINDOW, pwt=NOWINDOW;$/;"	v	file:
qsortintstrcmp	util/funcs.c	/^static int qsortintstrcmp(const void *e1, const void *e2)$/;"	f	file:
quad_t	module/pvsparse.c	/^typedef __quad_t quad_t;$/;"	t	file:
quarterword	tools/pktobdf.c	/^typedef unsigned char quarterword ;$/;"	t	file:
quit_sequence	windows/menu.c	/^int quit_sequence = MP_False;$/;"	v
quot	module/pvsparse.c	/^    int quot;$/;"	m	struct:__anon16	file:
quot	module/pvsparse.c	/^    long int quot;$/;"	m	struct:__anon17	file:
raise	treeedit/select.cc	/^void Select::raise()$/;"	f	class:Select
raise_node	treeedit/editor.cc	/^void raise_node(void)$/;"	f
rand_deg	module/pvsparse.c	/^    int rand_deg;$/;"	m	struct:random_data	file:
rand_sep	module/pvsparse.c	/^    int rand_sep;$/;"	m	struct:random_data	file:
rand_type	module/pvsparse.c	/^    int rand_type;$/;"	m	struct:random_data	file:
random_data	module/pvsparse.c	/^struct random_data$/;"	s	file:
range	unicode/unifont.c	/^    RANGEREC *range;$/;"	m	struct:FONTREC	file:
range	unicode/virtread.c	/^    RANGEREC *range;$/;"	m	struct:FONTREC	file:
rangebuffer	unicode/unifontX11.c	/^static char rangebuffer[1024];$/;"	v	file:
rangebuffer	unicode/unifontsys.c	/^static char rangebuffer[1024];$/;"	v	file:
rangelist	unicode/unifont.c	/^static RANGEREC *rangelist=NULL;$/;"	v	file:
rangelist	unicode/virtread.c	/^static RANGEREC *rangelist=NULL;$/;"	v	file:
ranges	unicode/unifont.c	/^    int *ranges;  \/* list of pairs of integers, (start, end)*  *\/$/;"	m	struct:RANGEREC	file:
ranges	unicode/virtread.c	/^    int *ranges;  \/* list of pairs of integers, (start, end)*  *\/$/;"	m	struct:RANGEREC	file:
read_all_notations	templates/notatype.c	/^static Bool read_all_notations(int fnr, FILE *f)$/;"	f	file:
read_dir_contents	util/funcs.c	/^int read_dir_contents(Char *dirname, Bool only_files,$/;"	f
read_file	documents/fileread.c	/^int read_file(FILE *f, int ftype)$/;"	f
read_fontpart	windows/fonts.c	/^static int read_fontpart(FILE *f, FONTINFO finf[MAXFONTS])$/;"	f	file:
read_input	tools/xpipein.c	/^static void read_input(void)$/;"	f	file:
read_integer	windows/fonts.c	/^static int read_integer(char **txt)$/;"	f	file:
read_integer	windows/sources.c	/^static int read_integer(char **txt)$/;"	f	file:
read_integer_short	windows/fonts.c	/^static int read_integer_short(char **txt)$/;"	f	file:
read_integer_short	windows/sources.c	/^static int read_integer_short(char **txt)$/;"	f	file:
read_string	unicode/brows.c	/^void read_string(char *fname)$/;"	f
read_string	unicode/convert.c	/^void read_string(char *fname)$/;"	f
readcom	util/filefind.c	/^  char *readcom;  \/* read command for pipes (%s indicates full filename) *\/$/;"	m	struct:__anon63	file:
realconsts	language/variable.c	/^static LeafTree realconsts = { 0, argreal_cmp, 0, sizeof(Argument) };$/;"	v	file:
realloc	include/memman.h	46;"	d
realloc_check	util/memman.c	/^static int realloc_check(void *p, size_t size)$/;"	f	file:
realloc_check	util/memman.c	354;"	d	file:
recalc_at_line	treeedit/editwindow.cc	/^void EditWindow::recalc_at_line()$/;"	f	class:EditWindow
recalc_lineheight	treeedit/editwindow.cc	/^void EditWindow::recalc_lineheight()$/;"	f	class:EditWindow
recenter	treeedit/editor.cc	/^void recenter(void)$/;"	f
recenter	treeedit/editwindow.cc	/^void EditWindow::recenter(const Mark& rm)$/;"	f	class:EditWindow
recenter	treeedit/select.cc	/^void Select::recenter()$/;"	f	class:Select
reconnect	windows/notadef.c	/^static void reconnect(int vnr, int fmnr)$/;"	f	file:
record	language/types.c	/^	void *record;$/;"	m	union:__anon2::__anon3	file:
redraw_between	treeedit/editwindow.cc	/^void EditWindow::redraw_between(int ystart, int yend)$/;"	f	class:EditWindow
redraw_cursor	treeedit/editwindow.cc	/^void EditWindow::redraw_cursor(Select* sl, Cpfv pf)$/;"	f	class:EditWindow
redraw_cursor_noxor	treeedit/editwindow.cc	/^void EditWindow::redraw_cursor_noxor(Select* sl, Cpfv pf)$/;"	f	class:EditWindow
redraw_cursor_xor	treeedit/editwindow.cc	/^void EditWindow::redraw_cursor_xor(Select* sl, Cpfv pf)$/;"	f	class:EditWindow
redraw_end_page	treeedit/editwindow.cc	/^void EditWindow::redraw_end_page(int nr)$/;"	f	class:EditWindow
redraw_full	treeedit/editwindow.cc	/^void EditWindow::redraw_full()$/;"	f	class:EditWindow
redraw_line	treeedit/editwindow.cc	/^void EditWindow::redraw_line(int nr)$/;"	f	class:EditWindow
redraw_move	windows/notation.c	/^static void redraw_move(int newanrsel)$/;"	f	file:
redraw_newlines	treeedit/editor.cc	/^static void redraw_newlines(Bool removed)$/;"	f	file:
redraw_notation	windows/notation.c	/^static void redraw_notation(NOTATIONINFO *ninf, int kind,int anr)$/;"	f	file:
redraw_rectangle	windows/scrollbar.c	/^static void redraw_rectangle(SCROLLBARINFO *sbi)$/;"	f	file:
redraw_remark_lines	windows/remark.c	/^static void redraw_remark_lines(void)$/;"	f	file:
redraw_selection	treeedit/editor.cc	/^void redraw_selection(void *selection)$/;"	f
redraw_window	treeedit/editor.cc	/^void redraw_window(void* w)$/;"	f
reduce_freelist	util/memman.c	/^static void reduce_freelist(FreeList *fl, int len)$/;"	f	file:
refcall	language/prototype.c	/^static int refcall(int (*fcal)(), void **args)$/;"	f	file:
refcount	windows/sources.c	/^  int refcount;$/;"	m	struct:__anon81	file:
refcount_break	util/refcounting.c	/^static void refcount_break(int i)$/;"	f	file:
refelems	util/refcounting.c	/^static FreeList refelems= FreeListWithBlockSize(sizeof(RefElem));$/;"	v	file:
refext	language/types.c	/^static char *refext="Ref";$/;"	v	file:
refextlen	language/types.c	/^static int refextlen=3;$/;"	v	file:
refresh_all	windows/sources.c	/^void refresh_all(void)$/;"	f
refsum	windows/sources.c	/^static int refsum=0;$/;"	v	file:
regis	include/memman.h	/^  int regis;   \/* a magic number for the memory manager *\/$/;"	m	struct:__anon53
regis	module/pvsparse.c	/^  int regis;$/;"	m	struct:__anon33	file:
register_t	module/pvsparse.c	/^typedef int register_t __attribute__ ((__mode__ (__word__)));$/;"	t	file:
rehash_pathinfo	util/filefind.c	/^void rehash_pathinfo(PathInfo pinfo)$/;"	f
rehash_translang	util/translate.c	/^static void rehash_translang(TransLang *transl)$/;"	f	file:
release	include/sources.h	/^    void (*release)(void*, XButtonEvent*);$/;"	m	struct:__anon41
release_time	windows/sources.c	/^unsigned long press_time = 0, drag_time = 0, release_time = 0;$/;"	v
rem	module/pvsparse.c	/^    int rem;$/;"	m	struct:__anon16	file:
rem	module/pvsparse.c	/^    long int rem;$/;"	m	struct:__anon17	file:
remalloc	include/memman.h	37;"	d
remap_button	windows/scrollbar.c	79;"	d	file:
remaplist	unicode/unifont.c	/^static REMAPREC *remaplist=NULL;$/;"	v	file:
remaptable	unicode/unifont.c	/^static int *remaptable=0;$/;"	v	file:
remark_attr	windows/remark.c	/^static XSetWindowAttributes remark_attr;$/;"	v	file:
remark_bad_end	windows/remark.c	/^static void remark_bad_end(void *data __attribute__((unused)))$/;"	f	file:
remark_draw	windows/remark.c	/^static void remark_draw(void *data __attribute__((unused)))$/;"	f	file:
remark_handle_button	windows/remark.c	/^static void remark_handle_button(void *data __attribute__((unused)), int bnr)$/;"	f	file:
remark_iconized	documents/system.c	/^    remark_iconized = 0;$/;"	v
remark_init	windows/remark.c	/^void remark_init(void)$/;"	f
remark_is_open	documents/system.c	/^    remark_is_open = 0,$/;"	v
remark_make	windows/remark.c	/^int remark_make(Window mwin, void* info, void (*func)(void*,int), int where,$/;"	f
remark_map	windows/remark.c	/^static void remark_map(void)$/;"	f	file:
remark_mask	windows/remark.c	/^static unsigned long remark_mask;$/;"	v	file:
remark_motion	windows/remark.c	/^static void remark_motion(void *data __attribute__((unused)), int x, int y)$/;"	f	file:
remark_no_button	windows/remark.c	/^Bool remark_no_button = MP_False;$/;"	v
remark_press	windows/remark.c	/^static void remark_press(void *data, XButtonEvent *event)$/;"	f	file:
remark_raise	windows/remark.c	/^void remark_raise(void)$/;"	f
remark_release	windows/remark.c	/^static void remark_release(void *data __attribute__((unused)), XButtonEvent *event __attribute__((unused)))$/;"	f	file:
remark_removable	windows/remark.c	/^Bool remark_removable(void)$/;"	f
remark_scrollto	windows/remark.c	/^static void remark_scrollto(void *data __attribute__((unused)), int kind __attribute__((unused)))$/;"	f	file:
remark_text	windows/notation.c	/^static char *remark_text = NULL;$/;"	v	file:
remark_unmap	windows/remark.c	/^void remark_unmap(void)$/;"	f
remark_win	windows/remark.c	/^static Window remark_win = 0, main_win = 0;$/;"	v	file:
remarkfuncs	windows/remark.c	/^FUNCTIONS remarkfuncs = {$/;"	v
remove	treeedit/node.cc	/^Bool Node::remove(Index begin, Index end)$/;"	f	class:Node
remove	treeedit/node.cc	/^Bool Node::remove(Index pos, Offset count)$/;"	f	class:Node
remove	treeedit/select.cc	/^Bool Select::remove(Offset count)$/;"	f	class:Select
remove_all_notations	templates/notatype.c	/^static void remove_all_notations(int fnr)$/;"	f	file:
remove_auto_save	windows/edit.c	/^static void remove_auto_save(EDITINFO *einf)$/;"	f	file:
remove_backup	templates/notatype.c	/^static void remove_backup(int fnr)$/;"	f	file:
remove_cursor	windows/output.c	/^void remove_cursor(void)$/;"	f
remove_double	templates/notatype.c	/^void remove_double(void)$/;"	f
remove_double_chars	treeedit/editor.cc	/^void remove_double_chars(void)$/;"	f
remove_double_chars	treeedit/select.cc	/^Bool Select::remove_double_chars()$/;"	f	class:Select
remove_double_file	templates/notatype.c	/^void remove_double_file(int sfnr)$/;"	f
remove_double_template	templates/notatype.c	/^Bool remove_double_template(int innr)$/;"	f
remove_file	util/funcs.c	/^void remove_file(Char *name)$/;"	f
remove_find_stack	treeedit/editor.cc	/^void remove_find_stack(void)$/;"	f
remove_from_stack	windows/getstring.c	/^static void remove_from_stack(STRINGINFO *sinfo)$/;"	f	file:
remove_int	util/intstack.c	/^void remove_int(INTSTACK **s, int nr)$/;"	f
remove_multiple_files	templates/notatype.c	/^void remove_multiple_files(int sfnr)$/;"	f
remove_notation	templates/notatype.c	/^void remove_notation(int fnr, int nr)$/;"	f
remove_old_cursor	windows/getstring.c	/^static void remove_old_cursor(STRINGINFO *sinfo)$/;"	f	file:
remove_pointer	util/debug.c	/^static int remove_pointer(void *p)$/;"	f	file:
remove_pointer	util/memman.c	/^static int remove_pointer(void *p)$/;"	f	file:
remove_pointer	util/memman.c	351;"	d	file:
remove_region	treeedit/editor.cc	/^void remove_region(void)$/;"	f
remove_return	windows/fonts.c	/^static void remove_return(char *str)$/;"	f	file:
remove_search_char	windows/menu.c	/^static void remove_search_char(Index count)$/;"	f	file:
remove_submenus	windows/popup.c	/^static void remove_submenus(MENU *menu)$/;"	f	file:
remove_version	templates/notatype.c	/^void  remove_version(VERSION **list, int place, int *max)$/;"	f
remove_wait_cursor	windows/sources.c	/^void remove_wait_cursor(void)$/;"	f
remove_window	windows/sources.c	/^void *remove_window(Window win)$/;"	f
remove_window_ref	templates/notatype.c	/^static void remove_window_ref(int fnr)$/;"	f	file:
rename	treeedit/node.cc	/^void Node::rename(Index begin, Index end, Char *oldn, int ol,$/;"	f	class:Node
rename	treeedit/select.cc	/^void Select::rename(Select& n, Select& s)$/;"	f	class:Select
rename_id	treeedit/editor.cc	/^void rename_id(void)$/;"	f
rename_notation_file	windows/notation.c	/^static void rename_notation_file(void *data, Char *name)$/;"	f	file:
rename_notation_window	templates/notatype.c	/^void rename_notation_window(int fnr, Char *name)$/;"	f
rep_info	windows/find.c	/^static void *scrollfind, *scrollrep, *find_info, *rep_info;$/;"	v	file:
repdrawwin	windows/find.c	/^static Window findwin, finddrawwin, repdrawwin;$/;"	v	file:
repeatcount	tools/pktobdf.c	/^integer repeatcount ;$/;"	v
replace	treeedit/node.cc	/^Node* Node::replace(Index pos, Node* pn)$/;"	f	class:Node
replace	treeedit/select.cc	/^void Select::replace(Char *oldstr, Char *newstr)$/;"	f	class:Select
replace_all	treeedit/editor.cc	/^void replace_all(Char *oldstr, Char *newstr)$/;"	f
replace_all_call	treeedit/select.cc	/^static int replace_all_call=0;$/;"	v	file:
replace_all_notation	treeedit/editor.cc	/^void replace_all_notation(Index onnr, Index nnnr)$/;"	f
replace_all_tree	treeedit/editor.cc	/^void replace_all_tree()$/;"	f
replace_all_yn	windows/menu.c	/^static void replace_all_yn(void)$/;"	f	file:
replace_lock	windows/popup.c	/^static MENU *replace_lock=NULL;$/;"	v	file:
replace_notation	treeedit/editor.cc	/^void replace_notation(Index onnr, Index nnnr)$/;"	f
replace_notation	treeedit/node.cc	/^Node* Node::replace_notation(Index onnr, Index nnnr)$/;"	f	class:Node
replace_notation	treeedit/select.cc	/^void Select::replace_notation(Index oldnnr, Index newnnr)$/;"	f	class:Select
replace_pointer	util/memman.c	/^static void replace_pointer(void *p, size_t size)$/;"	f	file:
replace_pointer	util/memman.c	353;"	d	file:
replace_stencil	templates/notatype.c	/^static void replace_stencil(NOTATION *a, NOTATION *b, int *remap)$/;"	f	file:
replace_string	treeedit/editor.cc	/^void replace_string(Char *oldstr, Char *newstr)$/;"	f
replace_tree	treeedit/editor.cc	/^void replace_tree()$/;"	f
replace_tree	treeedit/node.cc	/^Node* Node::replace_tree(Node *oldn, Node *newn, Index pos)$/;"	f	class:Node
replace_tree	treeedit/select.cc	/^void Select::replace_tree(Node *oldn, Node *newn)$/;"	f	class:Select
replace_tree_all	treeedit/select.cc	/^void Select::replace_tree_all(Node *oldn, Node *newn)$/;"	f	class:Select
replaceable	templates/notatype.c	/^static Bool replaceable(NOTATION *a, NOTATION *b, int *remap)$/;"	f	file:
replacelen	windows/menu.c	/^static unsigned int searchlen = 0, replacelen = 0, oldsearchlen = 0;$/;"	v	file:
replaces	treeedit/node.cc	/^void Node::replaces(Node* n)$/;"	f	class:Node
replacestr	treeedit/node.cc	/^Node* Node::replacestr(Char *oldstr, const Index n, Char *newstr,$/;"	f	class:Node
replacestr	windows/menu.c	/^static Char searchstr[MAXLEN], replacestr[MAXLEN], oldsearchstr[MAXLEN];$/;"	v	file:
replacewindow	treeedit/editor.cc	/^EditWindow& replacewindow()$/;"	f
report	windows/events.c	/^static XEvent report;$/;"	v	file:
reselect	windows/fileselc.c	/^static int reselect(Char **c, int oldsel, int newsel, int start, int end)$/;"	f	file:
reselect	windows/popup.c	/^static void reselect(MENU *m, int newsel)$/;"	f	file:
reset_lines	windows/notadef.c	/^static void reset_lines(void)$/;"	f	file:
reset_map	windows/menu.c	/^static void reset_map(void)$/;"	f	file:
reset_spacing	treeedit/editor.cc	/^void reset_spacing(void)$/;"	f
reset_spacing	treeedit/node.cc	/^void Node::reset_spacing()$/;"	f	class:Node
reset_spacing	treeedit/select.cc	/^void Select::reset_spacing()$/;"	f	class:Select
resettabs	windows/output.c	/^static void resettabs(void)$/;"	f	file:
reshuffle	util/reshuffle.c	/^int reshuffle(int len, int *direct, void **item)$/;"	f
resize_window	treeedit/editor.cc	/^void resize_window(void* w, unsigned int sx, unsigned int sy)$/;"	f
resolution	tools/pktobdf.c	/^integer resolution=75;$/;"	v
resolve_key	keyboard/keyboard.c	/^static Key *resolve_key(KeyMap *map, KeyNum key, KeyMode mode,$/;"	f	file:
restore	treeedit/select.cc	/^void Select::restore(Mark m1, Mark m2)$/;"	f	class:Select
restore	treeedit/select.cc	/^void Select::restore(const Mark& m)$/;"	f	class:Select
restore_fattrib	windows/output.c	/^static void restore_fattrib(int attrib)$/;"	f	file:
restype	include/expression.h	/^    Type restype;       \/* the result type of this expression *\/$/;"	m	struct:Expression
restype	include/prototype.h	/^    Type restype;$/;"	m	struct:__anon39
restype	language/expression.c	/^  Type restype;      \/* String            Int *\/$/;"	m	struct:OpStruct	file:
restype	language/function.c	/^    Type restype;         \/* type of the result, passed as an argument *\/ $/;"	m	struct:__anon1	file:
restype_function	language/function.c	/^Type restype_function(FuncRef function)$/;"	f
restype_user_function	language/userdef.c	/^Type restype_user_function(FuncRef function)$/;"	f
result	module/pvs.c	/^  char *result;          \/* the PVS result after appliing the step *\/$/;"	m	struct:ProofStep	file:
ret_func	windows/fileselc.c	/^    void (*ret_func)(void *,Char*);$/;"	m	struct:__anon71	file:
rettype	include/types.h	/^    Type rettype;    \/* return type *\/$/;"	m	struct:__anon58
rettype	language/userdef.c	/^    Type rettype;$/;"	m	struct:__anon5	file:
rettype	windows/editlib.c	/^  Type rettype;$/;"	m	struct:__anon86	file:
return_func	windows/remark.c	/^static void (*return_func)(void*, int);$/;"	v	file:
return_info	windows/remark.c	/^static void *return_info;$/;"	v	file:
return_pressed	windows/remark.c	/^static void return_pressed(void)$/;"	f	file:
retval	templates/match.c	/^    int retval;$/;"	m	struct:__anon37	file:
right	include/leaftree.h	/^    BreanchNode *right;$/;"	m	struct:bnode
right	treeedit/editwindow.hh	/^    Return *right;$/;"	m	class:Return
right	treeedit/node.cc	/^Node * Node::right() const$/;"	f	class:Node
right	util/debug.c	/^    lfptr right;$/;"	m	struct:ltnode	file:
right	util/memman.c	/^    lfptr right;$/;"	m	struct:ltnode	file:
right_of	treeedit/node.cc	/^Node* Node::right_of(Index pos)$/;"	f	class:Node
rightleft	include/popupmenu.h	/^  int rightleft;$/;"	m	struct:PopupMenu
rlist	templates/match.c	/^    RULE *rlist;$/;"	m	struct:ParseLeaf	file:
rmin	language/leaftree.c	/^static void* rmin;$/;"	v	file:
rmin	util/leaftree.c	/^static void* rmin;$/;"	v	file:
root	treeedit/editwindow.hh	/^    Node* root;$/;"	m	class:EditWindow
root_window	windows/sources.c	/^Window root_window;$/;"	v
rootdir	util/filefind.c	/^static DirInfo rootdir= { "", 0, 0 };$/;"	v	file:
rotate	language/leaftree.c	/^static BreanchNode* rotate(BreanchNode* t)$/;"	f	file:
rotate	util/leaftree.c	/^static BreanchNode* rotate(BreanchNode* t)$/;"	f	file:
rotatebuffer	unicode/unistring.c	/^static RotateBuffer rotatebuffer[UNISTRING_ROTATE_MAX];$/;"	v	file:
rotatecount	unicode/unistring.c	/^static int rotatecount=0;$/;"	v	file:
round	tools/pktobdf.c	19;"	d	file:
rows	windows/menu.c	/^static int rows[NR_ROWS] = { NR_BUTTON };$/;"	v	file:
rows	windows/symbol.c	/^  int rows;       \/* number of rows *\/$/;"	m	struct:SYMBOLPAGE	file:
rptr	module/pvsparse.c	/^    int32_t *rptr;$/;"	m	struct:random_data	file:
rref	include/types.h	/^  double *rref;  \/* for referenced float types  *\/$/;"	m	union:__anon56
rrot	language/leaftree.c	/^static BreanchNode* rrot(BreanchNode* t)$/;"	f	file:
rrot	util/leaftree.c	/^static BreanchNode* rrot(BreanchNode* t)$/;"	f	file:
rtab	windows/output.c	/^static void rtab(void)$/;"	f	file:
rtype	templates/match.c	/^    int rtype;$/;"	m	struct:RULE	file:
rubadd	language/typetest.c	/^static void rubadd(RubRef i, RubRef j, RubRef *res)$/;"	f	file:
rubtype	language/typetest.c	/^static Type rubtype;$/;"	v	file:
rule	templates/match.c	/^    RULE *rule;$/;"	m	struct:PARRULE	file:
run_callbackfunc	windows/menu.c	/^static void run_callbackfunc(void *data, Char *name)$/;"	f	file:
run_sequence	language/sequence.c	/^int run_sequence(Sequence *seq)$/;"	f
rval	include/types.h	/^  double rval;   \/* for float  types      *\/$/;"	m	union:__anon56
rval	language/parse.c	/^	double rval;$/;"	m	union:__anon14	file:
s	treeedit/editwindow.cc	/^Mark& EditWindow::s()$/;"	f	class:EditWindow
samename	include/notatype.h	/^	  int samename;$/;"	m	struct:__anon48
save	treeedit/editwindow.cc	/^void EditWindow::save()$/;"	f	class:EditWindow
save	treeedit/node.cc	/^void Node::save()$/;"	f	class:Node
save_defaults	windows/sources.c	/^void save_defaults(void)$/;"	f
save_editwindow	treeedit/editor.cc	/^void save_editwindow(void* w)$/;"	f
save_file	windows/notation.c	/^static Char *save_file=NULL;$/;"	v	file:
save_minute	windows/sources.c	/^int save_minute = 20;$/;"	v
save_name	windows/notation.c	/^static Char* save_name=NULL;$/;"	v	file:
save_notation_window	templates/notatype.c	/^void save_notation_window(int fnr, Char *filename)$/;"	f
save_nr	windows/notation.c	/^static int save_nr = 0;$/;"	v	file:
save_project	windows/sources.c	/^void save_project(Char *name)$/;"	f
save_project_name	windows/menu.c	/^static void save_project_name(void *data __attribute__((unused)), Char *c)$/;"	f	file:
save_project_wrap	windows/menu.c	/^static void save_project_wrap(Char *name)$/;"	f	file:
save_stencil	templates/notatype.c	/^int save_stencil(Index innr)$/;"	f
save_time	windows/sources.c	/^unsigned long save_time = 0;$/;"	v
saved	include/notatype.h	/^	  int saved, autosaved;$/;"	m	struct:__anon48
saved	windows/edit.c	/^                 Bool saved, iconized, auto_saved, view_mode, empty,$/;"	m	struct:__anon69	file:
saved_chars	windows/output.c	/^int saved_chars = 0;$/;"	v
saved_notation_file	templates/notatype.c	/^void saved_notation_file(int fnr)$/;"	f
savelist	templates/notatype.c	/^static FlexArray savelist;$/;"	v	file:
saveonexit	documents/system.c	/^    saveonexit=0,$/;"	v
saveponquit	windows/default.c	/^static int saveponquit=0;$/;"	v	file:
savestack	windows/output.c	/^static INTSTACK *savestack=NULL;$/;"	v	file:
sb_size	windows/scrollbar.c	/^           int startpix, sizepix, sb_size, nr_lines,$/;"	m	struct:__anon91	file:
scope_count	language/variable.c	/^static int scope_count=0;$/;"	v	file:
scr_ntnlfunc	windows/notadef.c	/^static void scr_ntnlfunc(Char j)$/;"	f	file:
scr_nwlnfunc	windows/notadef.c	/^static void scr_nwlnfunc(Char j)$/;"	f	file:
scratchwindow	treeedit/editor.cc	/^EditWindow& scratchwindow()$/;"	f
screen	unicode/brows.c	/^static int screen;$/;"	v	file:
screen_num	windows/sources.c	/^int screen_num;$/;"	v
screen_space	documents/system.c	/^    screen_space = 1,$/;"	v
screen_tab	documents/system.c	/^    screen_tab = 20,$/;"	v
scroll_down	treeedit/editor.cc	/^void scroll_down(Index n)$/;"	f
scroll_down	treeedit/editwindow.cc	/^void EditWindow::scroll_down(Index n)$/;"	f	class:EditWindow
scroll_up	treeedit/editor.cc	/^void scroll_up(Index n)$/;"	f
scroll_up	treeedit/editwindow.cc	/^void EditWindow::scroll_up(Index n)$/;"	f	class:EditWindow
scrollbar	windows/remark.c	/^static void *scrollbar = NULL;$/;"	v	file:
scrollbar_attr	windows/scrollbar.c	/^static XSetWindowAttributes scrollbar_attr;$/;"	v	file:
scrollbar_draw	windows/scrollbar.c	/^static void scrollbar_draw(void *data)$/;"	f	file:
scrollbar_init	windows/scrollbar.c	/^void scrollbar_init(void)$/;"	f
scrollbar_line	windows/scrollbar.c	/^int scrollbar_line(void *data, int delta)$/;"	f
scrollbar_linesize	windows/scrollbar.c	/^void scrollbar_linesize(void *data, int newsize)$/;"	f
scrollbar_make	windows/scrollbar.c	/^void *scrollbar_make(int kind, Window parent, int x_offset, int y_offset,$/;"	f
scrollbar_mask	windows/scrollbar.c	/^static unsigned long scrollbar_mask;$/;"	v	file:
scrollbar_motion	windows/scrollbar.c	/^static void scrollbar_motion(void *data, int x_pos, int y_pos)$/;"	f	file:
scrollbar_move	windows/scrollbar.c	/^void scrollbar_move(void *data, int xpos, int ypos)$/;"	f
scrollbar_press	windows/scrollbar.c	/^static void scrollbar_press(void *data, XButtonEvent *event)$/;"	f	file:
scrollbar_release	windows/scrollbar.c	/^static void scrollbar_release(void *data, XButtonEvent *event __attribute__((unused)))$/;"	f	file:
scrollbar_resize	windows/scrollbar.c	/^void scrollbar_resize(void *data, unsigned int newsize)$/;"	f
scrollbar_set	windows/scrollbar.c	/^void scrollbar_set(void *data, int f_line, int total_lines)$/;"	f
scrollbarfuncs	windows/scrollbar.c	/^FUNCTIONS scrollbarfuncs = {$/;"	v
scrolldir	windows/fileselc.c	/^    void *scrolldir;$/;"	m	struct:__anon71	file:
scrollfile	windows/fileselc.c	/^    void *scrollfile;$/;"	m	struct:__anon71	file:
scrollfind	windows/find.c	/^static void *scrollfind, *scrollrep, *find_info, *rep_info;$/;"	v	file:
scrollhor	windows/buffer.c	/^static void *scrollver, *scrollhor, *buffer_info;$/;"	v	file:
scrollhor	windows/edit.c	/^                 void *scrollver, *scrollhor;    \/* gegevens van scrollbars *\/$/;"	m	struct:__anon69	file:
scrollrep	windows/find.c	/^static void *scrollfind, *scrollrep, *find_info, *rep_info;$/;"	v	file:
scrollver	windows/buffer.c	/^static void *scrollver, *scrollhor, *buffer_info;$/;"	v	file:
scrollver	windows/edit.c	/^                 void *scrollver, *scrollhor;    \/* gegevens van scrollbars *\/$/;"	m	struct:__anon69	file:
scrollver	windows/notadef.c	/^static void *scrollver = NULL;$/;"	v	file:
scrollver	windows/notation.c	/^    void *scrollver;$/;"	m	struct:__anon74	file:
search	treeedit/editwindow.cc	/^Bool EditWindow::search;$/;"	m	class:EditWindow	file:
search	treeedit/editwindow.hh	/^    static Bool search;$/;"	m	class:EditWindow
search	treeedit/node.cc	/^Node* Node::search(Index prec, Opkind k)$/;"	f	class:Node
search_file	util/filefind.c	/^char *search_file(PathInfo pinfo, char *name, int *ftype)$/;"	f
search_func	windows/output.c	/^static void (*search_func)(void*) = NULL;$/;"	v	file:
search_label	treeedit/node.cc	/^Mark Node::search_label(Char *str)$/;"	f	class:Node
search_new_version	treeedit/node.cc	/^Offset Node::search_new_version()$/;"	f	class:Node
search_result	util/funcs.c	/^static Char search_result[1000];$/;"	v	file:
search_status	windows/menu.c	/^static int search_status = SEARCH;$/;"	v	file:
search_through_dirs	util/funcs.c	/^Char *search_through_dirs(Char **dirs, int nr, Char *filename)$/;"	f
search_x	windows/output.c	/^static int search_x, search_y;$/;"	v	file:
search_y	windows/output.c	/^static int search_x, search_y;$/;"	v	file:
searching	windows/menu.c	/^static Bool searching = MP_False;$/;"	v	file:
searchlen	windows/menu.c	/^static unsigned int searchlen = 0, replacelen = 0, oldsearchlen = 0;$/;"	v	file:
searchstr	windows/menu.c	/^static Char searchstr[MAXLEN], replacestr[MAXLEN], oldsearchstr[MAXLEN];$/;"	v	file:
secure	output/latexout.c	/^            secure, setms;$/;"	v	file:
sel_func	treeedit/editwindow.cc	/^void EditWindow::sel_func(void *data)$/;"	f	class:EditWindow
sel_pos	treeedit/editwindow.cc	/^Mark& EditWindow::sel_pos()$/;"	f	class:EditWindow
select_all	treeedit/select.cc	/^void Select::select_all(void)$/;"	f	class:Select
select_line	treeedit/select.cc	/^Bool Select::select_line(Mark& s, Mark& e)$/;"	f	class:Select
select_line	windows/remark.c	/^Bool select_line = MP_False;$/;"	v
select_mode	treeedit/select.cc	/^static int select_mode=0;$/;"	v	file:
select_path	treeedit/select.cc	/^int  Select::select_path(const Select &sub, int *list, int max)$/;"	f	class:Select
select_sym	windows/symbol.c	/^static Char select_sym = 0;$/;"	v	file:
select_window	windows/sources.c	/^static Window select_window = 0;$/;"	v	file:
selected	windows/symbol.c	/^static SYMBOLINFO *selected=0;$/;"	v	file:
selected_file	windows/menu.c	/^static Char *selected_file=NULL;$/;"	v	file:
selected_line	windows/remark.c	/^int selected_line = -1;$/;"	v
selected_notation	treeedit/editor.cc	/^int selected_notation(int selnr, Offset *vnr)$/;"	f
selection	module/pvs.c	/^  void *selection;$/;"	m	struct:PVSProof	file:
selection	windows/notadef.c	/^         int selection, nr_items, def, x, max, helpnr;$/;"	m	struct:__anon88	file:
selection_use_xor	treeedit/editor.cc	/^void selection_use_xor(Bool value)$/;"	f
selline	include/popup.h	/^  int selline;$/;"	m	struct:MENU
selx	windows/symbol.c	/^static int offset_x, offset_y, selx, sely;$/;"	v	file:
sely	windows/symbol.c	/^static int offset_x, offset_y, selx, sely;$/;"	v	file:
send_selection	windows/sources.c	/^void send_selection(XSelectionRequestEvent *event)$/;"	f
seq_assign	language/sequence.c	/^Sequence *seq_assign(int nr, Argument *alist, Expression *elist)$/;"	f
seq_do_statement	language/sequence.c	/^Sequence *seq_do_statement(Expression *expr,$/;"	f
seq_elsedo	language/sequence.c	/^Sequence *seq_elsedo(Sequence *dops, Sequence *dope,$/;"	f
seq_elseif	language/sequence.c	/^Sequence *seq_elseif(Sequence *ifps, Sequence *ifpe,$/;"	f
seq_empty	language/sequence.c	/^Sequence *seq_empty(void)$/;"	f
seq_expression	language/sequence.c	/^Sequence *seq_expression(Expression *expr)$/;"	f
seq_if_statement	language/sequence.c	/^Sequence *seq_if_statement(Expression *expr,$/;"	f
seqcount	keyboard/keyboard.c	/^static seqcount=0;$/;"	v	file:
sequence	language/parse.y	/^sequence    :	statement$/;"	l
sequence	language/userdef.c	/^    Sequence *sequence;  \/* sequence of functions to call *\/$/;"	m	struct:__anon5	file:
seqval	language/parse.c	/^	Sequence *seqval;$/;"	m	union:__anon14	file:
server_close	windows/sources.c	/^void server_close(void)$/;"	f
server_init	tools/xpipein.c	/^static void server_init(void)$/;"	f	file:
server_init	tools/xpipeout.c	/^static void server_init(void)$/;"	f	file:
server_init	windows/sources.c	/^void server_init(void)$/;"	f
set_base	treeedit/editwindow.hh	/^    void set_base(Node *n) { root=n; }$/;"	f	class:EditWindow
set_begin	treeedit/select.cc	/^void Select::set_begin()$/;"	f	class:Select
set_center	treeedit/editwindow.cc	/^void EditWindow::set_center(Mark& sm)$/;"	f	class:EditWindow
set_change_function	templates/notatype.c	/^void set_change_function( void (*cfunc)(void))$/;"	f
set_clipboard	windows/sources.c	/^void set_clipboard(void)$/;"	f
set_cursor_func	windows/output.c	/^void set_cursor_func(void (*func)(void*,int,int))$/;"	f
set_default_thinspace	windows/output.c	/^void set_default_thinspace(int n)$/;"	f
set_display_delta	windows/output.c	/^void set_display_delta(int d)$/;"	f
set_drawstyle	windows/output.c	/^void set_drawstyle(int style)$/;"	f
set_file	documents/fileread.c	/^void set_file(FILE *f)$/;"	f
set_fileselc	windows/edit.c	/^static void set_fileselc(void *data, int nr)$/;"	f	file:
set_fill_column	treeedit/editwindow.cc	/^void EditWindow::set_fill_column(Index n)$/;"	f	class:EditWindow
set_find_nr	treeedit/node.hh	/^    void set_find_nr(Char c) { _findnr = c; }$/;"	f	class:Node
set_find_nr_rec	treeedit/node.cc	/^void Node::set_find_nr_rec(Char& c)$/;"	f	class:Node
set_free_leaf	templates/match.c	55;"	d	file:
set_gap	treeedit/node.cc	/^Bool Node::set_gap(Index pos, Index min_size)$/;"	f	class:Node
set_handle	markup/markup.c	/^void set_handle(Uchar highvalue)$/;"	f
set_index	windows/output.c	/^void set_index(Bool b)$/;"	f
set_index_nr	treeedit/editor.cc	/^void set_index_nr(Index count)$/;"	f
set_index_nr	treeedit/select.cc	/^void Select::set_index_nr(Index c)$/;"	f	class:Select
set_info	windows/events.c	/^static void set_info(Window win)$/;"	f	file:
set_input_string	keyboard/keyboard.c	/^void set_input_string(Uchar *string, int len)$/;"	f
set_italic	windows/output.c	/^void set_italic(Bool b)$/;"	f
set_keyboard_stack	keyboard/keyboard.c	/^void set_keyboard_stack(void *stack)$/;"	f
set_keymap_help	keyboard/keyboard.c	/^void set_keymap_help(KeyMap *map, Uchar *help)$/;"	f
set_kind	windows/notadef.c	/^static void set_kind(int value)$/;"	f	file:
set_last_pos	include/sources.h	/^    void (*set_last_pos)(int, int,int,int);$/;"	m	struct:__anon41
set_leafsize	templates/match.c	56;"	d	file:
set_lines	include/sources.h	/^    void (*set_lines)(void*,int);$/;"	m	struct:__anon41
set_listelm	windows/notation.c	266;"	d	file:
set_margin	windows/output.c	/^void set_margin(int newmargin)$/;"	f
set_message_window	windows/output.c	/^void set_message_window(void *w)$/;"	f
set_name	windows/edit.c	/^static int set_name(void *data, Char *pathname)$/;"	f	file:
set_name	windows/menu.c	/^static void set_name(Char *projectname)$/;"	f	file:
set_name	windows/notation.c	/^static void set_name(NOTATIONINFO *ninf)$/;"	f	file:
set_nota	windows/notadef.c	/^static void set_nota(NOTATION *nota)$/;"	f	file:
set_notation_filename	templates/notatype.c	/^static void set_notation_filename(int fnr, Char *filename)$/;"	f	file:
set_old	treeedit/select.cc	/^void Select::set_old()$/;"	f	class:Select
set_output_name	windows/edit.c	/^static void set_output_name(EDITINFO *einf)$/;"	f	file:
set_output_window	windows/output.c	/^void set_output_window(void *w)$/;"	f
set_parens	treeedit/editor.cc	/^void set_parens(void)$/;"	f
set_parens	treeedit/node.cc	/^void Node::set_parens(Bool b)$/;"	f	class:Node
set_parens	treeedit/select.cc	/^void Select::set_parens()$/;"	f	class:Select
set_parser_case	templates/match.c	/^void set_parser_case(int on)$/;"	f
set_parser_space	templates/match.c	/^void set_parser_space(int on)$/;"	f
set_precedence	windows/notadef.c	/^static void set_precedence(int value)$/;"	f	file:
set_property	tools/xpipein.c	/^static void set_property(int size)$/;"	f	file:
set_protocols	include/sources.h	93;"	d
set_save_entry	windows/sources.c	/^static void set_save_entry(WINDOWTYPE type, int xpos, int ypos, int width, int height,$/;"	f	file:
set_save_period	windows/sources.c	/^void set_save_period(int minute)$/;"	f
set_save_state_file	windows/sources.c	/^static void set_save_state_file(Char *name)$/;"	f	file:
set_search_func	windows/output.c	/^void set_search_func(void (*func)(void*), int x, int y)$/;"	f
set_selection_window	windows/sources.c	/^void set_selection_window(Window win)$/;"	f
set_smart_height	windows/output.c	/^void set_smart_height(int height)$/;"	f
set_spacing	windows/notadef.c	/^static void set_spacing(int value)$/;"	f	file:
set_string_size	util/dynasize.c	/^int set_string_size(Uchar **str, int *length, int newlength)$/;"	f
set_tab_stack	windows/output.c	/^void set_tab_stack(void *ts, int nropen)$/;"	f
set_text_mode	windows/output.c	/^void set_text_mode(int mode)$/;"	f
set_translation	util/translate.c	/^void set_translation(Uchar *orig,  Uchar *transl)$/;"	f
set_translation8	util/translate.c	/^void set_translation8(char *orig,  Uchar *transl)$/;"	f
set_underline	windows/output.c	/^void set_underline(Bool b)$/;"	f
set_wait_cursor	windows/sources.c	/^void set_wait_cursor(Window win)$/;"	f
set_window_position	keyboard/keyboard.c	/^void set_window_position(unsigned long window, int x, int y,$/;"	f
set_wm_selection	windows/sources.c	/^Bool set_wm_selection(void)$/;"	f
set_wrap	treeedit/editwindow.cc	/^void EditWindow::set_wrap(Bool toggle)$/;"	f	class:EditWindow
set_x	windows/output.c	/^void set_x(int new_x)$/;"	f
set_x_y	windows/output.c	/^void set_x_y(int new_x, int new_y)$/;"	f
set_y	windows/output.c	/^void set_y(int new_y)$/;"	f
setms	output/latexout.c	/^            secure, setms;$/;"	v	file:
setsimpletabsize	windows/output.c	/^void setsimpletabsize(int newsize)$/;"	f
setsize	util/fstate.c	/^int setsize=0;$/;"	v
settab	windows/output.c	/^static void settab(void)$/;"	f	file:
settabsize	windows/output.c	/^void settabsize(int newsize)$/;"	f
setwidthname	tools/pktobdf.c	/^char *setwidthname="normal";$/;"	v
setwin	treeedit/editwindow.cc	/^void EditWindow::setwin(void *ow, int xs, int ys)$/;"	f	class:EditWindow
setwin	treeedit/editwindow.hh	/^    void setwin(int xs, int ys)$/;"	f	class:EditWindow
sfreel	documents/fileread.c	/^static STRINGSTACK *sfreel=NULL, *sstack=NULL;$/;"	v	file:
sh	windows/fileselc.c	/^    int ygd,yfm,yd,xf,sh; $/;"	m	struct:__anon71	file:
shell	windows/edit.c	/^		 shell,fini,strt;$/;"	m	struct:__anon69	file:
shift_left	windows/sources.c	/^static void shift_left(int i)   \/* schuif alles na i 1 plaats naar links *\/$/;"	f	file:
shift_right	windows/sources.c	/^static void shift_right(int i)  \/* schuif alles na i 1 plaats naar rechts *\/$/;"	f	file:
shifted_uid	templates/notatype.c	/^static unsigned long shifted_uid=0;$/;"	v	file:
show_notation_info	windows/notation.c	/^static void show_notation_info(void *data __attribute__((unused)), int inr)$/;"	f	file:
showtabs	windows/notadef.c	/^static Bool showtabs = MP_True;$/;"	v	file:
shrt	windows/scrollbar.c	/^	   Bool shrt;$/;"	m	struct:__anon91	file:
sigcomment	windows/sources.c	/^    char *sigcomment;$/;"	m	struct:__anon83	file:
sign	windows/output.c	/^static XPoint *sign[] = { cursor, curbar, cursor_h, mark };$/;"	v	file:
sign_convex	windows/output.c	/^static Bool sign_convex[] = { Convex, Nonconvex, Convex, Convex};$/;"	v	file:
sign_filled	windows/output.c	/^static Bool sign_filled[] = { MP_True, MP_True, MP_False, MP_False };$/;"	v	file:
sign_size	windows/output.c	/^static int sign_size[] = { NR_CURSOR, NR_CURBAR, NR_CURSOR, NR_MARK };$/;"	v	file:
signum	windows/sources.c	/^    int signum;$/;"	m	struct:__anon83	file:
sigset_t	module/pvsparse.c	/^typedef __sigset_t sigset_t;$/;"	t	file:
sigtype	windows/sources.c	/^    int sigtype; \/* 1=dump backups,reset old: 2=alarm: 3=backups,quit *\/$/;"	m	struct:__anon83	file:
simpletabsize	windows/output.c	/^static int simpletabsize; \/* = 8 * "width of an n" *\/$/;"	v	file:
singlemode	documents/system.c	/^    singlemode=0,$/;"	v
size	include/flexarray.h	/^	 int size;$/;"	m	struct:__anon38
size	include/memman.h	/^  int size;    \/* size of blocks (if freelist is empty) *\/$/;"	m	struct:__anon53
size	module/pvsparse.c	/^  int size;$/;"	m	struct:__anon33	file:
size	treeedit/node.hh	/^    Index size() const { return (stencil? stencil_size(innr): size1 + size2); }$/;"	f	class:Node
size	treeedit/select.hh	/^    Index size() { return end.pos - begin.pos; }$/;"	f	class:Select
size	unicode/unistring.c	/^  int size;$/;"	m	struct:__anon98	file:
size	util/debug.c	/^    size_t size;$/;"	m	struct:__anon65	file:
size	util/memman.c	/^    size_t size;$/;"	m	struct:__anon66	file:
size	windows/fonts.c	/^    short *size;$/;"	m	struct:__anon70	file:
size1	treeedit/node.hh	/^    Index size1;    \/\/ Number of Chars used before the gap.$/;"	m	class:Node
size2	treeedit/node.hh	/^    Index size2;    \/\/ Same after the gap.$/;"	m	class:Node
size_latex	output/latexout.c	/^char *size_latex[10] = {$/;"	v	file:
size_t	module/pvsparse.c	/^typedef unsigned int size_t;$/;"	t	file:
sizeattrib	windows/output.c	/^static int sizeattrib=0;$/;"	v	file:
sizepix	windows/scrollbar.c	/^           int startpix, sizepix, sb_size, nr_lines,$/;"	m	struct:__anon91	file:
skip_fontpart	util/funcs.c	/^int skip_fontpart(FILE *f)$/;"	f
skip_nr_specials	tools/pktobdf.c	/^integer skip_nr_specials=1;$/;"	v
skip_spaces	unicode/unifont.c	351;"	d	file:
skip_spaces	unicode/virtread.c	176;"	d	file:
skip_symbol	module/hugsparse.c	116;"	d	file:
skipspecials	tools/pktobdf.c	/^static void skipspecials()$/;"	f	file:
slant	tools/pktobdf.c	/^char *slant="r";$/;"	v
smaller	treeedit/select.cc	/^static int smaller(const Mark &l, const Mark &r)$/;"	f	file:
smart	treeedit/editwindow.cc	/^Bool EditWindow::smart;$/;"	m	class:EditWindow	file:
smart	treeedit/editwindow.hh	/^    static Bool smart;$/;"	m	class:EditWindow
smart_height	windows/output.c	/^static int smart_height = 0;$/;"	v	file:
smart_mode	windows/output.c	/^static int smart_mode = INVISIBLE;$/;"	v	file:
soft_count	output/latexout.c	/^static int soft_count = 0;  $/;"	v	file:
soft_math_pref	output/latexout.c	/^static void soft_math_pref(Bool premath)$/;"	f	file:
soft_push	output/latexout.c	/^static int soft_push[50] = {0};$/;"	v	file:
space	include/notatype.h	/^	  int space;$/;"	m	struct:__anon47
space_insens	templates/match.c	/^static int space_insens=0;$/;"	v	file:
spaces	windows/output.c	/^static char spaces[1000];$/;"	v	file:
spacing	tools/pktobdf.c	/^char *spacing="P";$/;"	v
special	windows/output.c	/^          special,fattrib,cattrib;$/;"	m	struct:BOX	file:
split_text	windows/output.c	/^static int split_text=MP_False;$/;"	v	file:
spval	language/parse.c	/^	SeqPair spval;$/;"	m	union:__anon14	file:
ss	treeedit/editor.cc	/^Select& ss() { static Select *ssval = new Select(); return *ssval; }$/;"	f
ss_notation	treeedit/editor.cc	/^int ss_notation(Offset *vnr)$/;"	f
ssf	windows/sources.c	/^static FILE *ssf = NULL;$/;"	v	file:
ssize_t	module/pvsparse.c	/^typedef __ssize_t ssize_t;$/;"	t	file:
sstack	documents/fileread.c	/^static STRINGSTACK *sfreel=NULL, *sstack=NULL;$/;"	v	file:
stack	keyboard/keyboard.c	/^    KeyStack *stack;$/;"	m	struct:KeyStackInfoRec	file:
stack	templates/match.c	/^static int *stack=NULL;$/;"	v	file:
stack_position	treeedit/editor.cc	/^void stack_position(void)$/;"	f
stack_position	treeedit/select.cc	/^void Select::stack_position()$/;"	f	class:Select
stackbegin	treeedit/select.cc	/^Mark & Select::stackbegin(int n)$/;"	f	class:Select
stackcode	windows/menu.c	682;"	d	file:
stackd	windows/menu.c	/^static int stackd=0;$/;"	v	file:
stackdepth	treeedit/select.cc	/^static Index stackdepth=0;$/;"	v	file:
stackdpt	windows/getstring.c	/^static int stackdpt = 0;$/;"	v	file:
stackend	treeedit/select.cc	/^Mark & Select::stackend(int n)$/;"	f	class:Select
stackkind	windows/menu.c	/^static int stackkind[256];$/;"	v	file:
stackpos	templates/match.c	/^static int stackpos=0;$/;"	v	file:
stackpos	treeedit/editor.cc	/^Index stackpos=0;$/;"	v
stacksize	templates/match.c	/^static int stacksize=0;$/;"	v	file:
stackstr	windows/getstring.c	/^static STRINGINFO *stackstr[STACKD];$/;"	v	file:
stacktop	windows/output.c	/^static TABBING *stacktop = 0, *freelist = 0;$/;"	v	file:
standard_dir	util/funcs.c	/^Char *standard_dir(Char *dirname)$/;"	f
standard_string	unicode/brows.c	/^Uchar standard_string[] =$/;"	v
standardbutton	windows/remark.c	/^static Char *standardbutton[2]= {0,0};$/;"	v	file:
start	treeedit/editwindow.hh	/^    Marker start;$/;"	m	class:EditWindow
start	treeedit/select.cc	/^Mark& Select::start()$/;"	f	class:Select
start_backward_find	windows/menu.c	/^static void start_backward_find(void)$/;"	f	file:
start_find	windows/menu.c	/^static void start_find(void)$/;"	f	file:
start_hugs	module/hugs.c	/^void start_hugs(void)$/;"	f
start_pixel	windows/scrollbar.c	/^static int start_pixel(SCROLLBARINFO *sbi)$/;"	f	file:
start_replace	windows/menu.c	/^static void start_replace(void)$/;"	f	file:
start_state	documents/fileread.c	/^static int start_state[MAXFILE] = { 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1 };$/;"	v	file:
start_to_line	treeedit/editwindow.cc	/^void EditWindow::start_to_line(Index line_number)$/;"	f	class:EditWindow
start_to_str	treeedit/editwindow.cc	/^void EditWindow::start_to_str(Char* str)$/;"	f	class:EditWindow
startp	treeedit/editwindow.hh	/^    Return* startp;$/;"	m	class:EditWindow
startpix	windows/scrollbar.c	/^           int startpix, sizepix, sb_size, nr_lines,$/;"	m	struct:__anon91	file:
state	documents/fileread.c	/^static int state;$/;"	v	file:
state	include/sources.h	/^    void (*state)(void*,int*,int*,int*,int*,int*,int*,Char**);$/;"	m	struct:__anon41
state	module/pvsparse.c	/^    int32_t *state;$/;"	m	struct:random_data	file:
state	windows/sources.c	/^    int state,mapped;$/;"	m	struct:__anon82	file:
state_open	windows/buffer.c	/^static Bool state_open = MP_False;$/;"	v	file:
state_open	windows/edit.c	/^static Bool state_open = MP_False, as_icon = MP_False;$/;"	v	file:
state_open	windows/notation.c	/^static Bool state_open = MP_False, as_icon = MP_False;$/;"	v	file:
state_open	windows/symbol.c	/^static Bool state_open = MP_False, as_icon = MP_False;$/;"	v	file:
state_window	windows/edit.c	/^static EDITINFO *state_window = NULL;$/;"	v	file:
state_window	windows/notation.c	/^static NOTATIONINFO *state_window = NULL;$/;"	v	file:
statem	windows/fileselc.c	/^    FSTATE *statem;$/;"	m	struct:__anon71	file:
statement	language/parse.y	/^statement   :   \/* empty *\/$/;"	l
states	util/fstate.c	/^    int states;$/;"	m	struct:__anon61	file:
statetomode	keyboard/X11syskeys.c	/^static KeyMode statetomode(unsigned int state)$/;"	f	file:
statusfromstack	windows/menu.c	683;"	d	file:
stay	windows/notadef.c	/^         Bool stay;$/;"	m	struct:__anon88	file:
stencil	treeedit/node.hh	/^    Bool stencil;   \/\/ Node contains a stencil.$/;"	m	class:Node
stencil_equal	templates/notatype.c	/^static Bool stencil_equal(NOTATION *a, NOTATION *b)$/;"	f	file:
stencil_kind	include/notatype.h	128;"	d
stencil_latex	include/notatype.h	134;"	d
stencil_latex_size	include/notatype.h	135;"	d
stencil_latexmode	include/notatype.h	131;"	d
stencil_lines	include/notatype.h	130;"	d
stencil_nr	treeedit/node.hh	/^    Index stencil_nr() const { return innr; }$/;"	f	class:Node
stencil_position	include/notatype.h	136;"	d
stencil_position_first	include/notatype.h	137;"	d
stencil_position_last	include/notatype.h	139;"	d
stencil_position_left	templates/notatype.c	/^int stencil_position_left(Index innr, Char phnr)$/;"	f
stencil_position_right	templates/notatype.c	/^int stencil_position_right(Index innr, Char phnr)$/;"	f
stencil_prec	include/notatype.h	127;"	d
stencil_screen	include/notatype.h	132;"	d
stencil_size	include/notatype.h	133;"	d
stencil_space	include/notatype.h	129;"	d
step	module/pvs.c	/^  ProofStep *step;$/;"	m	struct:PVSProof	file:
step	module/pvs.c	/^  char *step;$/;"	m	struct:KeywordItem	file:
step_add_to_result	module/pvs.c	/^static void step_add_to_result(ProofStep *ps, char *res)$/;"	f	file:
step_clear_result	module/pvs.c	/^static void step_clear_result(ProofStep *ps)$/;"	f	file:
steptype	module/pvs.c	/^  int steptype;          \/* what kind of step *\/$/;"	m	struct:ProofStep	file:
sticky	include/popup.h	/^  int sticky;$/;"	m	struct:MENU
stilllen	module/pvs.c	/^static int stilllen=0;$/;"	v	file:
stilltoparse	module/pvs.c	/^static char *stilltoparse=0;$/;"	v	file:
stop_end	treeedit/editwindow.cc	/^void EditWindow::stop_end(const Mark& mt)$/;"	f	class:EditWindow
stop_end_line	treeedit/editwindow.cc	/^void EditWindow::stop_end_line(const Mark& mt)$/;"	f	class:EditWindow
stop_motion_hints	windows/sources.c	/^void stop_motion_hints(void)$/;"	f
stops	windows/output.c	/^                short stops[MAXTAB];$/;"	m	struct:TABBING	file:
storage_type	include/keyboard.h	/^    char storage_type;  \/* how is this map stored *\/$/;"	m	struct:keymap
str	documents/fileread.c	/^    Char *str;$/;"	m	struct:CSTRINGSTACK	file:
str	documents/fileread.c	/^    Char *str;$/;"	m	struct:STRINGSTACK	file:
str	module/pvs.c	/^  Char *str;$/;"	m	struct:KeywordItem	file:
str	tools/xpipein.c	/^    char *str;$/;"	m	struct:STRSTACK	file:
str	tools/xpipeout.c	/^    char *str;$/;"	m	struct:STRSTACK	file:
str	unicode/datatotable.c	/^static struct { char *str; int len; } formattag[]= {$/;"	m	struct:__anon99	file:
str_backspace	windows/getstring.c	/^static void str_backspace(int arg)$/;"	f	file:
str_delete	windows/getstring.c	/^static void str_delete(Index arg)$/;"	f	file:
str_down	windows/getstring.c	/^static void str_down(void)$/;"	f	file:
str_end	windows/getstring.c	/^static void str_end(void)$/;"	f	file:
str_home	windows/getstring.c	/^static void str_home(void)$/;"	f	file:
str_input	module/pvsparse.c	/^static int str_input(void)$/;"	f	file:
str_insert_char	windows/getstring.c	/^static void str_insert_char(int keycode, int arg)$/;"	f	file:
str_insert_string	windows/getstring.c	/^static void str_insert_string(void)$/;"	f	file:
str_insert_symbol	windows/getstring.c	/^static void str_insert_symbol(void)$/;"	f	file:
str_left	windows/getstring.c	/^static void str_left(int count)$/;"	f	file:
str_m_backspace	windows/getstring.c	/^static void str_m_backspace(void)$/;"	f	file:
str_m_delete	windows/getstring.c	/^static void str_m_delete(void)$/;"	f	file:
str_next_field	windows/getstring.c	/^static void str_next_field(void)$/;"	f	file:
str_output	module/pvsparse.c	/^static void str_output(char c)$/;"	f	file:
str_prev_field	windows/getstring.c	/^static void str_prev_field(void)$/;"	f	file:
str_right	windows/getstring.c	/^static void str_right(int count)$/;"	f	file:
str_text	windows/remark.c	/^static Char **str_text = NULL;$/;"	v	file:
str_unput	module/pvsparse.c	/^static void str_unput(char c)$/;"	f	file:
str_up	windows/getstring.c	/^static void str_up(void)$/;"	f	file:
str_wrapup	module/pvsparse.c	/^static int str_wrapup(void)$/;"	f	file:
stref	include/types.h	/^  void **stref;  \/* for referenced other types  *\/$/;"	m	union:__anon56
strerror	unicode/unistring.c	/^char *strerror(int errnum) { return ""; }$/;"	f
strerror	util/strerror.c	/^char *strerror(int num)$/;"	f
string	include/popupmenu.h	/^  Uchar *string;$/;"	m	struct:PopupLine
string	windows/output.c	/^static XChar2b *string;$/;"	v	file:
string_attr	windows/getstring.c	/^static XSetWindowAttributes string_attr;$/;"	v	file:
string_data	windows/remark.c	/^static void *string_data = NULL;$/;"	v	file:
string_destroy	windows/getstring.c	/^void string_destroy(void *data)$/;"	f
string_draw	windows/getstring.c	/^static void string_draw(void *data)$/;"	f	file:
string_get_input	windows/getstring.c	/^void string_get_input(void *data)$/;"	f
string_height	windows/getstring.c	/^unsigned int string_height(void)$/;"	f
string_init	windows/getstring.c	/^void string_init(void)$/;"	f
string_keyboard	windows/getstring.c	/^void string_keyboard(void)$/;"	f
string_make	windows/getstring.c	/^void *string_make(Window parent, Char *txt, unsigned int maxlen,$/;"	f
string_map	windows/getstring.c	/^void string_map(void *data)$/;"	f
string_mask	windows/getstring.c	/^static unsigned long string_mask;$/;"	v	file:
string_motion	windows/getstring.c	/^static void string_motion(void *data, int x_pos, int y_pos __attribute__((unused)))$/;"	f	file:
string_move	windows/getstring.c	/^void string_move(void *data, int newx, int newy)$/;"	f
string_pos_x	windows/default.c	/^static int string_pos_x;$/;"	v	file:
string_press	windows/getstring.c	/^static void string_press(void *data, XButtonEvent *event)$/;"	f	file:
string_refresh	windows/getstring.c	/^void string_refresh(void *data, Char *txt)$/;"	f
string_relation	windows/getstring.c	/^void string_relation(void *data, void *prev, void *next)$/;"	f
string_release	windows/getstring.c	/^static void string_release(void *data __attribute__((unused)), XButtonEvent *event __attribute__((unused)))$/;"	f	file:
string_resize	windows/getstring.c	/^void  string_resize(void *data, unsigned int new_width)$/;"	f
string_text	windows/getstring.c	/^Char *string_text(void *data)$/;"	f
string_to_window	windows/edit.c	/^void string_to_window(Char *messagegroup, Char *mess)$/;"	f
string_unmap	windows/getstring.c	/^void string_unmap(void *data)$/;"	f
string_width	windows/fonts.c	/^int string_width(Char *string, int nr)$/;"	f
string_window_width	windows/getstring.c	/^unsigned int string_window_width(unsigned int nchars)$/;"	f
stringadd	language/stringlib.c	/^static Uchar *stringadd(Uchar *s1, Uchar *s2)$/;"	f	file:
stringconsts	language/variable.c	/^static LeafTree stringconsts = { 0, argstring_cmp, 0, sizeof(Argument) };$/;"	v	file:
stringequal	language/stringlib.c	/^static int stringequal(Uchar *s1, Uchar *s2)$/;"	f	file:
stringfuncs	windows/getstring.c	/^FUNCTIONS stringfuncs = {$/;"	v
stringgreater	language/stringlib.c	/^static int stringgreater(Uchar *s1, Uchar *s2)$/;"	f	file:
stringgreaterequal	language/stringlib.c	/^static int stringgreaterequal(Uchar *s1, Uchar *s2)$/;"	f	file:
stringlen	output/latexout.c	/^static int stringlen=0, stringmax=0;  \/* length of string, size allocated *\/$/;"	v	file:
stringless	language/stringlib.c	/^static int stringless(Uchar *s1, Uchar *s2)$/;"	f	file:
stringlessequal	language/stringlib.c	/^static int  stringlessequal(Uchar *s1, Uchar *s2)$/;"	f	file:
stringlist	language/parse.y	/^stringlist  :	STRING$/;"	l
stringmax	output/latexout.c	/^static int stringlen=0, stringmax=0;  \/* length of string, size allocated *\/$/;"	v	file:
stringminus	language/stringlib.c	/^static Uchar *stringminus(Uchar *s1, Uchar *s2)$/;"	f	file:
stringnotequal	language/stringlib.c	/^static int stringnotequal(Uchar *s1, Uchar *s2)$/;"	f	file:
strinput	windows/getstring.c	/^static STRINGINFO *strinput = NULL;$/;"	v	file:
strip_name	util/funcs.c	/^Char *strip_name(Char *name)$/;"	f
strsignal	unicode/unistring.c	/^char *strsignal(int signalnum) { return ""; }$/;"	f
strt	windows/edit.c	/^		 shell,fini,strt;$/;"	m	struct:__anon69	file:
strtoUstr	unicode/unistring.c	/^static Uchar *strtoUstr(const char *s)$/;"	f	file:
strtokdefarg	unicode/unistring.c	/^static Uchar *strtokdefarg=NULL;$/;"	v	file:
structure_to_window	windows/edit.c	/^void structure_to_window(Char *messagegroup)$/;"	f
stval	include/types.h	/^  void *stval;   \/* for all other types *\/$/;"	m	union:__anon56
style	windows/output.c	/^    char color, style;$/;"	m	struct:BOX	file:
sub_height	windows/buffer.c	75;"	d	file:
sub_height	windows/edit.c	156;"	d	file:
sub_height	windows/find.c	109;"	d	file:
sub_height	windows/menu.c	117;"	d	file:
sub_height	windows/notation.c	119;"	d	file:
sub_width	windows/buffer.c	74;"	d	file:
sub_width	windows/default.c	129;"	d	file:
sub_width	windows/edit.c	155;"	d	file:
sub_width	windows/find.c	108;"	d	file:
sub_width	windows/menu.c	116;"	d	file:
sub_width	windows/notation.c	118;"	d	file:
submap	unicode/unimap.c	/^    double submap[0x20000\/UNI_MAPSIZE];$/;"	m	union:__anon93	file:
submenu	include/popup.h	/^  MENU *submenu;$/;"	m	struct:MENU
submenu	windows/menu.c	/^    int submenu;$/;"	m	struct:ITEMDESC	file:
subname	windows/notation.c	/^    Char *name,*subname;$/;"	m	struct:__anon74	file:
subscript_uid	module/pvsparse.c	/^  subscript_uid=3407435781UL,$/;"	v	file:
surrobuf	markup/markup.c	/^static char surrobuf[10];$/;"	v	file:
surrobuffer	markup/markup.c	/^static Uchar surrobuffer[10];$/;"	v	file:
surrodefhandler	markup/markup.c	/^static SurroHandler surrodefhandler = { 0, surroprint, surrohandle, 0};$/;"	v	file:
surrohandle	markup/markup.c	/^static Uchar *surrohandle(int lowvalue, Attribute *attr, RedirectFunc *func)$/;"	f	file:
surrohighvalue	markup/markup.c	/^static Uchar surrohighvalue=0;$/;"	v	file:
surrolist	markup/markup.c	/^static SurroHandler *surrolist=NULL;$/;"	v	file:
surroprint	markup/markup.c	/^static Uchar *surroprint(int lowvalue, Attribute *attr, RedirectFunc *func)$/;"	f	file:
suseconds_t	module/pvsparse.c	/^typedef __suseconds_t suseconds_t;$/;"	t	file:
swap	treeedit/select.cc	/^void swap(Select& s1, Select& s2)$/;"	f
swap_bytes	unicode/unimap.c	/^static void swap_bytes(unsigned char *data, int size, int per)$/;"	f	file:
swap_cursor_off	windows/notadef.c	/^static void swap_cursor_off(void)$/;"	f	file:
swap_cursor_on	windows/notadef.c	/^static void swap_cursor_on(void)$/;"	f	file:
swap_region	treeedit/editor.cc	/^void swap_region(void)$/;"	f
swap_selections	treeedit/editor.cc	/^void swap_selections(Index sel1, Index sel2)$/;"	f
switch_cursor	windows/getstring.c	/^static void switch_cursor(STRINGINFO *sinfo)$/;"	f	file:
switch_fattrib	windows/output.c	/^static void switch_fattrib(int attrgroup, int attrval)$/;"	f	file:
switch_fontnr	windows/output.c	/^static void switch_fontnr(int fontnr)$/;"	f	file:
switch_parens	treeedit/editor.cc	/^void switch_parens(void)$/;"	f
switch_parens	treeedit/select.cc	/^void Select::switch_parens()$/;"	f	class:Select
switch_reverse	windows/output.c	/^void switch_reverse(void)$/;"	f
switch_size_fontnr	windows/output.c	/^static void switch_size_fontnr(int fattrib)$/;"	f	file:
switch_sizenr	windows/output.c	/^static void switch_sizenr(int sizenr)$/;"	f	file:
switch_tabmode	windows/notadef.c	/^static void switch_tabmode(void)$/;"	f	file:
switch_textdots	windows/menu.c	/^static void switch_textdots(void)$/;"	f	file:
switch_thick	windows/output.c	/^void switch_thick(void)$/;"	f
switch_thin	windows/output.c	/^void switch_thin(void)$/;"	f
switch_versions	windows/notadef.c	/^static void switch_versions(int side)$/;"	f	file:
switch_visible	windows/output.c	/^void switch_visible(void)$/;"	f
symbol_attr	windows/symbol.c	/^static XSetWindowAttributes symbol_attr;$/;"	v	file:
symbol_bad_end	windows/symbol.c	/^static void symbol_bad_end(void *data)$/;"	f	file:
symbol_close	windows/symbol.c	/^static void symbol_close(void *data)$/;"	f	file:
symbol_deiconize	windows/symbol.c	/^static void symbol_deiconize(void *data)$/;"	f	file:
symbol_draw	windows/symbol.c	/^static void symbol_draw(void *data)$/;"	f	file:
symbol_empty_page	windows/symbol.c	/^void symbol_empty_page(Char *str, int length)$/;"	f
symbol_goto_page	windows/symbol.c	/^void symbol_goto_page(Char *str)$/;"	f
symbol_handle_button	windows/symbol.c	/^static void symbol_handle_button(void *data, int b_num)$/;"	f	file:
symbol_iconize	windows/symbol.c	/^static void symbol_iconize(void *data)$/;"	f	file:
symbol_iconized	documents/system.c	/^    symbol_iconized = 0,$/;"	v
symbol_init	windows/symbol.c	/^void symbol_init(void)$/;"	f
symbol_is_open	documents/system.c	/^int symbol_is_open = 0,$/;"	v
symbol_last	windows/symbol.c	/^Char symbol_last(void)$/;"	f
symbol_last_pos	windows/symbol.c	/^static int symbol_last_pos(int *x, int *y, int *w, int *h)$/;"	f	file:
symbol_layout_change	windows/symbol.c	/^static void symbol_layout_change(void *data)$/;"	f	file:
symbol_mask	windows/symbol.c	/^static unsigned long symbol_mask;$/;"	v	file:
symbol_motion	windows/symbol.c	/^static void symbol_motion(void *data, int x, int y)$/;"	f	file:
symbol_name	windows/symbol.c	/^static XTextProperty symbol_name, icon_name;$/;"	v	file:
symbol_new_page	windows/symbol.c	/^void symbol_new_page(Char *str, int columns, int rows)$/;"	f
symbol_open	windows/symbol.c	/^void symbol_open(void)$/;"	f
symbol_ph	windows/output.c	/^Char symbol_ph[7] = {  'E', 'O', 'I', 'V', 'T', 'L', 'D'         };$/;"	v	file:
symbol_press	windows/symbol.c	/^static void symbol_press(void *data, XButtonEvent *event)$/;"	f	file:
symbol_range_page	windows/symbol.c	/^void symbol_range_page(Char *str, int start, int end)$/;"	f
symbol_release	windows/symbol.c	/^static void symbol_release(void *data, XButtonEvent *event)$/;"	f	file:
symbol_resize	windows/symbol.c	/^static void symbol_resize(void *data, XConfigureEvent *event)$/;"	f	file:
symbol_select_down	windows/symbol.c	/^void symbol_select_down(int num)$/;"	f
symbol_select_left	windows/symbol.c	/^void symbol_select_left(int num)$/;"	f
symbol_select_right	windows/symbol.c	/^void symbol_select_right(int num)$/;"	f
symbol_select_up	windows/symbol.c	/^void symbol_select_up(int num)$/;"	f
symbol_selected_symbol	windows/symbol.c	/^void symbol_selected_symbol(Char *str)$/;"	f
symbol_set_last_pos	windows/symbol.c	/^static void symbol_set_last_pos(int x, int y, int w, int h)$/;"	f	file:
symbol_state	windows/symbol.c	/^static void symbol_state(void *data, int *x, int*y, int *w, int *h,$/;"	f	file:
symbol_tab	windows/output.c	/^char *symbol_tab[44] = { "",   "[set]", "[tab]", "[back]",$/;"	v	file:
symbol_unselect	windows/symbol.c	/^static void symbol_unselect(void)$/;"	f	file:
symbol_update_name	windows/symbol.c	/^static void symbol_update_name(SYMBOLINFO *sinfo)$/;"	f	file:
symbol_use_state	windows/symbol.c	/^static void symbol_use_state(int x, int y, int w, int h,$/;"	f	file:
symbolbutton	windows/symbol.c	/^	    } symbolbutton[NR_BUTTON] =$/;"	v	typeref:struct:__anon84	file:
symbolfuncs	windows/symbol.c	/^FUNCTIONS symbolfuncs = {$/;"	v
symbolwin	windows/symbol.c	/^         Window symbolwin;$/;"	m	struct:__anon85	file:
sympage	windows/symbol.c	/^         SYMBOLPAGE *sympage;$/;"	m	struct:__anon85	file:
sysfunc	windows/popup.c	/^  void (*sysfunc)(void*,int);$/;"	m	struct:__anon72	file:
sysinfo	include/unifont.h	/^    CharStruct *sysinfo; \/* system specific information about that character *\/$/;"	m	struct:__anon43
system_init	documents/system.c	/^void system_init(int argc, char *argv[])$/;"	f
system_wrap	windows/menu.c	/^static void system_wrap(Char *command)$/;"	f	file:
systemdata	unicode/unifont.c	/^    void *systemdata; \/* for X: XFontStruct*  *\/$/;"	m	struct:FONTREC	file:
t	language/typetest.c	/^   int t;$/;"	m	struct:__anon6	file:
tab_equal	windows/output.c	/^Bool tab_equal(void *ts)$/;"	f
tab_lock	windows/output.c	/^void *tab_lock(void)$/;"	f
tab_unlock	windows/output.c	/^void tab_unlock(void *ts)$/;"	f
tabminus	windows/output.c	/^static void tabminus(void)$/;"	f	file:
tabplus	windows/output.c	/^static void tabplus(void)$/;"	f	file:
tabs	treeedit/editwindow.hh	/^    void *tabs;$/;"	m	class:Return
tabsize	windows/output.c	/^static int tabsize = 24;$/;"	v	file:
tail_stack	include/intstack.h	23;"	d
taken	windows/sources.c	/^  int taken;$/;"	m	struct:__anon81	file:
target_length	windows/sources.c	/^            target_targets=0, target_length=0;$/;"	v	file:
target_string	windows/sources.c	/^static Atom targets[5], target_string=0, data_prop=0, clipboard=0,$/;"	v	file:
target_targets	windows/sources.c	/^            target_targets=0, target_length=0;$/;"	v	file:
targets	windows/sources.c	/^static Atom targets[5], target_string=0, data_prop=0, clipboard=0,$/;"	v	file:
temporary	keyboard/keyboard.c	/^    int temporary; \/* a temporary map is removed as soon as a$/;"	m	struct:KeyStack	file:
tempremoveafter	keyboard/keyboard.c	/^    void *tempremoveafter;  \/* lazy expression, evaluated when the temporary$/;"	m	struct:KeyStack	file:
tempremovebefore	keyboard/keyboard.c	/^    void *tempremovebefore; \/* lazy expression, evaluated when the temporary$/;"	m	struct:KeyStack	file:
test	treeedit/select.cc	/^Bool Select::test(const Mark& m)$/;"	f	class:Select
test_all_begin	treeedit/editwindow.cc	/^void EditWindow::test_all_begin(const Mark& mt)$/;"	f	class:EditWindow
test_all_end	treeedit/editwindow.cc	/^void EditWindow::test_all_end(const Mark& mt)$/;"	f	class:EditWindow
test_begin	treeedit/editwindow.cc	/^void EditWindow::test_begin(const Mark& mt)$/;"	f	class:EditWindow
test_begin	treeedit/select.cc	/^void Select::test_begin(const Mark& m, Cpfv cb) const$/;"	f	class:Select
test_begin_before	treeedit/select.cc	/^void Select::test_begin_before(const Mark& m, Cpfv cb) const$/;"	f	class:Select
test_begin_line	treeedit/editwindow.cc	/^void EditWindow::test_begin_line(const Mark& mt)$/;"	f	class:EditWindow
test_begin_noxor	treeedit/editwindow.cc	/^void EditWindow::test_begin_noxor(const Mark& mt)$/;"	f	class:EditWindow
test_end	treeedit/editwindow.cc	/^void EditWindow::test_end(const Mark& mt)$/;"	f	class:EditWindow
test_end	treeedit/select.cc	/^void Select::test_end(const Mark& m, Cpfv cb) const$/;"	f	class:Select
test_end_after	treeedit/select.cc	/^void Select::test_end_after(const Mark& m, Cpfv cb) const$/;"	f	class:Select
test_end_line	treeedit/editwindow.cc	/^void EditWindow::test_end_line(const Mark& mt)$/;"	f	class:EditWindow
test_end_multiline	treeedit/editwindow.cc	/^void EditWindow::test_end_multiline(const Mark& mt)$/;"	f	class:EditWindow
test_end_noxor	treeedit/editwindow.cc	/^void EditWindow::test_end_noxor(const Mark& mt)$/;"	f	class:EditWindow
test_file	windows/edit.c	/^static int test_file(FILE *f)$/;"	f	file:
test_go_back	treeedit/editwindow.cc	/^void EditWindow::test_go_back(const Mark&)$/;"	f	class:EditWindow
test_nothing	treeedit/editwindow.cc	/^void EditWindow::test_nothing(const Mark&)$/;"	f	class:EditWindow
test_noxor	treeedit/select.cc	/^Bool Select::test_noxor(const Mark &m)$/;"	f	class:Select
test_win	windows/output.c	/^static Window test_win = 0;$/;"	v	file:
test_window	windows/output.c	/^void *test_window(void)$/;"	f
test_word_wrap	treeedit/editwindow.cc	/^void EditWindow::test_word_wrap(const Mark& mt)$/;"	f	class:EditWindow
test_word_wrap_end	treeedit/editwindow.cc	/^void EditWindow::test_word_wrap_end(const Mark& mt)$/;"	f	class:EditWindow
test_wrap	treeedit/select.cc	/^Bool Select::test_wrap(const Mark& m) const$/;"	f	class:Select
testend	tools/xpipein.c	/^Atom dummy,testend,textprop;$/;"	v
testend	tools/xpipeout.c	/^Atom dummy,textprop, testend;$/;"	v
testvar	language/stringlib.c	/^static Uchar *testvar=0;$/;"	v	file:
testwin	tools/xpipein.c	/^Window testwin=0;$/;"	v
testwin	tools/xpipeout.c	/^Window testwin=0;$/;"	v
tex_close_proof	output/latexout.c	/^void tex_close_proof(void)$/;"	f
tex_code	output/latexout.c	/^void tex_code(TexCode c)$/;"	f
tex_current_pos	output/latexout.c	/^int tex_current_pos(void)$/;"	f
tex_mode	output/latexout.c	/^void tex_mode(int mode)$/;"	f
tex_open_proof	output/latexout.c	/^void tex_open_proof(void)$/;"	f
tex_placeholders	output/latexout.c	/^void tex_placeholders(Bool texthem)$/;"	f
tex_plhl	output/latexout.c	/^static Bool in_math, in_tabbing, tex_plhl, after_slash, after_macro,$/;"	v	file:
tex_set_file	output/latexout.c	/^void tex_set_file(FILE *f)$/;"	f
tex_set_string	output/latexout.c	/^void tex_set_string(char **str)$/;"	f
tex_to_mode	output/latexout.c	/^void tex_to_mode(int tm)$/;"	f
tex_unset	output/latexout.c	/^void tex_unset(void)$/;"	f
texenc	tools/pktobdf.c	/^char *texenc[256] = { \/* TeX typewriter encoding vector *\/$/;"	v
texf	output/latexout.c	/^static FILE *texf = NULL;$/;"	v	file:
texmode	output/latexout.c	/^static int texmode = 0;$/;"	v	file:
texmode	windows/edit.c	/^static int texmode=MPTEX;$/;"	v	file:
texoutput	output/latexout.c	/^static int texoutput=0; \/* 0=FILE 1=SCHERM 2=STRING *\/$/;"	v	file:
texstring	output/latexout.c	/^static char **texstring = NULL;       \/* LaTeX -> string *\/$/;"	v	file:
text	include/markup.h	/^    int text;     \/* underline\/stroke\/upcase\/large (bitvector) *\/$/;"	m	struct:_attribs
text	templates/match.c	/^    Char *text;$/;"	m	struct:RULE	file:
text	treeedit/node.hh	/^    Bool  text() const { return IsText(_kind); }$/;"	f	class:Node
text	windows/button.c	/^	    Char *text;$/;"	m	struct:__anon75	file:
text	windows/default.c	/^    Char *text;$/;"	m	struct:__anon76	file:
text	windows/getstring.c	/^           Char *text;$/;"	m	struct:STRINGINFO	file:
text	windows/remark.c	/^static Char *text = NULL;$/;"	v	file:
text_only	treeedit/node.cc	/^Bool text_only=MP_False;$/;"	v
textat	windows/edit.c	/^static Atom inputat, outputat, intestat, outtestat, textat, procesidat;$/;"	v	file:
textdots	documents/system.c	/^    textdots = 1,$/;"	v
textprop	tools/xpipein.c	/^Atom dummy,testend,textprop;$/;"	v
textprop	tools/xpipeout.c	/^Atom dummy,textprop, testend;$/;"	v
textremark	windows/edit.c	/^     } textremark[NR_BUTTON+5] = {$/;"	v	typeref:struct:__anon68	file:
tfmwidth	tools/pktobdf.c	/^   integer tfmwidth;$/;"	m	struct:pkchar	file:
th	include/popup.h	/^  int x,y,tw,th;$/;"	m	struct:MENU
theory	module/pvs.c	/^  char *theory;$/;"	m	struct:PVSProof	file:
thickness	include/popupmenu.h	/^    int thickness;$/;"	m	union:PopupLine::__anon55
thinspace	windows/output.c	/^void thinspace(int spacing)$/;"	f
tildestate	util/funcs.c	/^static int tildestate[7] = { 0, 4, 0, 0, 5, 5, 4 };$/;"	v	file:
time_t	module/pvsparse.c	/^typedef __time_t time_t;$/;"	t	file:
timer_t	module/pvsparse.c	/^typedef __timer_t timer_t;$/;"	t	file:
times_uid	module/pvsparse.c	/^  times_uid=3407510728UL,$/;"	v	file:
timespec	module/pvsparse.c	/^struct timespec$/;"	s	file:
timeval	module/pvsparse.c	/^struct timeval$/;"	s	file:
title	include/popupmenu.h	/^  Uchar *title;$/;"	m	struct:PopupMenu
tlist	language/expression.c	/^static Type tlist[1000];$/;"	v	file:
tlist	language/intlib.c	/^static Type tlist[5][4] = {$/;"	v	file:
tlist	language/ptest.c	/^static Type tlist[6][4] = {$/;"	v	file:
tlist	language/reallib.c	/^static Type tlist[5][4] = {$/;"	v	file:
tlist	language/stringlib.c	/^static Type tlist[6][4] = {$/;"	v	file:
tlist	language/typetest.c	/^static Type tlist[7][4];$/;"	v	file:
tlist	module/MAG.c	/^static Type tlist[3][4] = {$/;"	v	file:
tlist	module/parsertemp.c	/^static Type tlist[3][4] = {$/;"	v	file:
tlist	module/pvs.c	/^static Type tlist[4][4] = {$/;"	v	file:
tlist	windows/editlib.c	/^  Type tlist[8];$/;"	m	struct:__anon86	file:
tlist	windows/getstring.c	/^  Type tlist[4];$/;"	m	struct:__anon77	file:
tlist	windows/notadef.c	/^  Type tlist[4];$/;"	m	struct:__anon89	file:
tmplate	module/hugsparse.c	/^static TEMPINFO tmplate[] = $/;"	v	file:
tname	language/typetest.c	/^static char *tname[7][4] = {$/;"	v	file:
to_right	treeedit/select.cc	/^void Select::to_right()$/;"	f	class:Select
toggle_latexmode	windows/notadef.c	/^static void toggle_latexmode(void)$/;"	f	file:
top_builddir	documents/Makefile	/^top_builddir = $(TOPSRCDIR)$/;"	m
top_builddir	include/Makefile	/^top_builddir = $(TOPSRCDIR)$/;"	m
top_builddir	keyboard/Makefile	/^top_builddir = $(TOPSRCDIR)$/;"	m
top_builddir	language/Makefile	/^top_builddir = $(TOPSRCDIR)$/;"	m
top_builddir	markup/Makefile	/^top_builddir = $(TOPSRCDIR)$/;"	m
top_builddir	module/Makefile	/^top_builddir = $(TOPSRCDIR)$/;"	m
top_builddir	output/Makefile	/^top_builddir = $(TOPSRCDIR)$/;"	m
top_builddir	templates/Makefile	/^top_builddir = $(TOPSRCDIR)$/;"	m
top_builddir	tools/Makefile	/^top_builddir = $(TOPSRCDIR)$/;"	m
top_builddir	treeedit/Makefile	/^top_builddir = $(TOPSRCDIR)$/;"	m
top_builddir	unicode/Makefile	/^top_builddir = $(TOPSRCDIR)$/;"	m
top_builddir	util/Makefile	/^top_builddir = $(TOPSRCDIR)$/;"	m
top_builddir	windows/Makefile	/^top_builddir = $(TOPSRCDIR)$/;"	m
toproof	module/pvs.c	/^static PVSProof *toproof=0;$/;"	v	file:
tos	language/expression.c	/^    int tos;                \/* top of stack *\/$/;"	m	struct:ExpEvaStack	file:
total_count	output/latexout.c	/^static int total_count = 1;$/;"	v	file:
totlen	tools/xpipein.c	/^int totlen=0;$/;"	v
tpnr	templates/match.c	/^    int tpnr;$/;"	m	struct:RULE	file:
translate	util/translate.c	/^  Uchar *translate;  \/* translated string *\/$/;"	m	struct:Translation	file:
translate	util/translate.c	/^Uchar *translate(char *orig)$/;"	f
translation	language/parse.y	/^translation :	TRANSLATION IDENTIFIER '{' translines '}'$/;"	l
transline	language/parse.y	/^transline   :   \/* empty *\/$/;"	l
translines	language/parse.y	/^translines  :   transline$/;"	l
translist	util/translate.c	/^  Translation **translist; \/* hashsize pointers to translation strings *\/$/;"	m	struct:__anon67	file:
transpose_char	windows/notadef.c	/^static void transpose_char(void)$/;"	f	file:
transpose_chars	treeedit/editor.cc	/^void transpose_chars(Index n)$/;"	f
transpose_chars	treeedit/node.cc	/^Bool Node::transpose_chars(Index &pos, Index n)$/;"	f	class:Node
transpose_chars	treeedit/select.cc	/^Bool Select::transpose_chars(Index n)$/;"	f	class:Select
transpose_words	treeedit/editor.cc	/^void transpose_words(Index n)$/;"	f
transpose_words	treeedit/node.cc	/^Bool Node::transpose_words(Index &bp, Index &ep, Index &bq, Index &eq)$/;"	f	class:Node
transpose_words	treeedit/select.cc	/^Bool Select::transpose_words(Index n)$/;"	f	class:Select
traverse	treeedit/mark.cc	/^Char Mark::traverse()$/;"	f	class:Mark
tree	include/leaftree.h	/^    BreanchNode *tree;$/;"	m	struct:ltree
tree_walk	treeedit/node.cc	/^Node* Node::tree_walk(Node *stop)$/;"	f	class:Node
tree_walk_skip	treeedit/node.cc	/^Node* Node::tree_walk_skip(Node *stop)$/;"	f	class:Node
triangle	windows/popup.c	/^static XPoint triangle[4];$/;"	v	file:
trsize	windows/popup.c	/^static int trsize;$/;"	v	file:
ts	treeedit/editor.cc	/^Select& ts() { static Select *tsval = new Select(); return *tsval; }$/;"	f
tv	language/expression.c	/^    Value tv[MAX_EESTACK];  \/* temporary values *\/$/;"	m	struct:ExpEvaStack	file:
tv_nsec	module/pvsparse.c	/^    long int tv_nsec;$/;"	m	struct:timespec	file:
tv_sec	module/pvsparse.c	/^    __time_t tv_sec;$/;"	m	struct:timespec	file:
tv_sec	module/pvsparse.c	/^    __time_t tv_sec;$/;"	m	struct:timeval	file:
tv_usec	module/pvsparse.c	/^    __suseconds_t tv_usec;$/;"	m	struct:timeval	file:
tval	language/parse.c	/^	char *tval;$/;"	m	union:__anon14	file:
tw	include/popup.h	/^  int x,y,tw,th;$/;"	m	struct:MENU
type	include/expression.h	/^    char type;          \/* operator, argument or function *\/$/;"	m	struct:Expression
type	include/prototype.h	/^    Type *type;$/;"	m	struct:__anon39
type	include/types.h	/^    Type type;$/;"	m	struct:__anon57
type	windows/sources.c	/^    WINDOWTYPE type;$/;"	m	struct:__anon82	file:
type_cmp	language/types.c	/^static int type_cmp(const void *type1, const void *type2)$/;"	f	file:
type_desc	documents/fileread.c	/^static char *type_desc[MAXFILE] = { "",$/;"	v	file:
type_of_expression	language/expression.c	/^Type *type_of_expression(Expression *e)$/;"	f
typelist	windows/remark.c	/^static Type typelist[8] = {$/;"	v	file:
typelisteq	language/expression.c	/^static int typelisteq(Type *l1, Type *l2)$/;"	f	file:
typepool	language/types.c	/^static FlexArray typepool = { 0,0,0,sizeof(TypeConstruct), type_cmp };$/;"	v	file:
typepool_add	language/types.c	31;"	d	file:
typepool_init	language/types.c	/^static void typepool_init(void)$/;"	f	file:
typepool_item	language/types.c	32;"	d	file:
typepool_max	language/types.c	33;"	d	file:
typepool_search	language/types.c	34;"	d	file:
u_char	module/pvsparse.c	/^typedef __u_char u_char;$/;"	t	file:
u_int	module/pvsparse.c	/^typedef __u_int u_int;$/;"	t	file:
u_int16_t	module/pvsparse.c	/^typedef unsigned int u_int16_t __attribute__ ((__mode__ (__HI__)));$/;"	t	file:
u_int32_t	module/pvsparse.c	/^typedef unsigned int u_int32_t __attribute__ ((__mode__ (__SI__)));$/;"	t	file:
u_int64_t	module/pvsparse.c	/^typedef unsigned int u_int64_t __attribute__ ((__mode__ (__DI__)));$/;"	t	file:
u_int8_t	module/pvsparse.c	/^typedef unsigned int u_int8_t __attribute__ ((__mode__ (__QI__)));$/;"	t	file:
u_long	module/pvsparse.c	/^typedef __u_long u_long;$/;"	t	file:
u_quad_t	module/pvsparse.c	/^typedef __u_quad_t u_quad_t;$/;"	t	file:
u_short	module/pvsparse.c	/^typedef __u_short u_short;$/;"	t	file:
uccancom	unicode/unitype.c	/^MapChar uccancom;     \/* canonical composition class *\/$/;"	v
ucdecomp	unicode/unitype.c	/^MapUstr ucdecomp;     \/* decomposition string *\/$/;"	v
ucdenum	unicode/unitype.c	/^MapUchar ucdenum;     \/* denumerator value, usually 1 *\/$/;"	v
ucdetag	unicode/unitype.c	/^MapChar ucdetag;      \/* decomposition information *\/$/;"	v
ucfinal	unicode/unitype.c	/^MapUchar ucfinal;     \/* arabic final form *\/$/;"	v
uchexval	unicode/unitype.c	/^MapChar uchexval;     \/* hexvalue *\/$/;"	v
ucinitial	unicode/unitype.c	/^MapUchar ucinitial;   \/* arabic initial form *\/$/;"	v
ucisolated	unicode/unitype.c	/^MapUchar ucisolated;  \/* arabic isolated form *\/$/;"	v
uclow	unicode/unitype.c	/^MapUchar uclow;       \/* lowercase *\/$/;"	v
ucmedial	unicode/unitype.c	/^MapUchar ucmedial;    \/* arabic medial form *\/$/;"	v
ucmirror	unicode/unitype.c	/^MapUchar ucmirror;    \/* for bidi algorithm *\/$/;"	v
ucnoaccent	unicode/unitype.c	/^MapUchar ucnoaccent;  \/* for getting base characters *\/$/;"	v
uconvlist	unicode/uniconv.c	/^static UConverter **uconvlist=NULL;$/;"	v	file:
ucspacevar	unicode/unitype.c	/^MapUchar ucspacevar;  \/* spacing variant *\/$/;"	v
uctitle	unicode/unitype.c	/^MapUchar uctitle;     \/* title case *\/$/;"	v
uctype	unicode/unicode.c	/^MapChar uctype =$/;"	v
uctype	unicode/unitype.c	/^MapInt  uctype;       \/* character types\/bidi behaviour *\/$/;"	v
ucup	unicode/unitype.c	/^MapUchar ucup;        \/* upcase *\/$/;"	v
ucvalue	unicode/unitype.c	/^MapUchar ucvalue;     \/* value of character *\/$/;"	v
ufunc	include/expression.h	/^	FuncRef ufunc;$/;"	m	union:Expression::__anon50
uid_t	module/pvsparse.c	/^typedef __uid_t uid_t;$/;"	t	file:
uidnumber	module/hugsparse.c	/^    unsigned long uidnumber;  \/* unique number (given at creation time) *\/$/;"	m	struct:__anon35	file:
uint	module/pvsparse.c	/^typedef unsigned int uint;$/;"	t	file:
ulong	module/pvsparse.c	/^typedef unsigned long int ulong;$/;"	t	file:
umap_copy	unicode/unimap.c	/^void *umap_copy(int size_of_type, void *map, void *(*copy_val)(void*))$/;"	f
umap_create	unicode/unimap.c	/^void *umap_create(int size_of_type)$/;"	f
umap_define	unicode/unimap.c	/^void  umap_define(int size_of_type, void *map, Uchar pos, void *val)$/;"	f
umap_destroy	unicode/unimap.c	/^void  umap_destroy(void *map,$/;"	f
umap_load	unicode/unimap.c	/^void  *umap_load(void *data, int size_of_type, int type_code,$/;"	f
umap_load_file	unicode/unimap.c	/^void *umap_load_file(char *name, int size_of_type, int type_code,$/;"	f
umap_save	unicode/unimap.c	/^void  umap_save(int size_of_type, void *map, FILE *f, int type_code,$/;"	f
umap_shared	unicode/unimap.c	/^int umap_shared=0;$/;"	v
umap_uchar_inverse	unicode/unimap.c	/^MapUchar umap_uchar_inverse(MapUchar source)$/;"	f
uncon_remove_pointer	util/memman.c	/^static void uncon_remove_pointer(void *p)$/;"	f	file:
uncon_remove_pointer	util/memman.c	352;"	d	file:
undefined_font	windows/sources.c	/^void undefined_font(TextMode gcnr)$/;"	f
under	treeedit/editwindow.cc	/^Return* Return::under(const Mark& m)$/;"	f	class:Return
under	treeedit/node.cc	/^Node* Node::under(Index pos)$/;"	f	class:Node
unique_number	windows/notadef.c	/^static unsigned long unique_number = 0;$/;"	v	file:
unite	util/fstate.c	/^static void unite(BITSET *a, BITSET *b, BITSET *c)$/;"	f	file:
unitype_init	unicode/unitype.c	/^void unitype_init(void)$/;"	f
unknownend	module/pvs.c	/^static char unknownend[50];$/;"	v	file:
unknownmess	module/pvs.c	/^static char unknownmess[40];$/;"	v	file:
unlink	treeedit/editwindow.cc	/^Return* Return::unlink()$/;"	f	class:Return
unlink	treeedit/marker.cc	/^void Marker::unlink()$/;"	f	class:Marker
unlink	treeedit/node.cc	/^void Node::unlink()$/;"	f	class:Node
unlock_stencil	templates/notatype.c	/^void unlock_stencil(Index inr)$/;"	f
unlock_stencil_wrapper	windows/notation.c	/^static void unlock_stencil_wrapper(void *data)$/;"	f	file:
unoflang	markup/lang_markup.c	/^static const UNOFLANG unoflang[] = {$/;"	v	file:
unput	language/parselex.c	56;"	d	file:
unput	language/parselex.c	79;"	d	file:
unput	language/parselex.c	83;"	d	file:
unput	module/pvsparselex.c	59;"	d	file:
unput	module/pvsparselex.c	83;"	d	file:
unput	module/pvsparselex.c	87;"	d	file:
unput_buffer	module/pvsparse.c	/^static char unput_buffer[100];$/;"	v	file:
unput_pos	module/pvsparse.c	/^static int unput_pos=0;$/;"	v	file:
unset	treeedit/select.cc	/^void Select::unset()$/;"	f	class:Select
unset_file	documents/fileread.c	/^void unset_file(void)$/;"	f
unset_old	treeedit/select.cc	/^void Select::unset_old()$/;"	f	class:Select
unset_output_window	windows/output.c	/^void unset_output_window(void)$/;"	f
unset_parens	treeedit/editor.cc	/^void unset_parens(void)$/;"	f
unset_parens	treeedit/select.cc	/^void Select::unset_parens()		$/;"	f	class:Select
unset_select	treeedit/editor.cc	/^void unset_select(Index button)$/;"	f
up	treeedit/editor.cc	/^void up(Index button)$/;"	f
up	treeedit/select.cc	/^void Select::up()$/;"	f	class:Select
up_selection	treeedit/editor.cc	/^void up_selection(void *selection)$/;"	f
upcase_word	treeedit/editor.cc	/^void upcase_word(void)$/;"	f
update	treeedit/select.cc	/^void Select::update()$/;"	f	class:Select
update	util/debug.c	/^static lfptr update(lfptr t)$/;"	f	file:
update	util/memman.c	/^static lfptr update(lfptr t)$/;"	f	file:
update_after	output/latexout.c	/^static void update_after(char *str)$/;"	f	file:
update_left	treeedit/editwindow.cc	/^Return* Return::update_left(const Mark& m)$/;"	f	class:Return
update_popups	windows/popup.c	/^void update_popups(void)$/;"	f
update_right	treeedit/editwindow.cc	/^Return* Return::update_right(const Mark& m)$/;"	f	class:Return
update_selections	treeedit/editor.cc	/^void update_selections(void)$/;"	f
update_stack	treeedit/editor.cc	/^static void update_stack(void)$/;"	f	file:
updateedit	language/intlib.c	/^static void updateedit(int *x)$/;"	f	file:
updateedit	language/ptest.c	/^void updateedit(int *x __attribute__((unused)))$/;"	f
updateeditdouble	language/reallib.c	/^static void updateeditdouble(double *x)$/;"	f	file:
updatevar	language/intlib.c	/^static void updatevar(int *x)$/;"	f	file:
updatevar	language/ptest.c	/^void updatevar(int *x)$/;"	f
updatevardouble	language/reallib.c	/^static void updatevardouble(double *x)$/;"	f	file:
upleftcursor	windows/scrollbar.c	62;"	d	file:
usage	tools/pktobdf.c	/^static void usage()$/;"	f	file:
use_alternative	language/sequence.c	/^static int use_alternative(void)$/;"	f	file:
use_argument	windows/menu.c	/^static void use_argument(Char *name)$/;"	f	file:
use_file_nr	templates/notatype.c	/^int use_file_nr=-1;$/;"	v
use_map_string	windows/menu.c	/^static void use_map_string(Char *str)$/;"	f	file:
use_result	module/pvs.c	/^  int use_result;        \/* use final result ? *\/$/;"	m	struct:ProofStep	file:
use_stack	treeedit/editor.cc	/^void use_stack(void)$/;"	f
use_stack	treeedit/select.cc	/^void Select::use_stack()$/;"	f	class:Select
use_state	include/sources.h	/^    void (*use_state)(int,int,int,int,int,int,Char*);$/;"	m	struct:__anon41
use_temporary_map_string	windows/menu.c	/^static void use_temporary_map_string(Char *str, void *beforefunc, void *afterfunc)$/;"	f	file:
use_underline	windows/sources.c	/^static int use_underline[MAX_CELLS\/2];$/;"	v	file:
use_xor	treeedit/editor.cc	/^Bool use_xor=MP_False;$/;"	v
used_eestack	language/expression.c	/^static ExpEvaStack *used_eestack=0; \/* free list *\/$/;"	v	file:
usednums	windows/fonts.c	/^static int usednums[10] = { 0,1,2,3,4,5,6,7,8,50 };$/;"	v	file:
usegray	windows/sources.c	/^static int usegray=0;$/;"	v	file:
user_define	language/userdef.c	/^int user_define(char *name, char *description, Prototype *prototype,$/;"	f
user_destroy	language/userdef.c	/^void user_destroy(FuncRef udef)$/;"	f
user_id	util/funcs.c	/^int user_id=0, group_id=0;$/;"	v
userdef_cmp	language/userdef.c	/^static int userdef_cmp(const void *func1, const void *func2)$/;"	f	file:
userdef_free	language/userdef.c	/^static void userdef_free(void *udef)$/;"	f	file:
userdir	documents/system.c	/^     *userdir = NULL,$/;"	v
userfuncpool	language/userdef.c	/^static LeafTree userfuncpool = {0,userdef_cmp, userdef_free,$/;"	v	file:
userpool_add	language/userdef.c	44;"	d	file:
userpool_found	language/userdef.c	46;"	d	file:
userpool_member	language/userdef.c	45;"	d	file:
ushort	module/pvsparse.c	/^typedef unsigned short int ushort;$/;"	t	file:
using_booleans	module/pvs.c	/^static int using_booleans=0;$/;"	v	file:
utf8decode	unicode/uniconv.c	/^static unsigned char *utf8decode(Uchar *source, unsigned char *target,$/;"	f	file:
utf8defail	unicode/uniconv.c	/^static Uchar *utf8defail(Uchar *text, void *data)$/;"	f	file:
utf8delen	unicode/uniconv.c	/^static int utf8delen(Uchar *text, void *data)$/;"	f	file:
utf8encode	unicode/uniconv.c	/^static Uchar *utf8encode(unsigned char *source, Uchar *target, void *data)$/;"	f	file:
utf8enfail	unicode/uniconv.c	/^static unsigned char *utf8enfail(unsigned char *text, void *data)$/;"	f	file:
utf8enlen	unicode/uniconv.c	/^static int utf8enlen(unsigned char *text, void *data)$/;"	f	file:
utf8name	unicode/uniconv.c	/^Uchar utf8name[]= { 'U', 'T', 'F', '8',0};$/;"	v
utval	language/parse.c	/^        Uchar *utval;$/;"	m	union:__anon14	file:
uval	language/parse.c	/^	FuncRef *uval;$/;"	m	union:__anon14	file:
val	include/expression.h	/^    } val;$/;"	m	struct:Expression	typeref:union:Expression::__anon50
val	include/leaftree.h	/^    DummyAlign val;$/;"	m	struct:lnode
val	include/leaftree.h	/^    void *val;       \/* points to a value in a leaf *\/$/;"	m	struct:bnode
val	include/types.h	/^    TVal val;$/;"	m	struct:__anon57
val	language/powfix.c	/^  short *val;$/;"	m	struct:mint	file:
val	templates/match.c	/^    MT val;$/;"	m	struct:ParseLeaf	file:
val	templates/match.c	/^    MT val;$/;"	m	struct:__anon37	file:
val	util/debug.c	/^    LISTELM *val;$/;"	m	struct:ltnode	file:
val	util/memman.c	/^    LISTELM *val;$/;"	m	struct:ltnode	file:
valid_popup	windows/popup.c	/^static int valid_popup(MENU *menu)$/;"	f	file:
valid_start_position	markup/markup.c	/^int valid_start_position(Uchar *string)$/;"	f
valname	windows/output.c	/^    char *valname;$/;"	m	struct:__anon79::__anon80	file:
valtohex	markup/color_markup.c	/^static char valtohex[]="0123456789ABCDEF";$/;"	v	file:
value	language/typetest.c	/^   Uchar *value;$/;"	m	struct:__anon6	file:
value	language/variable.c	/^    Argument value;$/;"	m	struct:__anon4	file:
value	unicode/unifont.c	/^    short value; \/* attribute value *\/$/;"	m	struct:ATTRIBREC	file:
value	unicode/virtread.c	/^    char value; \/* attribute value *\/$/;"	m	struct:ATTRIBREC	file:
value	windows/output.c	/^    int value;$/;"	m	struct:__anon79::__anon80	file:
value_cmp	language/variable.c	/^static int value_cmp(const void *val1, const void *val2)$/;"	f	file:
valuepool	language/variable.c	/^static FlexArray valuepool = { 0, 0, 0, sizeof(Value), value_cmp };$/;"	v	file:
valuepool_add	language/variable.c	48;"	d	file:
valuepool_item	language/variable.c	49;"	d	file:
valuepool_max	language/variable.c	50;"	d	file:
var	treeedit/node.hh	/^    Bool  var() const { return IsVar(_kind); }$/;"	f	class:Node
var_cmp	language/variable.c	/^static int var_cmp(const void *var1, const void *var2)$/;"	f	file:
var_comma_adjust	treeedit/node.cc	/^void Node::var_comma_adjust(Index& begin, Index& end)$/;"	f	class:Node
var_free	language/variable.c	/^static void var_free(void *var)$/;"	f	file:
vardeflist	language/parse.y	/^vardeflist  :	variabledef$/;"	l
vardefs	language/parse.y	/^vardefs	    :	\/* empty *\/$/;"	l
variable	windows/default.c	/^    void *variable;$/;"	m	struct:__anon76	file:
variable_init	language/variable.c	/^void variable_init(void)$/;"	f
variabledef	language/parse.y	/^variabledef :	VARIABLE TYPEVAL$/;"	l
varlist	util/debug.c	/^LfNode *varlist = 0;$/;"	v
varlist	util/memman.c	/^LfNode *varlist = 0;$/;"	v
verify	language/parselex.c	/^struct yywork { YYTYPE verify, advance; } yycrank[] = {$/;"	m	struct:yywork	file:
verify	module/pvsparse.c	/^struct pvs_yywork { unsigned char verify, advance; } pvs_yycrank[] = {$/;"	m	struct:pvs_yywork	file:
verify	module/pvsparselex.c	/^struct yywork { YYTYPE verify, advance; } yycrank[] = {$/;"	m	struct:yywork	file:
vers	include/notatype.h	/^	  VERSION *vers;$/;"	m	struct:__anon47
vers	templates/notatype.c	/^    VERSION vers;$/;"	m	struct:VERSIONLIST	file:
verscurs	windows/notadef.c	/^static int verscurs=-1, formatcurs=0, poscurs = 0;$/;"	v	file:
version_equal	templates/notatype.c	/^static Bool version_equal(VERSION *a, VERSION *b)$/;"	f	file:
versions	include/notatype.h	/^	  int prec, versions;$/;"	m	struct:__anon47
versionstack	templates/notatype.c	/^static VERSIONLIST *versionstack=NULL, *vfreel=NULL;$/;"	v	file:
vertical	windows/scrollbar.c	/^           Bool vertical;$/;"	m	struct:__anon91	file:
vesc	tools/pktobdf.c	/^   integer hesc, vesc;$/;"	m	struct:pkchar	file:
vfreel	templates/notatype.c	/^static VERSIONLIST *versionstack=NULL, *vfreel=NULL;$/;"	v	file:
view_mode	windows/edit.c	/^                 Bool saved, iconized, auto_saved, view_mode, empty,$/;"	m	struct:__anon69	file:
view_notation_filenames	templates/notatype.c	/^void view_notation_filenames(FILE *f)$/;"	f
viscode	windows/sources.c	/^static int viscode[6] = { StaticGray,  GrayScale, StaticColor,$/;"	v	file:
visible_redraw	treeedit/editor.cc	/^static void visible_redraw()$/;"	f	file:
visname	windows/sources.c	/^static char *visname[6] = { "StaticGray",  "GrayScale", "StaticColor",$/;"	v	file:
visnr	windows/fileselc.c	/^    int visnr;$/;"	m	struct:__anon71	file:
visual	windows/sources.c	/^Visual *visual=NULL;$/;"	v
visualclass	windows/sources.c	/^static int visualclass=-1;$/;"	v	file:
vl	language/expression.c	/^    Value *vl[MAX_EESTACK]; \/* value list *\/$/;"	m	struct:ExpEvaStack	file:
vlist	include/expression.h	/^    Value *vlist;$/;"	m	struct:__anon51
vnr	include/notatype.h	/^struct {  unsigned long vnr;$/;"	m	struct:__anon46
vnr	templates/notatype.c	/^    int vnr;$/;"	m	struct:__anon36	file:
vnr_last	windows/notation.c	/^static int nnr_last = -1, vnr_last = 0;$/;"	v	file:
voffset	tools/pktobdf.c	/^   integer hoffset, voffset;$/;"	m	struct:pkchar	file:
voffset	unicode/drawstring.c	/^    int voffset; \/* vertical offset of accents *\/$/;"	m	struct:__anon96	file:
w	windows/fileselc.c	/^    int x,y,w,h;$/;"	m	struct:__anon71	file:
wait_cursor	windows/sources.c	/^static Cursor wait_cursor=None;$/;"	v	file:
wait_time	documents/system.c	/^    wait_time = 250;$/;"	v
warning_open_template	module/pvs.c	/^  warning_template, warning_open_template,$/;"	v	file:
warning_open_uid	module/pvs.c	/^  warning_open_uid = 2439819391ul,$/;"	v	file:
warning_template	module/pvs.c	/^  warning_template, warning_open_template,$/;"	v	file:
warning_uid	module/pvs.c	/^  warning_uid = 2439819290ul,$/;"	v	file:
wasnewline	treeedit/editwindow.cc	/^Char EditWindow::wasnewline;$/;"	m	class:EditWindow	file:
wasnewline	treeedit/editwindow.hh	/^    static Char wasnewline;$/;"	m	class:EditWindow
wc_window	windows/sources.c	/^static Window wc_window=0;$/;"	v	file:
weightname	tools/pktobdf.c	/^char *weightname="medium";$/;"	v
when_motion_window	windows/sources.c	/^Window motion_window = 0, when_motion_window=0;$/;"	v
where_x	windows/output.c	/^int where_x(void)$/;"	f
where_y	windows/output.c	/^int where_y(void)$/;"	f
which_notation	templates/notatype.c	/^NOTATION *which_notation(int inr)$/;"	f
which_version	templates/notatype.c	/^VERSION *which_version(int inr)$/;"	f
which_version_nr	templates/notatype.c	/^Index which_version_nr(int inr)$/;"	f
white_pixel	windows/sources.c	/^unsigned long white_pixel, black_pixel;$/;"	v
width	include/popupmenu.h	/^  int width,height;$/;"	m	struct:PopupLine
width	include/popupmenu.h	/^  int width,height;$/;"	m	struct:PopupMenu
width	tools/pktobdf.c	/^   integer width, height;$/;"	m	struct:pkchar	file:
width	windows/edit.c	/^                 unsigned int width, height, buflen;$/;"	m	struct:__anon69	file:
width	windows/getstring.c	/^           unsigned int width, height;$/;"	m	struct:STRINGINFO	file:
width	windows/output.c	/^    short width, ascent, descent, x, y, itemnr,$/;"	m	struct:BOX	file:
width	windows/symbol.c	/^	 int xpos, ypos, width, height;$/;"	m	struct:__anon85	file:
width2char	windows/getstring.c	132;"	d	file:
win_height	windows/buffer.c	/^static unsigned int win_width, win_height;$/;"	v	file:
win_height	windows/find.c	/^static unsigned int win_width, win_height;$/;"	v	file:
win_height	windows/menu.c	/^static unsigned int win_width=0, win_height=0, window_width;$/;"	v	file:
win_height	windows/notadef.c	/^static int win_xpos, win_ypos, win_width, win_height;$/;"	v	file:
win_height	windows/notation.c	/^    unsigned win_width, win_height;$/;"	m	struct:__anon74	file:
win_id	windows/button.c	/^            Window win_id;$/;"	m	struct:__anon75	file:
win_id	windows/checkbox.c	/^    Window win_id;$/;"	m	struct:CHECKBOXINFO	file:
win_id	windows/edit.c	/^typedef struct { Window win_id, drawwin_id;$/;"	m	struct:__anon69	file:
win_id	windows/getstring.c	/^           Window win_id;$/;"	m	struct:STRINGINFO	file:
win_id	windows/scrollbar.c	/^           Window win_id;$/;"	m	struct:__anon91	file:
win_id	windows/sources.c	/^    Window win_id, pwin_id;$/;"	m	struct:__anon82	file:
win_name	windows/popup.c	/^static char *win_name="PopUp";$/;"	v	file:
win_name	windows/remark.c	/^static char *win_name="Remark";$/;"	v	file:
win_width	windows/buffer.c	/^static unsigned int win_width, win_height;$/;"	v	file:
win_width	windows/find.c	/^static unsigned int win_width, win_height;$/;"	v	file:
win_width	windows/menu.c	/^static unsigned int win_width=0, win_height=0, window_width;$/;"	v	file:
win_width	windows/notadef.c	/^static int win_xpos, win_ypos, win_width, win_height;$/;"	v	file:
win_width	windows/notation.c	/^    unsigned win_width, win_height;$/;"	m	struct:__anon74	file:
win_xpos	windows/menu.c	/^static int win_xpos=0, win_ypos=0;$/;"	v	file:
win_xpos	windows/notadef.c	/^static int win_xpos, win_ypos, win_width, win_height;$/;"	v	file:
win_xpos	windows/notation.c	/^    int win_xpos, win_ypos;$/;"	m	struct:__anon74	file:
win_ypos	windows/menu.c	/^static int win_xpos=0, win_ypos=0;$/;"	v	file:
win_ypos	windows/notadef.c	/^static int win_xpos, win_ypos, win_width, win_height;$/;"	v	file:
win_ypos	windows/notation.c	/^    int win_xpos, win_ypos;$/;"	m	struct:__anon74	file:
window	treeedit/select.hh	/^    EditWindow* window;$/;"	m	class:Select
window	unicode/brows.c	/^static Window window;$/;"	v	file:
window_changed	treeedit/editor.cc	/^Bool window_changed(void* w)$/;"	f
window_def_keyboard	windows/sources.c	/^void window_def_keyboard(Char *windowtype, Char *list)$/;"	f
window_empty	treeedit/editor.cc	/^Bool window_empty(void* w)$/;"	f
window_find_help	windows/sources.c	/^Char* window_find_help(void)$/;"	f
window_height	windows/menu.c	118;"	d	file:
window_help	windows/sources.c	/^Char* window_help(Window win)$/;"	f
window_keyboard	windows/sources.c	/^void* window_keyboard(Window win)$/;"	f
window_manager_added	windows/sources.c	/^void window_manager_added(Window win, int *x, int *y)$/;"	f
window_width	windows/menu.c	/^static unsigned int win_width=0, win_height=0, window_width;$/;"	v	file:
window_with_base	treeedit/editwindow.cc	/^EditWindow* EditWindow::window_with_base(Node *n)$/;"	f	class:EditWindow
windowdesc	windows/sources.c	/^static char *windowdesc[MAXWINDOWTYPE+2] =$/;"	v	file:
windowkeystack	windows/sources.c	/^static void *windowkeystack[MAXWINDOWTYPE];$/;"	v	file:
windowtype	language/parse.y	/^windowtype  :	CONSOLE$/;"	l
winfo	windows/sources.c	/^static EXTENDEDINFO *winfo = NULL;$/;"	v	file:
winname	unicode/brows.c	/^static XTextProperty winname;$/;"	v	file:
wint_t	module/pvsparse.c	/^typedef unsigned int wint_t;$/;"	t	file:
wm_hints	windows/sources.c	/^XWMHints wm_hints;$/;"	v
wmselection	windows/sources.c	/^char *wmselection = NULL;$/;"	v
wname	windows/popup.c	/^static XTextProperty wname, iname;$/;"	v	file:
wname	windows/remark.c	/^static XTextProperty wname;$/;"	v	file:
word_wrap_full	treeedit/editwindow.cc	/^void EditWindow::word_wrap_full()$/;"	f	class:EditWindow
word_wrap_selection	treeedit/editor.cc	/^void word_wrap_selection(int nr)$/;"	f
word_wrap_selection	treeedit/editwindow.cc	/^void EditWindow::word_wrap_selection(Select* sl)$/;"	f	class:EditWindow
word_wrap_window	treeedit/editor.cc	/^void word_wrap_window(void *w)$/;"	f
wrap	treeedit/editwindow.cc	/^Bool EditWindow::wrap;$/;"	m	class:EditWindow	file:
wrap	treeedit/editwindow.hh	/^    static Bool wrap;$/;"	m	class:EditWindow
wrapped	treeedit/editwindow.cc	/^Bool EditWindow::wrapped;$/;"	m	class:EditWindow	file:
wrapped	treeedit/editwindow.hh	/^    static Bool wrapped;$/;"	m	class:EditWindow
write_all_notations	templates/notatype.c	/^static void write_all_notations(int fnr, FILE *f)$/;"	f	file:
write_defaults	windows/sources.c	/^static void write_defaults(FILE *f)$/;"	f	file:
writecom	util/filefind.c	/^  char *writecom; \/* write command for pipes (%s indicates full filename) *\/$/;"	m	struct:__anon63	file:
wrong_mark	module/pvs.c	/^  wrong_mark=0xd7,$/;"	v	file:
wrong_open_template	module/pvs.c	/^  wrong_template, wrong_open_template,$/;"	v	file:
wrong_open_uid	module/pvs.c	/^  wrong_open_uid = 2439819214ul,$/;"	v	file:
wrong_template	module/pvs.c	/^  wrong_template, wrong_open_template,$/;"	v	file:
wrong_uid	module/pvs.c	/^  wrong_uid = 2439819162ul,$/;"	v	file:
wt	windows/events.c	/^static WINDOWTYPE wt=NOWINDOW, pwt=NOWINDOW;$/;"	v	file:
x	include/popup.h	/^  int x,y,tw,th;$/;"	m	struct:MENU
x	treeedit/editwindow.cc	/^int EditWindow::x;$/;"	m	class:EditWindow	file:
x	treeedit/editwindow.hh	/^    static int x;$/;"	m	class:EditWindow
x	windows/fileselc.c	/^    int x,y,w,h;$/;"	m	struct:__anon71	file:
x	windows/notadef.c	/^         int selection, nr_items, def, x, max, helpnr;$/;"	m	struct:__anon88	file:
x	windows/output.c	/^    short width, ascent, descent, x, y, itemnr,$/;"	m	struct:BOX	file:
x_offset	windows/default.c	/^static int x_offset, y_offset;$/;"	v	file:
xf	windows/fileselc.c	/^    int ygd,yfm,yd,xf,sh; $/;"	m	struct:__anon71	file:
xp	treeedit/editwindow.hh	/^    int xp, yp;$/;"	m	class:EditWindow
xpos	windows/edit.c	/^		 int xpos, ypos;$/;"	m	struct:__anon69	file:
xpos	windows/notadef.c	/^static int xpos, ypos, xposversion, xposname, yposname;$/;"	v	file:
xpos	windows/symbol.c	/^	 int xpos, ypos, width, height;$/;"	m	struct:__anon85	file:
xposname	windows/notadef.c	/^static int xpos, ypos, xposversion, xposname, yposname;$/;"	v	file:
xposversion	windows/notadef.c	/^static int xpos, ypos, xposversion, xposname, yposname;$/;"	v	file:
xsize	treeedit/editwindow.hh	/^    int xsize, ysize;$/;"	m	class:EditWindow
y	include/popup.h	/^  int x,y,tw,th;$/;"	m	struct:MENU
y	treeedit/editwindow.cc	/^int EditWindow::y;$/;"	m	class:EditWindow	file:
y	treeedit/editwindow.hh	/^    static int y;$/;"	m	class:EditWindow
y	windows/fileselc.c	/^    int x,y,w,h;$/;"	m	struct:__anon71	file:
y	windows/output.c	/^    short width, ascent, descent, x, y, itemnr,$/;"	m	struct:BOX	file:
y_n_option	windows/menu.c	/^static Bool y_n_option = MP_False;$/;"	v	file:
y_offset	windows/default.c	/^static int x_offset, y_offset;$/;"	v	file:
yank	treeedit/editor.cc	/^void yank(void)$/;"	f
yank	treeedit/select.cc	/^void Select::yank()$/;"	f	class:Select
yd	windows/fileselc.c	/^    int ygd,yfm,yd,xf,sh; $/;"	m	struct:__anon71	file:
yfm	windows/fileselc.c	/^    int ygd,yfm,yd,xf,sh; $/;"	m	struct:__anon71	file:
ygd	windows/fileselc.c	/^    int ygd,yfm,yd,xf,sh; $/;"	m	struct:__anon71	file:
yline	unicode/brows.c	/^static int yline=0;$/;"	v	file:
yp	treeedit/editwindow.hh	/^    int xp, yp;$/;"	m	class:EditWindow
ypos	windows/edit.c	/^		 int xpos, ypos;$/;"	m	struct:__anon69	file:
ypos	windows/notadef.c	/^static int xpos, ypos, xposversion, xposname, yposname;$/;"	v	file:
ypos	windows/symbol.c	/^	 int xpos, ypos, width, height;$/;"	m	struct:__anon85	file:
yposhelpname	windows/notadef.c	/^static int yposhelpname;$/;"	v	file:
yposname	windows/notadef.c	/^static int xpos, ypos, xposversion, xposname, yposname;$/;"	v	file:
ysize	treeedit/editwindow.hh	/^    int xsize, ysize;$/;"	m	class:EditWindow
yyback	language/parselex.c	/^int yyback(int *p, int m)$/;"	f
yyback	module/pvsparselex.c	/^int yyback(int *p, int m)$/;"	f
yybgin	language/parselex.c	/^struct yysvf *yybgin = yysvec+1;$/;"	v	typeref:struct:yysvf
yybgin	module/pvsparselex.c	/^struct yysvf *yybgin = yysvec+1;$/;"	v	typeref:struct:yysvf
yychar	language/parse.c	/^int	yychar;			\/*  the lookahead symbol		*\/$/;"	v
yycheck	language/parse.c	/^static const short yycheck[] = {     1,$/;"	v	file:
yyclearin	language/parse.c	647;"	d	file:
yycrank	language/parselex.c	/^struct yywork { YYTYPE verify, advance; } yycrank[] = {$/;"	v	typeref:struct:yywork
yycrank	module/pvsparselex.c	/^struct yywork { YYTYPE verify, advance; } yycrank[] = {$/;"	v	typeref:struct:yywork
yydebug	language/parse.c	/^int yydebug;			\/*  nonzero means print parse trace	*\/$/;"	v
yydefact	language/parse.c	/^static const short yydefact[] = {     1,$/;"	v	file:
yydefgoto	language/parse.c	/^static const short yydefgoto[] = {     1,$/;"	v	file:
yyerrok	language/parse.c	646;"	d	file:
yyerror	language/parse.c	/^int yyerror(char *s)$/;"	f
yyestate	language/parselex.c	/^struct yysvf *yyestate;$/;"	v	typeref:struct:yysvf
yyestate	module/pvsparselex.c	/^struct yysvf *yyestate;$/;"	v	typeref:struct:yysvf
yyextra	language/parselex.c	/^char yyextra[] = {$/;"	v
yyextra	module/pvsparselex.c	/^char yyextra[] = {$/;"	v
yyfnd	language/parselex.c	/^int *yyfnd;$/;"	v
yyfnd	module/pvsparselex.c	/^int *yyfnd;$/;"	v
yyin	language/parselex.c	/^FILE *yyin = 0, *yyout = 0;$/;"	v
yyin	module/pvsparselex.c	/^FILE *yyin = 0, *yyout = 0;$/;"	v
yyinput	language/parselex.c	/^int yyinput(void)$/;"	f
yyinput	module/pvsparselex.c	/^int yyinput(void)$/;"	f
yyleng	language/parselex.c	/^int yyleng;$/;"	v
yyleng	module/pvsparselex.c	/^int yyleng;$/;"	v
yylex	language/parselex.c	/^yylex(){$/;"	f
yylex	module/pvsparselex.c	/^yylex(){$/;"	f
yylineno	language/parselex.c	/^int yylineno =1;$/;"	v
yylineno	module/pvsparselex.c	/^int yylineno =1;$/;"	v
yylloc	language/parse.c	/^YYLTYPE yylloc;			\/*  location data for the lookahead	*\/$/;"	v
yylook	language/parselex.c	/^int yylook(void)$/;"	f
yylook	module/pvsparselex.c	/^int yylook(void)$/;"	f
yylsp	language/parselex.c	/^struct yysvf *yylstate [YYLMAX], **yylsp, **yyolsp;$/;"	v	typeref:struct:
yylsp	module/pvsparselex.c	/^struct yysvf *yylstate [YYLMAX], **yylsp, **yyolsp;$/;"	v	typeref:struct:
yylstate	language/parselex.c	/^struct yysvf *yylstate [YYLMAX], **yylsp, **yyolsp;$/;"	v	typeref:struct:yysvf
yylstate	module/pvsparselex.c	/^struct yysvf *yylstate [YYLMAX], **yylsp, **yyolsp;$/;"	v	typeref:struct:yysvf
yylval	language/parse.c	/^YYSTYPE	yylval;			\/*  the semantic value of the		*\/$/;"	v
yymatch	language/parselex.c	/^char yymatch[] = {$/;"	v
yymatch	module/pvsparselex.c	/^char yymatch[] = {$/;"	v
yymore	language/parselex.c	57;"	d	file:
yymore	module/pvsparselex.c	60;"	d	file:
yymorfg	language/parselex.c	/^int yymorfg;$/;"	v
yymorfg	module/pvsparselex.c	/^int yymorfg;$/;"	v
yynerrs	language/parse.c	/^int yynerrs;			\/*  number of parse errors so far       *\/$/;"	v
yyolsp	language/parselex.c	/^struct yysvf *yylstate [YYLMAX], **yylsp, **yyolsp;$/;"	v	typeref:struct:
yyolsp	module/pvsparselex.c	/^struct yysvf *yylstate [YYLMAX], **yylsp, **yyolsp;$/;"	v	typeref:struct:
yyother	language/parselex.c	/^	struct yysvf *yyother;$/;"	m	struct:yysvf	typeref:struct:yysvf::yysvf	file:
yyother	module/pvsparselex.c	/^	struct yysvf *yyother;$/;"	m	struct:yysvf	typeref:struct:yysvf::yysvf	file:
yyout	language/parselex.c	/^FILE *yyin = 0, *yyout = 0;$/;"	v
yyout	module/pvsparselex.c	/^FILE *yyin = 0, *yyout = 0;$/;"	v
yyoutput	language/parselex.c	/^void yyoutput(int c)$/;"	f
yyoutput	module/pvsparselex.c	/^void yyoutput(int c)$/;"	f
yypact	language/parse.c	/^static const short yypact[] = {-32768,$/;"	v	file:
yyparse	language/parse.c	/^yyparse(YYPARSE_PARAM_ARG)$/;"	f
yypgoto	language/parse.c	/^static const short yypgoto[] = {-32768,$/;"	v	file:
yyprevious	language/parselex.c	/^int yyprevious = YYNEWLINE;$/;"	v
yyprevious	module/pvsparselex.c	/^int yyprevious = YYNEWLINE;$/;"	v
yyprhs	language/parse.c	/^static const short yyprhs[] = {     0,$/;"	v	file:
yyr1	language/parse.c	/^static const short yyr1[] = {     0,$/;"	v	file:
yyr2	language/parse.c	/^static const short yyr2[] = {     0,$/;"	v	file:
yyrhs	language/parse.c	/^static const short yyrhs[] = {    -1,$/;"	v	file:
yyrline	language/parse.c	/^static const short yyrline[] = { 0,$/;"	v	file:
yysbuf	language/parselex.c	/^char yysbuf[YYLMAX];$/;"	v
yysbuf	module/pvsparselex.c	/^char yysbuf[YYLMAX];$/;"	v
yysptr	language/parselex.c	/^char *yysptr = yysbuf;$/;"	v
yysptr	module/pvsparselex.c	/^char *yysptr = yysbuf;$/;"	v
yystoff	language/parselex.c	/^	struct yywork *yystoff;$/;"	m	struct:yysvf	typeref:struct:yysvf::yywork	file:
yystoff	module/pvsparselex.c	/^	struct yywork *yystoff;$/;"	m	struct:yysvf	typeref:struct:yysvf::yywork	file:
yystops	language/parselex.c	/^	int *yystops;};$/;"	m	struct:yysvf	file:
yystops	module/pvsparselex.c	/^	int *yystops;};$/;"	m	struct:yysvf	file:
yysvec	language/parselex.c	/^struct yysvf yysvec[] = {$/;"	v	typeref:struct:yysvf
yysvec	module/pvsparselex.c	/^struct yysvf yysvec[] = {$/;"	v	typeref:struct:yysvf
yysvf	language/parselex.c	/^struct yysvf { $/;"	s	file:
yysvf	module/pvsparselex.c	/^struct yysvf { $/;"	s	file:
yytable	language/parse.c	/^static const short yytable[] = {    17,$/;"	v	file:
yytchar	language/parselex.c	/^int yytchar;$/;"	v
yytchar	module/pvsparselex.c	/^int yytchar;$/;"	v
yytext	language/parselex.c	/^char yytext[YYLMAX];$/;"	v
yytext	module/pvsparselex.c	/^char yytext[YYLMAX];$/;"	v
yytname	language/parse.c	/^static const char * const yytname[] = {   "$","error","$undefined.","LOGICOR",$/;"	v	file:
yytop	language/parselex.c	/^struct yywork *yytop = yycrank+934;$/;"	v	typeref:struct:yywork
yytop	module/pvsparselex.c	/^struct yywork *yytop = yycrank+314;$/;"	v	typeref:struct:yywork
yytranslate	language/parse.c	/^static const char yytranslate[] = {     0,$/;"	v	file:
yyunput	language/parselex.c	/^void yyunput(int c)$/;"	f
yyunput	module/pvsparselex.c	/^void yyunput(int c)$/;"	f
yyvstop	language/parselex.c	/^int yyvstop[] = {$/;"	v
yyvstop	module/pvsparselex.c	/^int yyvstop[] = {$/;"	v
yywork	language/parselex.c	/^struct yywork { YYTYPE verify, advance; } yycrank[] = {$/;"	s	file:
yywork	module/pvsparselex.c	/^struct yywork { YYTYPE verify, advance; } yycrank[] = {$/;"	s	file:
yywrap	language/parselex.c	81;"	d	file:
yywrap	language/parselex.c	85;"	d	file:
yywrap	module/pvsparselex.c	85;"	d	file:
yywrap	module/pvsparselex.c	89;"	d	file:
zips_allowed	util/filefind.c	/^static int zips_allowed=1;$/;"	v	file:
~EditWindow	treeedit/editwindow.cc	/^EditWindow::~EditWindow()$/;"	f	class:EditWindow
~Mark	treeedit/mark.cc	/^Mark::~Mark() {}$/;"	f	class:Mark
~Marker	treeedit/marker.cc	/^Marker::~Marker()$/;"	f	class:Marker
~Node	treeedit/node.cc	/^Node::~Node()$/;"	f	class:Node
~Return	treeedit/editwindow.cc	/^Return::~Return()$/;"	f	class:Return
~Select	treeedit/select.cc	/^Select::~Select()$/;"	f	class:Select
